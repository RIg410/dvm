initSidebarItems({"enum":[["LcsType",""],["VmTypeTag","Type of contract argument."],["VmWriteOp","Write set operation type."]],"mod":[["vm_compiler_client","Generated client implementations."],["vm_compiler_server","Generated server implementations."],["vm_module_publisher_client","Generated client implementations."],["vm_module_publisher_server","Generated server implementations."],["vm_multiple_sources_compiler_client","Generated client implementations."],["vm_multiple_sources_compiler_server","Generated server implementations."],["vm_script_executor_client","Generated client implementations."],["vm_script_executor_server","Generated server implementations."],["vm_script_metadata_client","Generated client implementations."],["vm_script_metadata_server","Generated server implementations."],["vm_status",""]],"struct":[["Abort","VmStatus `MoveAbort` case."],["AbortLocation","An `AbortLocation` specifies where a Move program `abort` occurred, either in a function in a module, or in a script."],["CompilationResult",""],["CompilationUnit","Compilation unit."],["CompiledUnit","Compiled source."],["Failure","VmStatus `ExecutionFailure` case."],["FunctionLoc","Function location."],["LcsTag",""],["Message",""],["ModuleIdent",""],["MoveError","VmStatus `Error` case."],["MultipleCompilationResult",""],["Signature",""],["SourceFile","Compiler API"],["SourceFiles","Compiler API"],["StructIdent",""],["VmAccessPath","Storage path"],["VmArgs","Contract arguments."],["VmEvent","VM event returns after contract execution."],["VmExecuteResponse","Response from VM contains write_set, events, gas used and status for specific contract."],["VmExecuteScript","VM contract object to process."],["VmPublishModule","Publish module."],["VmScript","Script Arguments API"],["VmStatus","A `VMStatus` is represented as either - `Null` indicating successful execution. - `Error` indicating an error from the VM itself. - `MoveAbort` indicating an `abort` ocurred inside of a Move program - `ExecutionFailure` indicating an runtime error."],["VmValue","VM value should be passed before execution and return after execution (with opcodes), write_set in nutshell."]]});