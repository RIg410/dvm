(function() {var implementors = {};
implementors["dvm"] = [{"text":"impl Clone for Options","synthetic":false,"types":[]}];
implementors["dvm_cli"] = [{"text":"impl Clone for LoggingOptions","synthetic":false,"types":[]},{"text":"impl Clone for IntegrationsOptions","synthetic":false,"types":[]}];
implementors["dvm_compiler"] = [{"text":"impl&lt;C:&nbsp;Clone + RemoteCache&gt; Clone for Compiler&lt;C&gt;","synthetic":false,"types":[]},{"text":"impl Clone for MoveToml","synthetic":false,"types":[]},{"text":"impl Clone for Package","synthetic":false,"types":[]},{"text":"impl Clone for Layout","synthetic":false,"types":[]},{"text":"impl Clone for ZeroLoader","synthetic":false,"types":[]},{"text":"impl Clone for RestBytecodeLoader","synthetic":false,"types":[]},{"text":"impl Clone for LoaderResponse","synthetic":false,"types":[]},{"text":"impl Clone for Response","synthetic":false,"types":[]},{"text":"impl Clone for LoaderErrorResponse","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Clone + BytecodeLoader&gt; Clone for Loader&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Var&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Local&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Clone for Param&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Clone for Generics","synthetic":false,"types":[]},{"text":"impl Clone for Generic","synthetic":false,"types":[]}];
implementors["dvm_data_source"] = [{"text":"impl Clone for GrpcDataSource","synthetic":false,"types":[]},{"text":"impl&lt;D:&nbsp;Clone&gt; Clone for DsMeter&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: DataSource,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for MockDataSource","synthetic":false,"types":[]},{"text":"impl&lt;D:&nbsp;Clone&gt; Clone for ModuleCache&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: DataSource,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;D:&nbsp;Clone + DataSource&gt; Clone for Lru&lt;D&gt;","synthetic":false,"types":[]},{"text":"impl&lt;D:&nbsp;Clone&gt; Clone for BlackListDataSource&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: DataSource,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["dvm_info"] = [{"text":"impl Clone for InfoServiceConfig","synthetic":false,"types":[]},{"text":"impl Clone for MemoryOptions","synthetic":false,"types":[]},{"text":"impl Clone for HeartRateMonitor","synthetic":false,"types":[]},{"text":"impl Clone for MetricsCollector","synthetic":false,"types":[]},{"text":"impl Clone for ExecutionData","synthetic":false,"types":[]},{"text":"impl Clone for ExecutionResult","synthetic":false,"types":[]},{"text":"impl Clone for SystemMetrics","synthetic":false,"types":[]},{"text":"impl Clone for Metrics","synthetic":false,"types":[]},{"text":"impl Clone for Percentiles","synthetic":false,"types":[]},{"text":"impl Clone for Average","synthetic":false,"types":[]},{"text":"impl Clone for ExecutionMetric","synthetic":false,"types":[]}];
implementors["dvm_net"] = [{"text":"impl Clone for Endpoint","synthetic":false,"types":[]},{"text":"impl Clone for Http","synthetic":false,"types":[]},{"text":"impl Clone for Ipc","synthetic":false,"types":[]}];
implementors["dvm_runtime"] = [{"text":"impl Clone for ExecutionResult","synthetic":false,"types":[]},{"text":"impl Clone for ModuleTx","synthetic":false,"types":[]}];
implementors["dvm_services"] = [{"text":"impl&lt;C:&nbsp;Clone&gt; Clone for CompilerService&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: RemoteCache + Clone + Send + Sync + 'static,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Clone for MetadataService","synthetic":false,"types":[]},{"text":"impl&lt;D:&nbsp;Clone + DataSource&gt; Clone for VmService&lt;D&gt;","synthetic":false,"types":[]}];
implementors["dvm_test_kit"] = [{"text":"impl Clone for Signal","synthetic":false,"types":[]}];
implementors["stdlib"] = [{"text":"impl Clone for Stdlib","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()