(function() {var implementors = {};
implementors["dvm"] = [{"text":"impl !Freeze for Options","synthetic":true,"types":[]}];
implementors["dvm_cli"] = [{"text":"impl Freeze for LoggingOptions","synthetic":true,"types":[]},{"text":"impl Freeze for IntegrationsOptions","synthetic":true,"types":[]}];
implementors["dvm_compiler"] = [{"text":"impl&lt;C&gt; Freeze for Compiler&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for MoveToml","synthetic":true,"types":[]},{"text":"impl Freeze for Package","synthetic":true,"types":[]},{"text":"impl Freeze for Layout","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Freeze for Builder&lt;'a, S&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for DefinitionUses","synthetic":true,"types":[]},{"text":"impl Freeze for BytecodeUses","synthetic":true,"types":[]},{"text":"impl Freeze for ZeroLoader","synthetic":true,"types":[]},{"text":"impl !Freeze for RestBytecodeLoader","synthetic":true,"types":[]},{"text":"impl Freeze for LoaderResponse","synthetic":true,"types":[]},{"text":"impl Freeze for Response","synthetic":true,"types":[]},{"text":"impl Freeze for LoaderErrorResponse","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Freeze for Loader&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Config","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Disassembler&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Body&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ExpLoc&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Exp&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Block&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Cast&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for CastType","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for StructName&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for FnCall&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for BuildIn","synthetic":true,"types":[]},{"text":"impl Freeze for Ld","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Loc&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for LocAccess","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Let&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for BinaryOp&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Abort&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Not&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Op","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for PackField&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Pack&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Ret&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for FieldRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Ref&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Deref&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for WriteRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Unpack&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for BytecodeIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Locals&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Var&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Local&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, 'c, A&gt; Freeze for Translator&lt;'a, 'b, 'c, A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for FunctionsDef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Param&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Generics","synthetic":true,"types":[]},{"text":"impl Freeze for Generic","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for GenericName&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for GenericPrefix","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Imports&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for ImportName&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Module&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Script&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for StructDef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Field&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for FullStructName&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for FType&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for CompiledUnit","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for SourceUnit&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["dvm_data_source"] = [{"text":"impl Freeze for GrpcDataSource","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Freeze for DsMeter&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for MockDataSource","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Freeze for ModuleCache&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Freeze for Lru&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Freeze for BlackListDataSource&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["dvm_info"] = [{"text":"impl !Freeze for InfoServiceConfig","synthetic":true,"types":[]},{"text":"impl Freeze for MemoryOptions","synthetic":true,"types":[]},{"text":"impl Freeze for HeartRateMonitor","synthetic":true,"types":[]},{"text":"impl Freeze for MetricsCollector","synthetic":true,"types":[]},{"text":"impl Freeze for ExecutionData","synthetic":true,"types":[]},{"text":"impl Freeze for ExecutionResult","synthetic":true,"types":[]},{"text":"impl Freeze for SystemMetrics","synthetic":true,"types":[]},{"text":"impl Freeze for ScopeMeter","synthetic":true,"types":[]},{"text":"impl Freeze for Metrics","synthetic":true,"types":[]},{"text":"impl Freeze for Percentiles","synthetic":true,"types":[]},{"text":"impl Freeze for Average","synthetic":true,"types":[]},{"text":"impl Freeze for ExecutionMetric","synthetic":true,"types":[]},{"text":"impl Freeze for Daemon","synthetic":true,"types":[]},{"text":"impl Freeze for PeriodicBackgroundTask","synthetic":true,"types":[]},{"text":"impl Freeze for InfoService","synthetic":true,"types":[]},{"text":"impl Freeze for ServiceMaker","synthetic":true,"types":[]},{"text":"impl !Freeze for MemoryChecker","synthetic":true,"types":[]}];
implementors["dvm_lang"] = [{"text":"impl Freeze for WhitelistVerifier","synthetic":true,"types":[]}];
implementors["dvm_net"] = [{"text":"impl !Freeze for Http","synthetic":true,"types":[]},{"text":"impl Freeze for Ipc","synthetic":true,"types":[]},{"text":"impl !Freeze for Endpoint","synthetic":true,"types":[]},{"text":"impl !Freeze for Stream","synthetic":true,"types":[]},{"text":"impl !Freeze for Listener","synthetic":true,"types":[]},{"text":"impl Freeze for FdGuard","synthetic":true,"types":[]}];
implementors["dvm_runtime"] = [{"text":"impl Freeze for BlockMetadata","synthetic":true,"types":[]},{"text":"impl Freeze for CurrentTimestamp","synthetic":true,"types":[]},{"text":"impl Freeze for Price","synthetic":true,"types":[]},{"text":"impl Freeze for U64Store","synthetic":true,"types":[]},{"text":"impl Freeze for AddressStore","synthetic":true,"types":[]},{"text":"impl Freeze for VectorU8Store","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; !Freeze for Dvm&lt;D&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for Gas","synthetic":true,"types":[]},{"text":"impl Freeze for ExecutionResult","synthetic":true,"types":[]},{"text":"impl Freeze for ModuleTx","synthetic":true,"types":[]},{"text":"impl Freeze for ScriptTx","synthetic":true,"types":[]}];
implementors["dvm_services"] = [{"text":"impl&lt;C&gt; Freeze for CompilerService&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for MetadataService","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Freeze for VmService&lt;D&gt;","synthetic":true,"types":[]}];
implementors["dvm_test_kit"] = [{"text":"impl !Freeze for Server","synthetic":true,"types":[]},{"text":"impl !Freeze for Signal","synthetic":true,"types":[]},{"text":"impl !Freeze for TestKit","synthetic":true,"types":[]}];
implementors["move_decompiler"] = [{"text":"impl Freeze for Opt","synthetic":true,"types":[]}];
implementors["movec"] = [{"text":"impl !Freeze for Opt","synthetic":true,"types":[]}];
implementors["status_table"] = [{"text":"impl Freeze for Opts","synthetic":true,"types":[]}];
implementors["stdlib"] = [{"text":"impl Freeze for Stdlib","synthetic":true,"types":[]},{"text":"impl Freeze for Value","synthetic":true,"types":[]},{"text":"impl Freeze for WS","synthetic":true,"types":[]}];
implementors["stdlib_builder"] = [{"text":"impl Freeze for Opts","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()