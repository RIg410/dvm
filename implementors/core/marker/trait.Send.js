(function() {var implementors = {};
implementors["dvm"] = [{"text":"impl Send for Options","synthetic":true,"types":[]}];
implementors["dvm_cli"] = [{"text":"impl Send for LoggingOptions","synthetic":true,"types":[]},{"text":"impl Send for IntegrationsOptions","synthetic":true,"types":[]}];
implementors["dvm_compiler"] = [{"text":"impl&lt;C&gt; Send for Compiler&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for MoveToml","synthetic":true,"types":[]},{"text":"impl Send for Package","synthetic":true,"types":[]},{"text":"impl Send for Layout","synthetic":true,"types":[]},{"text":"impl&lt;'a, S&gt; Send for Builder&lt;'a, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for DefinitionUses","synthetic":true,"types":[]},{"text":"impl Send for BytecodeUses","synthetic":true,"types":[]},{"text":"impl Send for ZeroLoader","synthetic":true,"types":[]},{"text":"impl Send for RestBytecodeLoader","synthetic":true,"types":[]},{"text":"impl Send for LoaderResponse","synthetic":true,"types":[]},{"text":"impl Send for Response","synthetic":true,"types":[]},{"text":"impl Send for LoaderErrorResponse","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for Loader&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Config","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Disassembler&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Body&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ExpLoc&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Exp&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Block&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Cast&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for CastType","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for StructName&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for FnCall&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for BuildIn","synthetic":true,"types":[]},{"text":"impl Send for Ld","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Loc&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for LocAccess","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Let&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for BinaryOp&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Abort&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Not&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Op","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for PackField&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Pack&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Ret&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for FieldRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Ref&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Deref&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for WriteRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Unpack&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for BytecodeIterator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Locals&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Var&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Local&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, 'b, 'c, A&gt; !Send for Translator&lt;'a, 'b, 'c, A&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for FunctionsDef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Param&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Generics","synthetic":true,"types":[]},{"text":"impl !Send for Generic","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for GenericName&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for GenericPrefix","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Imports&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ImportName&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Module&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Script&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for StructDef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Field&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for FullStructName&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for FType&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for CompiledUnit","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for SourceUnit&lt;'a&gt;","synthetic":true,"types":[]}];
implementors["dvm_data_source"] = [{"text":"impl Send for GrpcDataSource","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Send for DsMeter&lt;D&gt;","synthetic":true,"types":[]},{"text":"impl Send for MockDataSource","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Send for ModuleCache&lt;D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Send for BlackListDataSource&lt;D&gt;","synthetic":true,"types":[]},{"text":"impl&lt;D:&nbsp;DataSource&gt; Send for Lru&lt;D&gt;","synthetic":false,"types":[]}];
implementors["dvm_info"] = [{"text":"impl Send for InfoServiceConfig","synthetic":true,"types":[]},{"text":"impl Send for MemoryOptions","synthetic":true,"types":[]},{"text":"impl Send for HeartRateMonitor","synthetic":true,"types":[]},{"text":"impl Send for MetricsCollector","synthetic":true,"types":[]},{"text":"impl Send for ExecutionData","synthetic":true,"types":[]},{"text":"impl Send for ExecutionResult","synthetic":true,"types":[]},{"text":"impl Send for SystemMetrics","synthetic":true,"types":[]},{"text":"impl Send for ScopeMeter","synthetic":true,"types":[]},{"text":"impl Send for Metrics","synthetic":true,"types":[]},{"text":"impl Send for Percentiles","synthetic":true,"types":[]},{"text":"impl Send for Average","synthetic":true,"types":[]},{"text":"impl Send for ExecutionMetric","synthetic":true,"types":[]},{"text":"impl Send for Daemon","synthetic":true,"types":[]},{"text":"impl Send for PeriodicBackgroundTask","synthetic":true,"types":[]},{"text":"impl Send for InfoService","synthetic":true,"types":[]},{"text":"impl Send for ServiceMaker","synthetic":true,"types":[]},{"text":"impl !Send for MemoryChecker","synthetic":true,"types":[]}];
implementors["dvm_lang"] = [{"text":"impl Send for WhitelistVerifier","synthetic":true,"types":[]}];
implementors["dvm_net"] = [{"text":"impl Send for Http","synthetic":true,"types":[]},{"text":"impl Send for Ipc","synthetic":true,"types":[]},{"text":"impl Send for Endpoint","synthetic":true,"types":[]},{"text":"impl Send for Stream","synthetic":true,"types":[]},{"text":"impl Send for Listener","synthetic":true,"types":[]},{"text":"impl Send for FdGuard","synthetic":true,"types":[]}];
implementors["dvm_runtime"] = [{"text":"impl Send for BlockMetadata","synthetic":true,"types":[]},{"text":"impl Send for CurrentTimestamp","synthetic":true,"types":[]},{"text":"impl Send for Price","synthetic":true,"types":[]},{"text":"impl Send for U64Store","synthetic":true,"types":[]},{"text":"impl Send for AddressStore","synthetic":true,"types":[]},{"text":"impl Send for VectorU8Store","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; !Send for Dvm&lt;D&gt;","synthetic":true,"types":[]},{"text":"impl Send for Gas","synthetic":true,"types":[]},{"text":"impl Send for ExecutionResult","synthetic":true,"types":[]},{"text":"impl Send for ModuleTx","synthetic":true,"types":[]},{"text":"impl !Send for ScriptTx","synthetic":true,"types":[]}];
implementors["dvm_services"] = [{"text":"impl&lt;C&gt; Send for CompilerService&lt;C&gt;","synthetic":true,"types":[]},{"text":"impl Send for MetadataService","synthetic":true,"types":[]},{"text":"impl&lt;D&gt; Send for VmService&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: DataSource,&nbsp;</span>","synthetic":false,"types":[]}];
implementors["dvm_test_kit"] = [{"text":"impl Send for Server","synthetic":true,"types":[]},{"text":"impl Send for Signal","synthetic":true,"types":[]},{"text":"impl Send for TestKit","synthetic":true,"types":[]}];
implementors["move_decompiler"] = [{"text":"impl Send for Opt","synthetic":true,"types":[]}];
implementors["movec"] = [{"text":"impl Send for Opt","synthetic":true,"types":[]}];
implementors["status_table"] = [{"text":"impl Send for Opts","synthetic":true,"types":[]}];
implementors["stdlib"] = [{"text":"impl Send for Stdlib","synthetic":true,"types":[]},{"text":"impl Send for Value","synthetic":true,"types":[]},{"text":"impl Send for WS","synthetic":true,"types":[]}];
implementors["stdlib_builder"] = [{"text":"impl Send for Opts","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()