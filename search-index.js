var searchIndex = JSON.parse('{\
"dvm":{"doc":"Definance Virtual Machine server implementation on tonic &…","i":[[3,"Options","dvm","Definance Virtual Machine combined with Move compilation…",null,null],[12,"address","","Address in the form of HOST_ADDRESS:PORT. The address will…",0,null],[12,"info_service","","",0,null],[12,"memory_config","","",0,null],[12,"ds","","DataSource Server internet address.",0,null],[12,"logging","","",0,null],[12,"integrations","","",0,null],[5,"main","","",null,[[],["result",6]]],[5,"main_internal","","",null,[[["options",3]],["result",6]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"into_request","","",0,[[],["request",3]]],[11,"clone","","",0,[[],["options",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"into_app","","",0,[[],["app",3]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"from_arg_matches","","",0,[[["argmatches",3]]]]],"p":[[3,"Options"]]},\
"dvm_cli":{"doc":"","i":[[5,"init","dvm_cli","Init standard handlers for cli-executable. Create standard…",null,[[["integrationsoptions",3],["loggingoptions",3]],["option",4]]],[5,"init_sigterm_handler","","",null,[[],[["signal",4],["receiver",3]]]],[5,"init_sigterm_handler_fut","","",null,[[]]],[0,"config","","",null,null],[3,"LoggingOptions","dvm_cli::config","",null,null],[12,"verbose","","Enables verbosity logging mode. Sets level of verbosity,…",0,null],[12,"log_filters","","Log filters. The same as standard RUST_LOG environment…",0,null],[12,"log_style","","Log colors and other styles. The same as standard…",0,null],[3,"IntegrationsOptions","","",null,null],[12,"sentry_dsn","","Optional key-uri, enables crash logging service…",1,null],[12,"sentry_env","","Sets the environment code to separate events from testnet…",1,null],[17,"RUST_LOG","","",null,null],[17,"RUST_LOG_STYLE","","",null,null],[17,"DVM_LOG","","",null,null],[17,"DVM_LOG_STYLE","","",null,null],[17,"DVM_DATA_SOURCE","","",null,null],[17,"DVM_SENTRY_DSN","","",null,null],[17,"DVM_SENTRY_ENV","","",null,null],[17,"MAX_LOG_VERBOSE","","",null,null],[0,"info_service","dvm_cli","",null,null],[5,"create_info_service","dvm_cli::info_service","Create and run information service.",null,[[["infoserviceconfig",3]]]],[0,"logging","dvm_cli","",null,null],[5,"init_logging","dvm_cli::logging","Try init `env_logger` and then Libra\'s logger.",null,[[["loggingoptions",3]],[["setloggererror",3],["result",4]]]],[5,"logging_builder","","Create and preconfigure `env_logger::Builder` using…",null,[[["loggingoptions",3]],["builder",3]]],[11,"from","dvm_cli::config","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_request","","",0,[[],["request",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_request","","",1,[[],["request",3]]],[11,"vzip","","",1,[[]]],[11,"clone","","",0,[[],["loggingoptions",3]]],[11,"clone","","",1,[[],["integrationsoptions",3]]],[11,"default","","",0,[[],["loggingoptions",3]]],[11,"default","","",1,[[],["integrationsoptions",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"into_app","","",0,[[],["app",3]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"into_app","","",1,[[],["app",3]]],[11,"augment_clap","","",1,[[["app",3]],["app",3]]],[11,"from_arg_matches","","",0,[[["argmatches",3]]]],[11,"from_arg_matches","","",1,[[["argmatches",3]]]]],"p":[[3,"LoggingOptions"],[3,"IntegrationsOptions"]]},\
"dvm_compiler":{"doc":"Move compiler.","i":[[3,"Compiler","dvm_compiler","Embedded move compiler.",null,null],[5,"compile","","Compiler string with move source code.",null,[[["accountaddress",3],["option",4]],[["result",6],["vec",3]]]],[0,"cmd","","Movec commands handler.",null,null],[0,"build","dvm_compiler::cmd","Project builder.",null,null],[5,"execute","dvm_compiler::cmd::build","Execute build command.",null,[[["path",3],["movetoml",3]],["result",6]]],[0,"check","dvm_compiler::cmd","Project checker.",null,null],[5,"execute","dvm_compiler::cmd::check","Execute check command.",null,[[["path",3],["movetoml",3]],["result",6]]],[0,"init","dvm_compiler::cmd","Project initializer.",null,null],[5,"execute","dvm_compiler::cmd::init","Execute init command.",null,[[["string",3],["uri",3],["path",3],["option",4],["option",4]],[["error",3],["result",4]]]],[0,"new","dvm_compiler::cmd","Project creator.",null,null],[5,"execute","dvm_compiler::cmd::new","Execute create project command.",null,[[["string",3],["uri",3],["path",3],["option",4],["option",4]],[["error",3],["result",4]]]],[0,"update","dvm_compiler::cmd","Project dependencies loader.",null,null],[5,"execute","dvm_compiler::cmd::update","Execute update dependencies command.",null,[[["path",3],["movetoml",3]],[["error",3],["result",4]]]],[11,"new","dvm_compiler","Create move compiler.",0,[[],["compiler",3]]],[11,"compile_source_map","","Compile multiple sources.",0,[[["hashmap",3],["string",3],["accountaddress",3],["option",4]],[["result",6],["hashmap",3]]]],[11,"compile","","Compiler source codes.",0,[[["accountaddress",3],["option",4]],[["result",6],["vec",3]]]],[0,"manifest","","Movec configuration.",null,null],[3,"MoveToml","dvm_compiler::manifest","Movec manifest.",null,null],[12,"package","","Project info.",1,null],[12,"layout","","Project layout.",1,null],[3,"Package","","Project info.",null,null],[12,"name","","Project name.",2,null],[12,"account_address","","Project AccountAddress.",2,null],[12,"authors","","Authors list.",2,null],[12,"blockchain_api","","dnode base url.",2,null],[3,"Layout","","Project layout.",null,null],[12,"module_dir","","Directory with module sources.",3,null],[12,"script_dir","","Directory with script sources.",3,null],[12,"bytecode_cache","","Movec cache.",3,null],[12,"module_output","","Directory with compiled modules.",3,null],[12,"script_output","","Directory with compiled scripts.",3,null],[12,"temp_dir","","Processing directory.",3,null],[5,"read_manifest","","Reads the manifest by path.",null,[[["path",3]],[["result",4],["error",3],["movetoml",3]]]],[5,"store_manifest","","Stores the manifest by path.",null,[[["path",3],["movetoml",3]],[["error",3],["result",4]]]],[17,"MANIFEST","","Movec manifest name.",null,null],[11,"new","","Create a new layout.",3,[[],["layout",3]]],[11,"fill","","Fill layout with default values.",3,[[]]],[0,"bech32","dvm_compiler","bech32 -> libra related utils",null,null],[5,"bech32_into_libra","dvm_compiler::bech32","Convert bech32 wallet1 prefixed address into 20 bytes…",null,[[],[["string",3],["result",6]]]],[5,"libra_into_bech32","","Convert libra 20 byte address into bech32 form.",null,[[],[["string",3],["result",6]]]],[5,"replace_bech32_addresses","","Replace all occurrences of bech32 addresses in the…",null,[[],["string",3]]],[7,"HRP","","Fixed prefix of all dfinance bech32 addresses.",null,null],[0,"builder","dvm_compiler","Move builder.",null,null],[3,"Builder","dvm_compiler::builder","Move builder.",null,null],[5,"report_errors","","Prints errors to stdout.",null,[[["errors",6],["filessourcetext",6]]]],[5,"convert_path","","Converts paths buffers into strings.",null,[[],[["result",6],["vec",3]]]],[0,"dependence","dvm_compiler","Dependencies loader.",null,null],[0,"extractor","dvm_compiler::dependence","Dependencies extractor.",null,null],[3,"DefinitionUses","dvm_compiler::dependence::extractor","Source definition dependencies extractor.",null,null],[3,"BytecodeUses","","Bytecode dependencies extractor.",null,null],[5,"extract_from_source","","Extract dependencies from source code.",null,[[["accountaddress",3],["option",4]],[["result",6],["hashset",3]]]],[5,"extract_from_bytecode","","Extract dependencies from bytecode.",null,[[],[["result",6],["hashset",3]]]],[0,"loader","dvm_compiler::dependence","Dependencies loader.",null,null],[3,"ZeroLoader","dvm_compiler::dependence::loader","Empty module loader. Mock.",null,null],[3,"RestBytecodeLoader","","Bytecode loader which loads bytecode by dnode REST api.",null,null],[3,"LoaderResponse","","Api response.",null,null],[3,"Response","","Success response.",null,null],[3,"LoaderErrorResponse","","Error response.",null,null],[3,"Loader","","Module loader.",null,null],[5,"make_rest_loader","","Makes a RestBytecodeLoader with project path and project…",null,[[["path",3],["movetoml",3]],[["option",4],["result",6]]]],[8,"BytecodeLoader","","Module loader.",null,null],[10,"load","","Loads module bytecode by it module id.",4,[[["moduleid",3]],[["result",6],["vec",3]]]],[0,"disassembler","dvm_compiler","Move lang disassembler.",null,null],[3,"Config","dvm_compiler::disassembler","Disassembler configuration.",null,null],[12,"light_version","","Use light disassembler version.",5,null],[3,"Disassembler","","Move disassembler.",null,null],[5,"disasm","","Disassemble bytecode with config and write source code to…",null,[[["config",3]],[["error",3],["result",4]]]],[5,"disasm_str","","Disassemble bytecode with config.",null,[[["config",3]],[["string",3],["error",3],["result",4]]]],[5,"write_array","","Encode encodable array.",null,[[],[["error",3],["result",4]]]],[0,"code","","Code disassembler.",null,null],[0,"body","dvm_compiler::disassembler::code","Function body representation.",null,null],[3,"Body","dvm_compiler::disassembler::code::body","Function body representation.",null,null],[0,"exp","dvm_compiler::disassembler::code","Code expression.",null,null],[3,"ExpLoc","dvm_compiler::disassembler::code::exp","Expression wrapper that adds bytecode location of this…",null,null],[4,"Exp","","Move expression.",null,null],[13,"Abort","","Abort. (abort)",6,null],[13,"Ld","","Load literal or constant. (5)",6,null],[13,"Error","","Disassembler error.",6,null],[13,"Local","","Local variable.",6,null],[13,"Cast","","Cast types. (as)",6,null],[13,"BinaryOp","","Binary operation.",6,null],[13,"Basket","","Expression in parentheses.",6,null],[13,"Not","","Logical negation.",6,null],[13,"FnCall","","Function call.",6,null],[13,"Let","","Local variable assignment.",6,null],[13,"Pack","","Struct constructor.",6,null],[13,"Unpack","","Struct destructor.",6,null],[13,"Ret","","Return.",6,null],[13,"FieldRef","","Structures field access.",6,null],[13,"Ref","","Reference.",6,null],[13,"Deref","","Dereference.",6,null],[13,"WriteRef","","Assign reference.",6,null],[13,"Loop","","Infinite Loop.",6,null],[13,"While","","While loop.",6,null],[13,"If","","If else expression.",6,null],[13,"Break","","Break.",6,null],[13,"Continue","","Continue.",6,null],[13,"Nop","","Nothing.",6,null],[5,"find_range","","Returns bytecode range of the given expressions.",null,[[],["option",4]]],[0,"block","","Block of expressions in curly braces.",null,null],[3,"Block","dvm_compiler::disassembler::code::exp::block","Block of expressions in curly braces.",null,null],[0,"branching","dvm_compiler::disassembler::code::exp","Branching algorithms.",null,null],[5,"br_true","dvm_compiler::disassembler::code::exp::branching","Handles `BrTrue` instruction.",null,[[],["exp",4]]],[5,"br_false","","Handles `BrFalse` instruction.",null,[[],["exp",4]]],[5,"br","","Handles `Branch` instruction.",null,[[],["exp",4]]],[0,"cast","dvm_compiler::disassembler::code::exp","Cast.",null,null],[3,"Cast","dvm_compiler::disassembler::code::exp::cast","Cast representation.",null,null],[4,"CastType","","Cast types.",null,null],[13,"U8","","Cast to u8.",7,null],[13,"U64","","Cast to u64.",7,null],[13,"U128","","Cast to u128.",7,null],[0,"function","dvm_compiler::disassembler::code::exp","Function call.",null,null],[3,"StructName","dvm_compiler::disassembler::code::exp::function","Struct full name.",null,null],[12,"name","","Struct name.",8,null],[12,"import","","Struct import.",8,null],[4,"FnCall","","Function call representation.",null,null],[13,"BuildIn","","Call build-in function.",9,null],[12,"kind","dvm_compiler::disassembler::code::exp::function::FnCall","Build-in function kind.",10,null],[12,"type_param_name","","Type parameter.",10,null],[12,"type_params","","Type parameters of type parameter.",10,null],[12,"params","","Parameters.",10,null],[13,"Plain","dvm_compiler::disassembler::code::exp::function","Call plain function.",9,null],[12,"module","dvm_compiler::disassembler::code::exp::function::FnCall","Function module.",11,null],[12,"name","","Function name.",11,null],[12,"type_params","","Type parameters.",11,null],[12,"params","","Parameters.",11,null],[4,"BuildIn","dvm_compiler::disassembler::code::exp::function","Build-in functions.",null,null],[13,"Exists","","exists",12,null],[13,"MoveFrom","","move_from",12,null],[13,"MoveTo","","move_to",12,null],[13,"BorrowGlobal","","borrow_global",12,null],[13,"BorrowGlobalMut","","borrow_global_mut",12,null],[0,"ld","dvm_compiler::disassembler::code::exp","Load literal or constant.",null,null],[4,"Ld","dvm_compiler::disassembler::code::exp::ld","Load literal or constant.",null,null],[13,"U8","","U8 literal.",13,null],[13,"U64","","U64 literal.",13,null],[13,"U128","","U128 literal.",13,null],[13,"Bool","","Bool literal.",13,null],[13,"Address","","Address constant.",13,null],[13,"Vector","","Vector constant.",13,null],[0,"loc","dvm_compiler::disassembler::code::exp","Load local variable.",null,null],[3,"Loc","dvm_compiler::disassembler::code::exp::loc","Local variable assignment.",null,null],[4,"LocAccess","","Access type.",null,null],[13,"Move","","Move local.",14,null],[13,"Copy","","Copy local.",14,null],[0,"lt","dvm_compiler::disassembler::code::exp","Local variable assignment.",null,null],[3,"Let","dvm_compiler::disassembler::code::exp::lt","Assign local variable expression.",null,null],[0,"operators","dvm_compiler::disassembler::code::exp","Build in operators.",null,null],[3,"BinaryOp","dvm_compiler::disassembler::code::exp::operators","Binary operation.",null,null],[12,"left","","Left operand.",15,null],[12,"sign","","Operator.",15,null],[12,"right","","Right operand.",15,null],[3,"Abort","","Abort expression.",null,null],[3,"Not","","Logical negation.",null,null],[4,"Op","","Binary operation.",null,null],[13,"Add","","",16,null],[13,"Sub","","",16,null],[13,"Mul","","",16,null],[13,"Mod","","%",16,null],[13,"Div","","/",16,null],[13,"BitOr","","|",16,null],[13,"BitAnd","","&",16,null],[13,"Xor","","^",16,null],[13,"Or","","||",16,null],[13,"And","","&&",16,null],[13,"Eq","","==",16,null],[13,"Neq","","!=",16,null],[13,"Lt","","<",16,null],[13,"Gt","","",16,null],[13,"Le","","<=",16,null],[13,"Ge","","=",16,null],[13,"Shl","","",16,null],[13,"Shr","","<<",16,null],[5,"nop","","Nop.",null,[[],["exp",4]]],[5,"pop","","Pop stack.",null,[[],["exp",4]]],[0,"pack","dvm_compiler::disassembler::code::exp","Struct constructor.",null,null],[3,"PackField","dvm_compiler::disassembler::code::exp::pack","Pack field.",null,null],[12,"name","","Field name.",17,null],[12,"value","","Field value.",17,null],[3,"Pack","","Struct pack.",null,null],[12,"module","","Struct import.",18,null],[12,"name","","Struct name.",18,null],[12,"type_params","","Struct type parameters.",18,null],[12,"fields","","Struct fields.",18,null],[0,"ret","dvm_compiler::disassembler::code::exp","Return statement.",null,null],[3,"Ret","dvm_compiler::disassembler::code::exp::ret","Return expression.",null,null],[12,"ret_list","","Result tuple.",19,null],[12,"explicit_keyword","","is explicit return required.",19,null],[0,"rf","dvm_compiler::disassembler::code::exp","Reference.",null,null],[3,"FieldRef","dvm_compiler::disassembler::code::exp::rf","Field reference.",null,null],[3,"Ref","","Reference.",null,null],[3,"Deref","","Dereference expressions.",null,null],[3,"WriteRef","","Write reference representation.",null,null],[0,"unpack","dvm_compiler::disassembler::code::exp","Struct destructor.",null,null],[3,"Unpack","dvm_compiler::disassembler::code::exp::unpack","Unpack expressions.",null,null],[12,"module","","Struct import.",20,null],[12,"name","","Struct name.",20,null],[12,"type_params","","Struct type parameters.",20,null],[12,"fields","","Struct fields.",20,null],[12,"source","","Struct instance.",20,null],[8,"SourceRange","dvm_compiler::disassembler::code::exp","Range in the bytecode.",null,null],[10,"source_range","","Returns index range.",21,[[],["option",4]]],[0,"iter","dvm_compiler::disassembler::code","Bytecode iterator.",null,null],[3,"BytecodeIterator","dvm_compiler::disassembler::code::iter","Bytecode iterator.",null,null],[0,"locals","dvm_compiler::disassembler::code","Local variables.",null,null],[3,"Locals","dvm_compiler::disassembler::code::locals","Local variable representation.",null,null],[12,"inner","","Local variables.",22,null],[3,"Var","","Variable.",null,null],[4,"Local","","Local variable.",null,null],[13,"Param","","Function parameters.",23,null],[13,"Var","","Variable.",23,null],[0,"translator","dvm_compiler::disassembler::code","Bytecode translator.",null,null],[3,"Translator","dvm_compiler::disassembler::code::translator","Bytecode translator.",null,null],[8,"Context","","Transaction context. Provides functions for bytecode…",null,null],[10,"pop_exp","","Removes the last element from a expression list and…",24,[[],["exploc",3]]],[10,"last_exp","","Returns reference to the last element of a expression list…",24,[[],[["exploc",3],["option",4]]]],[10,"pop2_exp","","Removes the two last elements from a expression list and…",24,[[]]],[10,"pop_exp_vec","","Removes the `exp_count` last elements from a expression…",24,[[],[["vec",3],["exploc",3]]]],[10,"module_import","","Returns module Import by its handle reference.",24,[[["modulehandle",3]],[["import",6],["option",4]]]],[10,"extract_signature","","Extracts signature by its index.",24,[[["option",4],["signatureindex",3]],[["ftype",4],["vec",3]]]],[10,"local_var","","Returns local variable by its index.",24,[[],["local",4]]],[10,"opcode_offset","","Returns current bytecode offset.",24,[[]]],[10,"pack_fields","","Returns struct fields by its definition.",24,[[["structdefinition",3]],[["packfield",3],["vec",3]]]],[10,"translate_block","","Translates next `block_size` bytecode instructions and…",24,[[],[["vec",3],["exploc",3]]]],[10,"next_opcode","","Returns next bytecode instruction and updates bytecode…",24,[[],[["option",4],["bytecode",4]]]],[10,"loc","","Wraps the given expression at the current location.",24,[[["exp",4]],["exploc",3]]],[10,"opcode_by_relative_offset","","Returns the bytecode instruction by relative index.",24,[[],["bytecode",4]]],[10,"opcode_by_absolute_offset","","Returns the bytecode instruction by absolute index.",24,[[],["bytecode",4]]],[10,"end_offset","","Returns the last bytecode offset of the current context.",24,[[]]],[10,"remaining_code","","Returns remaining bytecode instructions.",24,[[]]],[10,"err","","Returns error expression.",24,[[],["exp",4]]],[0,"functions","dvm_compiler::disassembler","Function disassembler.",null,null],[3,"FunctionsDef","dvm_compiler::disassembler::functions","Function representation.",null,null],[3,"Param","","Function parameter representation.",null,null],[0,"generics","dvm_compiler::disassembler","Generic disassembler.",null,null],[3,"Generics","dvm_compiler::disassembler::generics","Generics template.",null,null],[3,"Generic","","Generic representation.",null,null],[3,"GenericName","","Generic name.",null,null],[4,"GenericPrefix","","Generics prefix.",null,null],[13,"SimplePrefix","","Simple generic prefix. Prefix from generic prefix table.",25,null],[13,"Generated","","Random generic prefix.",25,null],[5,"extract_type_params","","Extract type parameters.",null,[[["generics",3]],[["vec",3],["generic",3]]]],[5,"write_type_parameters","","Write type parameters to writer.",null,[[],[["error",3],["result",4]]]],[0,"imports","dvm_compiler::disassembler","Imports disassembler.",null,null],[3,"Imports","dvm_compiler::disassembler::imports","Unit imports table.",null,null],[4,"ImportName","","Import name.",null,null],[13,"Name","","Simple module name.",26,null],[13,"Alias","","Import alias.",26,null],[6,"Import","","Import representation.",null,null],[0,"module","dvm_compiler::disassembler","Module disassembler.",null,null],[3,"Module","dvm_compiler::disassembler::module","Module representation.",null,null],[0,"script","dvm_compiler::disassembler","Struct disassembler.",null,null],[3,"Script","dvm_compiler::disassembler::script","Script representation.",null,null],[0,"structs","dvm_compiler::disassembler","Struct disassembler.",null,null],[3,"StructDef","dvm_compiler::disassembler::structs","Struct representation.",null,null],[3,"Field","","Struct field representation.",null,null],[0,"types","dvm_compiler::disassembler","Common types.",null,null],[3,"FullStructName","dvm_compiler::disassembler::types","Full structure name.",null,null],[4,"FType","","Type.",null,null],[13,"Generic","","Generic type.",27,null],[13,"Primitive","","Primitive type.",27,null],[13,"Ref","","Reference type.",27,null],[13,"RefMut","","Mutable reference type.",27,null],[13,"Vec","","Vector type.",27,null],[13,"Struct","","Struct type.",27,null],[13,"StructInst","","Struct instantiation instance.",27,null],[5,"extract_type_signature","","Extract type signature.",null,[[["signaturetoken",4],["imports",3]],["ftype",4]]],[5,"extract_struct_name","","Extract struct name.",null,[[["structhandleindex",3],["imports",3]],["fullstructname",3]]],[0,"unit","dvm_compiler::disassembler","Bytecode abstractions.",null,null],[4,"CompiledUnit","dvm_compiler::disassembler::unit","Undefined bytecode abstraction.",null,null],[13,"Script","","Compiled script.",28,null],[13,"Module","","Compiled module.",28,null],[4,"SourceUnit","","Restored move ast.",null,null],[13,"Script","","Script ast.",29,null],[13,"Module","","Module ast.",29,null],[8,"UnitAccess","","Undefined bytecode accessor.",null,null],[10,"is_script","","Returns true if the bytecode is script bytecode.",30,[[]]],[10,"script_info","","Returns script-specific data.",30,[[],["option",4]]],[10,"self_id","","Returns unit id.",30,[[],["moduleid",3]]],[10,"module_handles","","Returns modules handlers.",30,[[]]],[10,"module_handle","","Returns module handle by its index.",30,[[["modulehandleindex",3]],["modulehandle",3]]],[10,"identifiers","","Returns identifiers.",30,[[]]],[10,"identifier","","Returns identifier by its index.",30,[[["identifierindex",3]]]],[10,"address","","Returns account address by its index.",30,[[["addressidentifierindex",3]],["accountaddress",3]]],[10,"self_module_handle_idx","","Returns self module handle",30,[[],[["option",4],["modulehandleindex",3]]]],[10,"function_defs","","Returns functions definition.",30,[[]]],[10,"function_handle","","Returns function definition by its index.",30,[[["functionhandleindex",3]],["functionhandle",3]]],[10,"function_instantiation","","Returns function instruction by its index.",30,[[["functioninstantiationindex",3]],["functioninstantiation",3]]],[10,"signature","","Returns signature by its index.",30,[[["signatureindex",3]],["signature",3]]],[10,"struct_defs","","Returns structures definition.",30,[[]]],[10,"struct_def","","Returns struct definition by its index.",30,[[["structdefinitionindex",3]],[["option",4],["structdefinition",3]]]],[10,"struct_handle","","Returns struct handle by its index.",30,[[["structhandleindex",3]],["structhandle",3]]],[10,"struct_def_instantiation","","Returns struct definition instruction by its index.",30,[[["structdefinstantiationindex",3]],[["option",4],["structdefinstantiation",3]]]],[10,"field_instantiation","","Returns field instruction by its index.",30,[[["fieldinstantiationindex",3]],[["option",4],["fieldinstantiation",3]]]],[10,"constant","","Returns constant by its index.",30,[[["constantpoolindex",3]],["constant",3]]],[10,"field_handle","","Returns field handle by its index.",30,[[["fieldhandleindex",3]],[["option",4],["fieldhandle",3]]]],[17,"INDENT","dvm_compiler::disassembler","Code indent.",null,null],[8,"Encode","","Encode to move code.",null,null],[10,"encode","","Writes component source representation into writer with…",31,[[],[["error",3],["result",4]]]],[0,"preprocessor","dvm_compiler","Move source preprocessor.",null,null],[5,"pre_processing","dvm_compiler::preprocessor","Preprocess move code.",null,[[],["string",3]]],[11,"from","dvm_compiler","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","dvm_compiler::manifest","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"vzip","","",1,[[]]],[11,"erased_serialize","","",1,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"erased_serialize","","",2,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"test_only_hash","","",3,[[],["hashvalue",3]]],[11,"vzip","","",3,[[]]],[11,"erased_serialize","","",3,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","dvm_compiler::builder","",32,[[]]],[11,"into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","dvm_compiler::dependence::extractor","",33,[[]]],[11,"into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","dvm_compiler::dependence::loader","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"test_only_hash","","",37,[[],["hashvalue",3]]],[11,"vzip","","",37,[[]]],[11,"erased_serialize","","",37,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"test_only_hash","","",38,[[],["hashvalue",3]]],[11,"vzip","","",38,[[]]],[11,"erased_serialize","","",38,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"test_only_hash","","",39,[[],["hashvalue",3]]],[11,"vzip","","",39,[[]]],[11,"erased_serialize","","",39,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","dvm_compiler::disassembler","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","dvm_compiler::disassembler::code::body","",42,[[]]],[11,"into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","dvm_compiler::disassembler::code::exp","",43,[[]]],[11,"into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","dvm_compiler::disassembler::code::exp::block","",44,[[]]],[11,"into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","dvm_compiler::disassembler::code::exp::cast","",45,[[]]],[11,"into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","dvm_compiler::disassembler::code::exp::function","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","dvm_compiler::disassembler::code::exp::ld","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","dvm_compiler::disassembler::code::exp::loc","",46,[[]]],[11,"into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","dvm_compiler::disassembler::code::exp::lt","",47,[[]]],[11,"into","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","dvm_compiler::disassembler::code::exp::operators","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","dvm_compiler::disassembler::code::exp::pack","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","dvm_compiler::disassembler::code::exp::ret","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","dvm_compiler::disassembler::code::exp::rf","",50,[[]]],[11,"into","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","dvm_compiler::disassembler::code::exp::unpack","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","dvm_compiler::disassembler::code::iter","",54,[[]]],[11,"into","","",54,[[]]],[11,"into_iter","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"par_bridge","","",54,[[],["iterbridge",3]]],[11,"from","dvm_compiler::disassembler::code::locals","",22,[[]]],[11,"into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","dvm_compiler::disassembler::code::translator","",56,[[]]],[11,"into","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"from","dvm_compiler::disassembler::functions","",57,[[]]],[11,"into","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"from","dvm_compiler::disassembler::generics","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"vzip","","",59,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","dvm_compiler::disassembler::imports","",62,[[]]],[11,"into","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","dvm_compiler::disassembler::module","",63,[[]]],[11,"into","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"from","dvm_compiler::disassembler::script","",64,[[]]],[11,"into","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"from","dvm_compiler::disassembler::structs","",65,[[]]],[11,"into","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"from","dvm_compiler::disassembler::types","",67,[[]]],[11,"into","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","dvm_compiler::disassembler::unit","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"load","dvm_compiler::dependence::loader","",35,[[["moduleid",3]],[["result",6],["vec",3]]]],[11,"load","","",36,[[["moduleid",3]],[["result",6],["vec",3]]]],[11,"source_range","dvm_compiler::disassembler::code::exp::block","",44,[[],["option",4]]],[11,"source_range","dvm_compiler::disassembler::code::exp::cast","",45,[[],["option",4]]],[11,"source_range","dvm_compiler::disassembler::code::exp::function","",9,[[],["option",4]]],[11,"source_range","dvm_compiler::disassembler::code::exp::ld","",13,[[],["option",4]]],[11,"source_range","dvm_compiler::disassembler::code::exp::loc","",46,[[],["option",4]]],[11,"source_range","dvm_compiler::disassembler::code::exp::lt","",47,[[],["option",4]]],[11,"source_range","dvm_compiler::disassembler::code::exp::operators","",15,[[],["option",4]]],[11,"source_range","","",48,[[],["option",4]]],[11,"source_range","","",49,[[],["option",4]]],[11,"source_range","dvm_compiler::disassembler::code::exp::pack","",18,[[],["option",4]]],[11,"source_range","dvm_compiler::disassembler::code::exp::ret","",19,[[],["option",4]]],[11,"source_range","dvm_compiler::disassembler::code::exp::rf","",50,[[],["option",4]]],[11,"source_range","","",51,[[],["option",4]]],[11,"source_range","","",52,[[],["option",4]]],[11,"source_range","","",53,[[],["option",4]]],[11,"source_range","dvm_compiler::disassembler::code::exp::unpack","",20,[[],["option",4]]],[11,"source_range","dvm_compiler::disassembler::code::exp","",43,[[],["option",4]]],[11,"pop_exp","dvm_compiler::disassembler::code::translator","",56,[[],["exploc",3]]],[11,"last_exp","","",56,[[],[["exploc",3],["option",4]]]],[11,"pop2_exp","","",56,[[]]],[11,"pop_exp_vec","","",56,[[],[["vec",3],["exploc",3]]]],[11,"module_import","","",56,[[["modulehandle",3]],[["import",6],["option",4]]]],[11,"extract_signature","","",56,[[["option",4],["signatureindex",3]],[["ftype",4],["vec",3]]]],[11,"local_var","","",56,[[],["local",4]]],[11,"opcode_offset","","",56,[[]]],[11,"pack_fields","","",56,[[["structdefinition",3]],[["packfield",3],["vec",3]]]],[11,"translate_block","","",56,[[],[["vec",3],["exploc",3]]]],[11,"next_opcode","","",56,[[],[["option",4],["bytecode",4]]]],[11,"loc","","",56,[[["exp",4]],["exploc",3]]],[11,"opcode_by_relative_offset","","",56,[[],["bytecode",4]]],[11,"opcode_by_absolute_offset","","",56,[[],["bytecode",4]]],[11,"end_offset","","",56,[[]]],[11,"remaining_code","","",56,[[]]],[11,"err","","",56,[[],["exp",4]]],[11,"is_script","dvm_compiler::disassembler::unit","",28,[[]]],[11,"script_info","","",28,[[],["option",4]]],[11,"self_id","","",28,[[],["moduleid",3]]],[11,"module_handles","","",28,[[]]],[11,"module_handle","","",28,[[["modulehandleindex",3]],["modulehandle",3]]],[11,"identifiers","","",28,[[]]],[11,"identifier","","",28,[[["identifierindex",3]]]],[11,"address","","",28,[[["addressidentifierindex",3]],["accountaddress",3]]],[11,"self_module_handle_idx","","",28,[[],[["option",4],["modulehandleindex",3]]]],[11,"function_defs","","",28,[[]]],[11,"function_handle","","",28,[[["functionhandleindex",3]],["functionhandle",3]]],[11,"function_instantiation","","",28,[[["functioninstantiationindex",3]],["functioninstantiation",3]]],[11,"signature","","",28,[[["signatureindex",3]],["signature",3]]],[11,"struct_defs","","",28,[[]]],[11,"struct_def","","",28,[[["structdefinitionindex",3]],[["option",4],["structdefinition",3]]]],[11,"struct_handle","","",28,[[["structhandleindex",3]],["structhandle",3]]],[11,"struct_def_instantiation","","",28,[[["structdefinstantiationindex",3]],[["option",4],["structdefinstantiation",3]]]],[11,"field_instantiation","","",28,[[["fieldinstantiationindex",3]],[["option",4],["fieldinstantiation",3]]]],[11,"constant","","",28,[[["constantpoolindex",3]],["constant",3]]],[11,"field_handle","","",28,[[["fieldhandleindex",3]],[["option",4],["fieldhandle",3]]]],[11,"encode","dvm_compiler::disassembler::code::body","",42,[[],[["error",3],["result",4]]]],[11,"encode","dvm_compiler::disassembler::code::exp::block","",44,[[],[["error",3],["result",4]]]],[11,"encode","dvm_compiler::disassembler::code::exp::cast","",45,[[],[["error",3],["result",4]]]],[11,"encode","","",7,[[],[["error",3],["result",4]]]],[11,"encode","dvm_compiler::disassembler::code::exp::function","",9,[[],[["error",3],["result",4]]]],[11,"encode","","",12,[[],[["error",3],["result",4]]]],[11,"encode","","",8,[[],[["error",3],["result",4]]]],[11,"encode","dvm_compiler::disassembler::code::exp::ld","",13,[[],[["error",3],["result",4]]]],[11,"encode","dvm_compiler::disassembler::code::exp::loc","",46,[[],[["error",3],["result",4]]]],[11,"encode","","",14,[[],[["error",3],["result",4]]]],[11,"encode","dvm_compiler::disassembler::code::exp::lt","",47,[[],[["error",3],["result",4]]]],[11,"encode","dvm_compiler::disassembler::code::exp::operators","",15,[[],[["error",3],["result",4]]]],[11,"encode","","",16,[[],[["error",3],["result",4]]]],[11,"encode","","",48,[[],[["error",3],["result",4]]]],[11,"encode","","",49,[[],[["error",3],["result",4]]]],[11,"encode","dvm_compiler::disassembler::code::exp::pack","",17,[[],[["error",3],["result",4]]]],[11,"encode","","",18,[[],[["error",3],["result",4]]]],[11,"encode","dvm_compiler::disassembler::code::exp::ret","",19,[[],[["error",3],["result",4]]]],[11,"encode","dvm_compiler::disassembler::code::exp::rf","",50,[[],[["error",3],["result",4]]]],[11,"encode","","",51,[[],[["error",3],["result",4]]]],[11,"encode","","",52,[[],[["error",3],["result",4]]]],[11,"encode","","",53,[[],[["error",3],["result",4]]]],[11,"encode","dvm_compiler::disassembler::code::exp::unpack","",20,[[],[["error",3],["result",4]]]],[11,"encode","dvm_compiler::disassembler::code::exp","",43,[[],[["error",3],["result",4]]]],[11,"encode","","",6,[[],[["error",3],["result",4]]]],[11,"encode","dvm_compiler::disassembler::code::locals","",55,[[],[["error",3],["result",4]]]],[11,"encode","","",23,[[],[["error",3],["result",4]]]],[11,"encode","dvm_compiler::disassembler::functions","",57,[[],[["error",3],["result",4]]]],[11,"encode","","",58,[[],[["error",3],["result",4]]]],[11,"encode","dvm_compiler::disassembler::generics","",59,[[],[["error",3],["result",4]]]],[11,"encode","","",60,[[],[["error",3],["result",4]]]],[11,"encode","","",61,[[],[["error",3],["result",4]]]],[11,"encode","dvm_compiler::disassembler::imports","",62,[[],[["error",3],["result",4]]]],[11,"encode","","",26,[[],[["error",3],["result",4]]]],[11,"encode","dvm_compiler::disassembler::module","",63,[[],[["error",3],["result",4]]]],[11,"encode","dvm_compiler::disassembler::script","",64,[[],[["error",3],["result",4]]]],[11,"encode","dvm_compiler::disassembler::structs","",65,[[],[["error",3],["result",4]]]],[11,"encode","","",66,[[],[["error",3],["result",4]]]],[11,"encode","dvm_compiler::disassembler::types","",27,[[],[["error",3],["result",4]]]],[11,"encode","","",67,[[],[["error",3],["result",4]]]],[11,"drop","dvm_compiler::builder","Cleans up the builder layout.",32,[[]]],[11,"as_mut","dvm_compiler::disassembler::code::exp","",43,[[],["exp",4]]],[11,"as_ref","","",43,[[],["exp",4]]],[11,"next","dvm_compiler::disassembler::code::iter","",54,[[],["option",4]]],[11,"clone","dvm_compiler","",0,[[],["compiler",3]]],[11,"clone","dvm_compiler::manifest","",1,[[],["movetoml",3]]],[11,"clone","","",2,[[],["package",3]]],[11,"clone","","",3,[[],["layout",3]]],[11,"clone","dvm_compiler::dependence::loader","",35,[[],["zeroloader",3]]],[11,"clone","","",36,[[],["restbytecodeloader",3]]],[11,"clone","","",37,[[],["loaderresponse",3]]],[11,"clone","","",38,[[],["response",3]]],[11,"clone","","",39,[[],["loadererrorresponse",3]]],[11,"clone","","",40,[[],["loader",3]]],[11,"clone","dvm_compiler::disassembler::code::locals","",55,[[],["var",3]]],[11,"clone","","",23,[[],["local",4]]],[11,"clone","dvm_compiler::disassembler::functions","",58,[[],["param",3]]],[11,"clone","dvm_compiler::disassembler::generics","",59,[[],["generics",3]]],[11,"clone","","",60,[[],["generic",3]]],[11,"default","dvm_compiler::manifest","",1,[[],["movetoml",3]]],[11,"default","","",2,[[],["package",3]]],[11,"default","","",3,[[],["layout",3]]],[11,"default","dvm_compiler::dependence::extractor","",33,[[],["definitionuses",3]]],[11,"default","","",34,[[],["bytecodeuses",3]]],[11,"default","dvm_compiler::dependence::loader","",37,[[],["loaderresponse",3]]],[11,"default","","",38,[[],["response",3]]],[11,"default","","",39,[[],["loadererrorresponse",3]]],[11,"fmt","dvm_compiler::manifest","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_compiler::dependence::loader","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_compiler::disassembler::code::exp::block","",44,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_compiler::disassembler::code::exp::cast","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_compiler::disassembler::code::exp::function","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_compiler::disassembler::code::exp::ld","",13,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_compiler::disassembler::code::exp::loc","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_compiler::disassembler::code::exp::lt","",47,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_compiler::disassembler::code::exp::operators","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_compiler::disassembler::code::exp::pack","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_compiler::disassembler::code::exp::ret","",19,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_compiler::disassembler::code::exp::rf","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_compiler::disassembler::code::exp::unpack","",20,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_compiler::disassembler::code::exp","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_compiler::disassembler::code::locals","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_compiler::disassembler::functions","",58,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_compiler::disassembler::generics","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_compiler::disassembler::imports","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_compiler::disassembler::types","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_compiler::disassembler::unit","",28,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_compiler::disassembler","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"serialize","dvm_compiler::manifest","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","dvm_compiler::dependence::loader","",37,[[],["result",4]]],[11,"serialize","","",38,[[],["result",4]]],[11,"serialize","","",39,[[],["result",4]]],[11,"deserialize","dvm_compiler::manifest","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","dvm_compiler::dependence::loader","",37,[[],["result",4]]],[11,"deserialize","","",38,[[],["result",4]]],[11,"deserialize","","",39,[[],["result",4]]],[11,"new","dvm_compiler::builder","Creates a new move builder.",32,[[["movetoml",3],["option",4],["path",3]],["builder",3]]],[11,"init_build_layout","","Initializes directory layout.",32,[[],["result",6]]],[11,"load_dependencies","","Load dependencies for each source file.",32,[[],[["result",6],["hashmap",3]]]],[11,"make_dependencies_as_source","","Disassembles dependencies.",32,[[["moduleid",3],["hashmap",3],["vec",3]],[["result",6],["vec",3]]]],[11,"make_source_map","","Makes source map.",32,[[],[["result",6],["vec",3]]]],[11,"preprocess_source_map","","Runs source preprocessor for each source file.",32,[[["vec",3],["pathbuf",3]],[["result",6],["vec",3]]]],[11,"compile","","Compile source list with dependencies.",32,[[["vec",3],["pathbuf",3]],["result",6]]],[11,"check","","Check source files.",32,[[["vec",3],["pathbuf",3]],["result",6]]],[11,"verify_and_store","","Verify and store compiled units.",32,[[["compiledunit",4],["vec",3],["filessourcetext",6]],["result",6]]],[11,"verify","","Verifies sources.",32,[[["compiledunit",4],["vec",3],["filessourcetext",6]],[["result",6],["hashmap",3]]]],[11,"with_address","dvm_compiler::dependence::extractor","Creates extractor with account address.",33,[[["accountaddress",3],["option",4]],["definitionuses",3]]],[11,"extract","","Extracts dependencies from definition.",33,[[["definition",4]],["result",6]]],[11,"imports","","Returns imports.",33,[[],[["moduleid",3],["hashset",3]]]],[11,"imports","","Returns imports.",34,[[],[["moduleid",3],["hashset",3]]]],[11,"extract","","Extracts dependencies from compiled module.",34,[[["compiledmodule",3]],["result",6]]],[11,"new","dvm_compiler::dependence::loader","Create a new `RestBytecodeLoader` with dnode api base url.",36,[[["uri",3]],["restbytecodeloader",3]]],[11,"new","","Create a new module loader with cache path and external…",40,[[["option",4],["pathbuf",3]],["loader",3]]],[11,"get","","Loads module by module id. Tries to load the module from…",40,[[["moduleid",3]],[["result",6],["vec",3]]]],[11,"new","dvm_compiler::disassembler::code::body","Create a new Body.",42,[[["codeunit",3],["imports",3]],["body",3]]],[11,"mock","","Returns body with abort instruction.",42,[[],["body",3]]],[11,"new","dvm_compiler::disassembler::code::exp::block","Create a new Block.",44,[[["vec",3],["exploc",3]],["block",3]]],[11,"mock","","Returns block with abort instruction. Used for light…",44,[[],["block",3]]],[11,"exp","dvm_compiler::disassembler::code::exp::cast","Create a new cast expression.",45,[[["casttype",4]],["exp",4]]],[11,"plain","dvm_compiler::disassembler::code::exp::function","Creates a new call plain function expression.",9,[[["functionhandleindex",3],["option",4],["signatureindex",3]],["exp",4]]],[11,"build_in","","Creates a new call build-in function expression.",9,[[["signatureindex",3],["buildin",4],["structdefinitionindex",3],["option",4]],["exp",4]]],[11,"parameters_count","","Returns parameters count.",12,[[]]],[11,"u8","dvm_compiler::disassembler::code::exp::ld","Locals u8 literal.",13,[[],["exp",4]]],[11,"u64","","Locals u64 literal.",13,[[],["exp",4]]],[11,"u128","","Locals u128 literal.",13,[[],["exp",4]]],[11,"bool","","Locals bool literal.",13,[[],["exp",4]]],[11,"ld_const","","Locals constant.",13,[[["constantpoolindex",3]],["exp",4]]],[11,"exp","dvm_compiler::disassembler::code::exp::loc","Create a new loc expression.",46,[[["locaccess",4]],["exp",4]]],[11,"exp","dvm_compiler::disassembler::code::exp::lt","Create a new `Let` expressions.",47,[[],["exp",4]]],[11,"exp","dvm_compiler::disassembler::code::exp::operators","Create a new `BinaryOp` expressions.",15,[[["op",4]],["exp",4]]],[11,"exp","","Create a new `Abort` expressions.",48,[[],["exp",4]]],[11,"mock","","Returns Abort with the given expression.",48,[[["exploc",3]],["exp",4]]],[11,"exp","","Create a new `Not` expressions.",49,[[],["exp",4]]],[11,"exp","dvm_compiler::disassembler::code::exp::pack","Create a new `Pack` expressions.",18,[[["signatureindex",3],["structdefinitionindex",3],["option",4]],["exp",4]]],[11,"exp","dvm_compiler::disassembler::code::exp::ret","Create a new `Ret` expression.",19,[[],["exp",4]]],[11,"is_empty","","Returns `true` if the function empty tuple.",19,[[]]],[11,"is_explicit","","Returns `true` if the explicit return keyword required.",19,[[]]],[11,"exp","dvm_compiler::disassembler::code::exp::rf","Field reference.",50,[[["fieldhandleindex",3]],["exp",4]]],[11,"exp","","Create a new reference expression.",51,[[],["exp",4]]],[11,"exp","","Create a new `Deref` expressions.",52,[[],["exp",4]]],[11,"exp","","Create a new `WriteRef` expressions.",53,[[],["exp",4]]],[11,"exp","dvm_compiler::disassembler::code::exp::unpack","Creates a new `Unpack` expressions;",20,[[["signatureindex",3],["structdefinitionindex",3],["option",4]],["exp",4]]],[11,"new","dvm_compiler::disassembler::code::exp","Create a new `ExpLoc`.",43,[[["exp",4]],["exploc",3]]],[11,"index","","Returns expression start index in the bytecode.",43,[[]]],[11,"range","","Returns index range of the expression.",43,[[]]],[11,"val","","Returns inner expression.",43,[[],["exp",4]]],[11,"is_nop","","Returns `true` if the current expression is `Exp::Nop`.",6,[[]]],[11,"source_range","","Returns bytecode range of the curent expression.",6,[[],["option",4]]],[11,"new","dvm_compiler::disassembler::code::iter","Create a new bytecode iterator.",54,[[],["bytecodeiterator",3]]],[11,"index","","Returns current bytecode instruction index.",54,[[]]],[11,"as_slice","","Returns a reference to all bytecode instructions.",54,[[]]],[11,"remaining_code","","Returns a reference to remaining bytecode instructions.",54,[[]]],[11,"absolute","","Returns a bytecode instruction by absolute offset.",54,[[],["bytecode",4]]],[11,"by_relative","","Returns a bytecode instruction by relative offset.",54,[[],["bytecode",4]]],[11,"new","dvm_compiler::disassembler::code::locals","Create a new local variables.",22,[[["signature",3],["imports",3]],["locals",3]]],[11,"get","","Returns local variables by its index.",22,[[],["local",4]]],[11,"mock","","Returns the empty locals variables list. Used for light…",22,[[],["locals",3]]],[11,"mark_as_used","","Makes variable as used.",55,[[]]],[11,"write_name","","Writes variable name to the given writer.",55,[[],[["error",3],["result",4]]]],[11,"mark_as_used","","Makes local variable as used.",23,[[]]],[11,"write_name","","Writes local variable name to the given writer.",23,[[],[["error",3],["result",4]]]],[11,"new","dvm_compiler::disassembler::code::translator","Creates a new translator.",56,[[["locals",3],["bytecodeiterator",3],["imports",3]],["translator",3]]],[11,"translate","","Translates bytecode instructions.",56,[[]]],[11,"expressions","","Returns transaction results.",56,[[],[["vec",3],["exploc",3]]]],[11,"new","dvm_compiler::disassembler::functions","Returns module function representation.",57,[[["functiondefinition",3],["generics",3],["config",3],["imports",3]],["functionsdef",3]]],[11,"script","","Returns script main function representation.",57,[[["generics",3],["imports",3]],["functionsdef",3]]],[11,"mark_as_used","","Marks a parameter as used.",58,[[]]],[11,"write_name","","Writes parameter name.",58,[[],[["error",3],["result",4]]]],[11,"new","dvm_compiler::disassembler::generics","Create a new generics.",59,[[],["generics",3]]],[11,"create_generic","","Create generic.",59,[[["kind",4]],["generic",3]]],[11,"as_name","","Returns generic name.",60,[[],["genericname",3]]],[11,"new","dvm_compiler::disassembler::imports","Create a new imports table.",62,[[],["imports",3]]],[11,"get_import","","Returns import by address and module name.",62,[[["accountaddress",3]],[["import",6],["option",4]]]],[11,"is_empty","","Returns `true` if the import contains no elements.",62,[[]]],[11,"new","dvm_compiler::disassembler::module","Creates a new module.",63,[[["config",3],["generics",3],["imports",3]],["module",3]]],[11,"new","dvm_compiler::disassembler::script","Creates a new script.",64,[[["generics",3],["config",3],["imports",3]],["script",3]]],[11,"new","dvm_compiler::disassembler::structs","Create a new struct.",65,[[["generics",3],["structdefinition",3],["imports",3],["config",3]],["structdef",3]]],[11,"new","dvm_compiler::disassembler::unit","Create a new CompiledUnit with the given bytecode.",28,[[],[["compiledunit",4],["error",3],["result",4]]]],[11,"write_code","","Writes source code to the given writer.",29,[[],[["error",3],["result",4]]]],[11,"code_string","","Returns source code.",29,[[],[["string",3],["error",3],["result",4]]]],[11,"new","dvm_compiler::disassembler","Create a new disassembler.",41,[[["config",3],["compiledunit",4]],["disassembler",3]]],[11,"make_source_unit","","Convert a CompiledUnit to the SourceUnit.",41,[[],["sourceunit",4]]]],"p":[[3,"Compiler"],[3,"MoveToml"],[3,"Package"],[3,"Layout"],[8,"BytecodeLoader"],[3,"Config"],[4,"Exp"],[4,"CastType"],[3,"StructName"],[4,"FnCall"],[13,"BuildIn"],[13,"Plain"],[4,"BuildIn"],[4,"Ld"],[4,"LocAccess"],[3,"BinaryOp"],[4,"Op"],[3,"PackField"],[3,"Pack"],[3,"Ret"],[3,"Unpack"],[8,"SourceRange"],[3,"Locals"],[4,"Local"],[8,"Context"],[4,"GenericPrefix"],[4,"ImportName"],[4,"FType"],[4,"CompiledUnit"],[4,"SourceUnit"],[8,"UnitAccess"],[8,"Encode"],[3,"Builder"],[3,"DefinitionUses"],[3,"BytecodeUses"],[3,"ZeroLoader"],[3,"RestBytecodeLoader"],[3,"LoaderResponse"],[3,"Response"],[3,"LoaderErrorResponse"],[3,"Loader"],[3,"Disassembler"],[3,"Body"],[3,"ExpLoc"],[3,"Block"],[3,"Cast"],[3,"Loc"],[3,"Let"],[3,"Abort"],[3,"Not"],[3,"FieldRef"],[3,"Ref"],[3,"Deref"],[3,"WriteRef"],[3,"BytecodeIterator"],[3,"Var"],[3,"Translator"],[3,"FunctionsDef"],[3,"Param"],[3,"Generics"],[3,"Generic"],[3,"GenericName"],[3,"Imports"],[3,"Module"],[3,"Script"],[3,"StructDef"],[3,"Field"],[3,"FullStructName"]]},\
"dvm_data_source":{"doc":"Interface between MoveVM `StateView` implementation and…","i":[[0,"grpc","dvm_data_source","`GrpcDataSource` to wrap all gRPC calls to `dnode`.",null,null],[3,"GrpcDataSource","dvm_data_source::grpc","Wrapper around gRPC-based interface to dnode. Used for the…",null,null],[5,"access_path_into_ds","","Convert Libra\'s `AccessPath` into gRPC `DsAccessPath`.",null,[[["accesspath",3]],["dsaccesspath",3]]],[6,"ShutdownSig","","Receiver for a channel that handles shutdown signals.",null,null],[11,"new","","Create an instance of gRPC based data source for VM.…",0,[[["option",4],["uri",3],["shutdownsig",6]],[["result",4],["grpcdatasource",3],["error",3]]]],[11,"get","","Returns chain data by access path.",0,[[["accesspath",3]],[["result",4],["option",4],["error",3]]]],[0,"metrics","dvm_data_source","Defines `DsMeter` which implements `StateView` and adds…",null,null],[3,"DsMeter","dvm_data_source::metrics","Wrapper for data source which collects metrics queries.",null,null],[11,"new","","Constructor",1,[[],["dsmeter",3]]],[0,"mock","dvm_data_source","`MockDataSource` to be used in test_kit.",null,null],[3,"MockDataSource","dvm_data_source::mock","`StateView` implementation to be used in test_kit.",null,null],[11,"new","","Proxy to default() constructor.",2,[[],["mockdatasource",3]]],[11,"with_write_set","","Create `MockDataSource` with `write_set` applied.",2,[[["writeset",3]],["mockdatasource",3]]],[11,"to_write_set","","Extract `WriteSet` from internal state.",2,[[],[["writeset",3],["error",3],["result",4]]]],[11,"publish_module","","Add module to internal state.",2,[[["vec",3]],[["error",3],["moduleid",3],["result",4]]]],[11,"publish_module_with_id","","Add module with `ModuleId` to internal state.",2,[[["moduleid",3],["vec",3]],[["error",3],["result",4]]]],[11,"clear","","Clear internal chain data.",2,[[]]],[11,"get","","Returns chain data by access path.",2,[[["accesspath",3]],[["option",4],["vec",3]]]],[11,"insert","","Wrapper around internal `HashMap.insert()`.",2,[[["accesspath",3],["vec",3]]]],[11,"delete","","Wrapper around internal `HashMap.delete()`.",2,[[["accesspath",3]]]],[11,"merge_write_set","","Merge `WriteSet` into internal chain state.",2,[[["writeset",3]]]],[0,"module_cache","dvm_data_source","Defines `ModuleCache` which implements caching for…",null,null],[3,"ModuleCache","dvm_data_source::module_cache","Cached `DataSource`.",null,null],[3,"Lru","","Modules lru cache.",null,null],[8,"BinarySize","","Provides a binary size info.",null,null],[10,"size","","Result size of self.",3,[[]]],[11,"new","","Create new cached data source with `cache_size` max cache…",4,[[],["modulecache",3]]],[11,"new","","Constructor.",5,[[],["lru",3]]],[11,"read_through","","Reads module through cache.",5,[[["moduleid",3]],[["vmresult",6],["option",4]]]],[11,"remove","","Remove module from cache.",5,[[["moduleid",3]]]],[11,"cache_size","","Returns the cache binary size.",5,[[]]],[0,"blacklist","dvm_data_source","Defines `BlackListDataSource` which provides implements…",null,null],[3,"BlackListDataSource","dvm_data_source::blacklist","Wrapper for data source which returns blank for requests…",null,null],[11,"new","","Create a new BlackListDataSource with DataSource.",6,[[],["blacklistdatasource",3]]],[11,"add_module","","Add module to the blacklist.",6,[[["moduleid",3]]]],[11,"add_resource","","Add resource to the blacklist.",6,[[["structtag",3],["accountaddress",3]]]],[8,"DataSource","dvm_data_source","Thread-safe `StateView`.",null,null],[8,"RemoveModule","","Trait to `remove_module` internal data structure.",null,null],[11,"remove_module","","Removes the module by its id.",7,[[["moduleid",3]]]],[11,"from","dvm_data_source::grpc","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"into_request","","",0,[[],["request",3]]],[11,"from","dvm_data_source::metrics","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"into_request","","",1,[[],["request",3]]],[11,"from","dvm_data_source::mock","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"into_request","","",2,[[],["request",3]]],[11,"from","dvm_data_source::module_cache","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"into_request","","",4,[[],["request",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"into_request","","",5,[[],["request",3]]],[11,"from","dvm_data_source::blacklist","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"into_request","","",6,[[],["request",3]]],[11,"remove_module","dvm_data_source::metrics","",1,[[["moduleid",3]]]],[11,"remove_module","dvm_data_source::module_cache","",4,[[["moduleid",3]]]],[11,"remove_module","dvm_data_source::blacklist","",6,[[["moduleid",3]]]],[11,"clone","dvm_data_source::grpc","",0,[[],["grpcdatasource",3]]],[11,"clone","dvm_data_source::metrics","",1,[[],["dsmeter",3]]],[11,"clone","dvm_data_source::mock","",2,[[],["mockdatasource",3]]],[11,"clone","dvm_data_source::module_cache","",4,[[],["modulecache",3]]],[11,"clone","","",5,[[],["lru",3]]],[11,"clone","dvm_data_source::blacklist","",6,[[],["blacklistdatasource",3]]],[11,"default","dvm_data_source::mock","",2,[[],["mockdatasource",3]]],[11,"fmt","dvm_data_source::metrics","",1,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_data_source::mock","",2,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_data_source::module_cache","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_data_source::blacklist","",6,[[["formatter",3]],["result",6]]],[11,"get_module","dvm_data_source::grpc","",0,[[["moduleid",3]],[["vmresult",6],["option",4]]]],[11,"get_resource","","",0,[[["structtag",3],["accountaddress",3]],[["option",4],["partialvmresult",6]]]],[11,"get_module","dvm_data_source::metrics","",1,[[["moduleid",3]],[["vmresult",6],["option",4]]]],[11,"get_resource","","",1,[[["structtag",3],["accountaddress",3]],[["option",4],["partialvmresult",6]]]],[11,"get_module","dvm_data_source::mock","",2,[[["moduleid",3]],[["vmresult",6],["option",4]]]],[11,"get_resource","","",2,[[["structtag",3],["accountaddress",3]],[["option",4],["partialvmresult",6]]]],[11,"get_module","dvm_data_source::module_cache","",4,[[["moduleid",3]],[["vmresult",6],["option",4]]]],[11,"get_resource","","",4,[[["structtag",3],["accountaddress",3]],[["option",4],["partialvmresult",6]]]],[11,"get_module","dvm_data_source::blacklist","",6,[[["moduleid",3]],[["vmresult",6],["option",4]]]],[11,"get_resource","","",6,[[["structtag",3],["accountaddress",3]],[["option",4],["partialvmresult",6]]]],[11,"size","dvm_data_source::module_cache","",4,[[]]]],"p":[[3,"GrpcDataSource"],[3,"DsMeter"],[3,"MockDataSource"],[8,"BinarySize"],[3,"ModuleCache"],[3,"Lru"],[3,"BlackListDataSource"],[8,"RemoveModule"]]},\
"dvm_info":{"doc":"Responsible for gathering various metrics from the running…","i":[[0,"config","dvm_info","Defines `InfoServiceConfig` with all the configuration…",null,null],[3,"InfoServiceConfig","dvm_info::config","Configuration for service that gathers metrics about VM…",null,null],[12,"info_service_addr","","Info service address in the form of HOST_ADDRESS:PORT.…",0,null],[12,"dvm_self_check_addr","","Dvm self address. HOST_ADDRESS:PORT. Optional parameter.…",0,null],[12,"metric_update_interval","","Metric refresh interval in seconds.",0,null],[12,"heartbeat_max_interval","","Maximum period between heartbeats. In seconds.",0,null],[12,"heartbeat_stimulation_interval","","The interval between ping requests to dvm. In seconds.",0,null],[3,"MemoryOptions","","Memory options.",null,null],[12,"module_cache","","Module cache size in KB. Default size is 100 MB.",1,null],[12,"memory_check_period","","Number of executions between memory checks.",1,null],[12,"max_dvm_cache_size","","Maximum number of dvm cache in KB. Default size is 100 MB.",1,null],[11,"module_cache","","Returns the module cache size in bytes.",1,[[]]],[11,"memory_check_period","","Returns the number of execution between memory checks.",1,[[]]],[11,"max_dvm_cache_size","","Returns the maximum dvm cache size.",1,[[]]],[0,"heartbeat","dvm_info","Defines `HeartRateMonitor`, that wraps an `AtomicU64`…",null,null],[3,"HeartRateMonitor","dvm_info::heartbeat","Heart rate monitor.",null,null],[11,"new","","Create a new heartbeat monitor with the given maximum…",2,[[["duration",3]],["heartratemonitor",3]]],[11,"beat","","Records new heartbeat timestamp.",2,[[]]],[11,"time_since_last_heartbeat","","Returns `Duration` since the last heartbeat timestamp.",2,[[],["duration",3]]],[11,"is_alive","","Checks whether time passed since last recorded heartbeat…",2,[[]]],[0,"metrics","dvm_info","Execution metrics.",null,null],[0,"collector","dvm_info::metrics","Defines `MetricsCollector` which handles background…",null,null],[3,"MetricsCollector","dvm_info::metrics::collector","Metrics collector.",null,null],[11,"new","","Create a `MetricsCollector` which fires once every…",3,[[["duration",3]],["metricscollector",3]]],[11,"get_metrics","","Get current metrics.",3,[[],["metrics",3]]],[0,"execution","dvm_info::metrics","Gathers metrics for the process (like cpu usage or memory).",null,null],[3,"ExecutionData","dvm_info::metrics::execution","Execution data.",null,null],[12,"process_time","","Time of processing.",4,null],[12,"result","","Execution result. May be empty. Empty if the value is not…",4,null],[3,"ExecutionResult","","Result of the action.",null,null],[12,"is_success","","Is action completed successfully.",5,null],[12,"status","","Status code.",5,null],[12,"gas_used","","Spent gas.",5,null],[3,"SystemMetrics","","Metrics for the running process.",null,null],[12,"cpu_usage","","Total CPU usage.",6,null],[12,"memory","","Memory usage for the process (in kB).",6,null],[12,"threads_count","","Number of threads in the current process.",6,null],[5,"store_metric","","Stores metric.",null,[[["executiondata",3]]]],[5,"get_system_metrics","","Get metrics for the CPU and memory of the node.",null,[[],["systemmetrics",3]]],[5,"drain_action_metrics","","Drain live metrics.",null,[[],[["hashmap",3],["vec",3]]]],[11,"new","","Create a new ExecutionData.",4,[[],["executiondata",3]]],[11,"with_result","","Crate execution with result data.",4,[[["option",4],["executionresult",3]],["executiondata",3]]],[11,"new","","Create new action result",5,[[],["executionresult",3]]],[0,"meter","dvm_info::metrics","Defines `ScopeMeter` which handles metric recording.",null,null],[3,"ScopeMeter","dvm_info::metrics::meter","Scope metric.",null,null],[11,"new","","Create a new scope meter.",7,[[],["scopemeter",3]]],[11,"set_result","","Set action result.",7,[[["executionresult",3]]]],[0,"metric","dvm_info::metrics","Defines `Metrics` struct and all required aggregates.",null,null],[3,"Metrics","dvm_info::metrics::metric","Application metrics;",null,null],[12,"execution_metrics","","Inner metrics state: (name of a metric) -> ExecutionMetric",8,null],[3,"Percentiles","","Time to process different chunks of executions.",null,null],[12,"p_50","","50% percentile",9,null],[12,"p_75","","75%",9,null],[12,"p_90","","90%",9,null],[3,"Average","","Average.",null,null],[12,"avg","","Average.",10,null],[12,"sd","","Standard deviation.",10,null],[3,"ExecutionMetric","","Aggregate for the executions metrics.",null,null],[12,"total_executions","","The number of actions performed in the time interval.",11,null],[12,"executions_without_results","","Number of actions without results. (Actions with panic.).",11,null],[12,"success_actions","","The number of actions completed with success.",11,null],[12,"statuses","","struct -> count",11,null],[12,"total_gas","","Total gas used in the interval.",11,null],[12,"percentiles","","Percentiles.",11,null],[12,"average","","Average.",11,null],[12,"min_time","","Min time.",11,null],[12,"max_time","","Max time.",11,null],[11,"calculate","","Calculate metrics based on a list of executions.",8,[[["hashmap",3],["vec",3]],["metrics",3]]],[11,"calculate","","Calculate metrics based on provided execution data.",11,[[["executiondata",3],["vec",3]],["executionmetric",3]]],[0,"prometheus","dvm_info::metrics","Helper functions to work with Prometheus.",null,null],[5,"encode_metrics","dvm_info::metrics::prometheus","Encode metrics.",null,[[["systemmetrics",3],["metrics",3],["option",4]],["string",3]]],[0,"task","dvm_info","Defines `PeriodicBackgroundTask` which is used to collect…",null,null],[3,"Daemon","dvm_info::task","Background process. Code executed with `spawn()` will be…",null,null],[3,"PeriodicBackgroundTask","","Signal thread task executed periodically with provided…",null,null],[11,"spawn","","Spawn daemon task in a separate thread.",12,[[],["daemon",3]]],[11,"spawn","","Spawn task.",13,[[["duration",3]],["periodicbackgroundtask",3]]],[0,"web","dvm_info","Defines `InfoService`, `tower`-based web service which…",null,null],[3,"InfoService","dvm_info::web","Instruction web service.",null,null],[3,"ServiceMaker","","Info service maker.",null,null],[5,"start_info_service","","Starts a new information service.",null,[[["heartratemonitor",3],["duration",3],["socketaddr",4]]]],[0,"memory_check","dvm_info","Defines `MemoryChecker`",null,null],[3,"MemoryChecker","dvm_info::memory_check","Dvm memory limits checker.",null,null],[8,"CacheSize","","Provide cache size function.",null,null],[10,"size","","Returns cache size.",14,[[]]],[11,"new","","Constructor.",15,[[["vec",3],["box",3],["memoryoptions",3]],["memorychecker",3]]],[11,"is_limit_exceeded","","Returns `true` if the amount of memory exceeds the limit.",15,[[]]],[11,"from","dvm_info::config","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_request","","",0,[[],["request",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_request","","",1,[[],["request",3]]],[11,"vzip","","",1,[[]]],[11,"from","dvm_info::heartbeat","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_request","","",2,[[],["request",3]]],[11,"vzip","","",2,[[]]],[11,"from","dvm_info::metrics::collector","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_request","","",3,[[],["request",3]]],[11,"vzip","","",3,[[]]],[11,"from","dvm_info::metrics::execution","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"equivalent","","",4,[[]]],[11,"into_request","","",4,[[],["request",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"equivalent","","",5,[[]]],[11,"into_request","","",5,[[],["request",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_request","","",6,[[],["request",3]]],[11,"vzip","","",6,[[]]],[11,"from","dvm_info::metrics::meter","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_request","","",7,[[],["request",3]]],[11,"vzip","","",7,[[]]],[11,"from","dvm_info::metrics::metric","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_request","","",8,[[],["request",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"into_request","","",9,[[],["request",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"into_request","","",10,[[],["request",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"into_request","","",11,[[],["request",3]]],[11,"vzip","","",11,[[]]],[11,"from","dvm_info::task","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"into_request","","",12,[[],["request",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"into_request","","",13,[[],["request",3]]],[11,"vzip","","",13,[[]]],[11,"from","dvm_info::web","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"poll_ready","","",16,[[["context",3]],[["result",4],["poll",4]]]],[11,"call","","",16,[[["request",3]]]],[11,"into_request","","",16,[[],["request",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"poll_ready","","",17,[[["context",3]],[["poll",4],["result",4]]]],[11,"make_service","","",17,[[]]],[11,"into_request","","",17,[[],["request",3]]],[11,"vzip","","",17,[[]]],[11,"from","dvm_info::memory_check","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"into_request","","",15,[[],["request",3]]],[11,"vzip","","",15,[[]]],[11,"drop","dvm_info::metrics::meter","",7,[[]]],[11,"drop","dvm_info::task","",12,[[]]],[11,"clone","dvm_info::config","",0,[[],["infoserviceconfig",3]]],[11,"clone","","",1,[[],["memoryoptions",3]]],[11,"clone","dvm_info::heartbeat","",2,[[],["heartratemonitor",3]]],[11,"clone","dvm_info::metrics::collector","",3,[[],["metricscollector",3]]],[11,"clone","dvm_info::metrics::execution","",4,[[],["executiondata",3]]],[11,"clone","","",5,[[],["executionresult",3]]],[11,"clone","","",6,[[],["systemmetrics",3]]],[11,"clone","dvm_info::metrics::metric","",8,[[],["metrics",3]]],[11,"clone","","",9,[[],["percentiles",3]]],[11,"clone","","",10,[[],["average",3]]],[11,"clone","","",11,[[],["executionmetric",3]]],[11,"default","dvm_info::config","",0,[[],["infoserviceconfig",3]]],[11,"default","","",1,[[],["memoryoptions",3]]],[11,"default","dvm_info::metrics::execution","",4,[[],["executiondata",3]]],[11,"default","","",5,[[],["executionresult",3]]],[11,"default","","",6,[[],["systemmetrics",3]]],[11,"default","dvm_info::metrics::metric","",8,[[],["metrics",3]]],[11,"default","","",9,[[],["percentiles",3]]],[11,"default","","",10,[[],["average",3]]],[11,"default","","",11,[[],["executionmetric",3]]],[11,"cmp","dvm_info::metrics::execution","",4,[[["executiondata",3]],["ordering",4]]],[11,"cmp","","",5,[[["executionresult",3]],["ordering",4]]],[11,"eq","","",4,[[["executiondata",3]]]],[11,"ne","","",4,[[["executiondata",3]]]],[11,"eq","","",5,[[["executionresult",3]]]],[11,"ne","","",5,[[["executionresult",3]]]],[11,"eq","","",6,[[["systemmetrics",3]]]],[11,"ne","","",6,[[["systemmetrics",3]]]],[11,"eq","dvm_info::metrics::metric","",8,[[["metrics",3]]]],[11,"ne","","",8,[[["metrics",3]]]],[11,"eq","","",9,[[["percentiles",3]]]],[11,"ne","","",9,[[["percentiles",3]]]],[11,"eq","","",10,[[["average",3]]]],[11,"ne","","",10,[[["average",3]]]],[11,"eq","","",11,[[["executionmetric",3]]]],[11,"ne","","",11,[[["executionmetric",3]]]],[11,"partial_cmp","dvm_info::metrics::execution","",4,[[["executiondata",3]],[["option",4],["ordering",4]]]],[11,"lt","","",4,[[["executiondata",3]]]],[11,"le","","",4,[[["executiondata",3]]]],[11,"gt","","",4,[[["executiondata",3]]]],[11,"ge","","",4,[[["executiondata",3]]]],[11,"partial_cmp","","",5,[[["executionresult",3]],[["option",4],["ordering",4]]]],[11,"lt","","",5,[[["executionresult",3]]]],[11,"le","","",5,[[["executionresult",3]]]],[11,"gt","","",5,[[["executionresult",3]]]],[11,"ge","","",5,[[["executionresult",3]]]],[11,"fmt","dvm_info::config","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_info::heartbeat","",2,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_info::metrics::collector","",3,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_info::metrics::execution","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_info::metrics::metric","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_info::task","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_info::web","",16,[[["formatter",3]],["result",6]]],[11,"hash","dvm_info::metrics::execution","",4,[[]]],[11,"hash","","",5,[[]]],[11,"serialize","","",4,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","","",6,[[],["result",4]]],[11,"serialize","dvm_info::metrics::metric","",8,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"serialize","","",10,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"deserialize","dvm_info::metrics::execution","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","","",6,[[],["result",4]]],[11,"into_app","dvm_info::config","",0,[[],["app",3]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"into_app","","",1,[[],["app",3]]],[11,"augment_clap","","",1,[[["app",3]],["app",3]]],[11,"from_arg_matches","","",0,[[["argmatches",3]]]],[11,"from_arg_matches","","",1,[[["argmatches",3]]]],[11,"poll_ready","dvm_info::web","",16,[[["context",3]],[["result",4],["poll",4]]]],[11,"call","","",16,[[["request",3],["body",3]]]],[11,"poll_ready","","",17,[[["context",3]],[["result",4],["poll",4]]]],[11,"call","","",17,[[]]]],"p":[[3,"InfoServiceConfig"],[3,"MemoryOptions"],[3,"HeartRateMonitor"],[3,"MetricsCollector"],[3,"ExecutionData"],[3,"ExecutionResult"],[3,"SystemMetrics"],[3,"ScopeMeter"],[3,"Metrics"],[3,"Percentiles"],[3,"Average"],[3,"ExecutionMetric"],[3,"Daemon"],[3,"PeriodicBackgroundTask"],[8,"CacheSize"],[3,"MemoryChecker"],[3,"InfoService"],[3,"ServiceMaker"]]},\
"dvm_lang":{"doc":"Stores `stdlib` export and bytecode verification procedures.","i":[[0,"bytecode","dvm_lang","Procedures to work with bytecode.",null,null],[5,"extract_script_params","dvm_lang::bytecode","Get script signature.",null,[[],[["error",3],["vec",3],["result",4]]]],[0,"verification","","Procedures for verification of bytecode (restricted set of…",null,null],[3,"WhitelistVerifier","dvm_lang::bytecode::verification","Restricts set of modules allowed to use in script.",null,null],[5,"validate_bytecode_instructions","","Validate that script contains only allowed bytecode…",null,[[["compiledscript",3]],["result",6]]],[11,"new","","Only modules allowed to use are modules from whitelist and…",0,[[["string",3],["accountaddress",3],["hashmap",3],["vec",3]]]],[11,"verify_only_whitelisted_modules","","Verify whether all `use` statements in script importing…",0,[[["compiledscript",3]],["result",6]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"into_request","","",0,[[],["request",3]]]],"p":[[3,"WhitelistVerifier"]]},\
"dvm_libra_deps":{"doc":"","i":[[0,"prelude","dvm_libra_deps","",null,null],[0,"bf","","",null,null],[3,"VMControlFlowGraph","dvm_libra_deps::bf","The control flow graph that we build from the bytecode.",null,null],[8,"ControlFlowGraph","","A trait that specifies the basic requirements for a CFG",null,null],[10,"block_start","","Start index of the block ID in the bytecode vector",0,[[]]],[10,"block_end","","End index of the block ID in the bytecode vector",0,[[]]],[10,"successors","","Successors of the block ID in the bytecode vector",0,[[],["vec",3]]],[10,"instr_indexes","","Iterator over the indexes of instructions in this block",0,[[],[["iterator",8],["box",3]]]],[10,"blocks","","Return an iterator over the blocks of the CFG",0,[[],["vec",3]]],[10,"num_blocks","","Return the number of blocks (vertices) in the control flow…",0,[[]]],[10,"entry_block_id","","Return the id of the entry block for this control-flow…",0,[[]]],[6,"BlockId","","",null,null],[0,"module","dvm_libra_deps","",null,null],[3,"ModuleId","dvm_libra_deps::module","Represents the initial key into global storage where we…",null,null],[3,"Module","","",null,null],[12,"code","","",1,null],[8,"ModuleAccess","","Represents accessors for a compiled module.",null,null],[10,"as_module","","Returns the `CompiledModule` that will be used for accesses.",2,[[],["compiledmodule",3]]],[11,"self_handle_idx","","",2,[[],["modulehandleindex",3]]],[11,"self_handle","","Returns the `ModuleHandle` for `self`.",2,[[],["modulehandle",3]]],[11,"name","","Returns the name of the module.",2,[[],["identstr",3]]],[11,"address","","Returns the address of the module.",2,[[],["accountaddress",3]]],[11,"module_handle_at","","",2,[[["modulehandleindex",3]],["modulehandle",3]]],[11,"struct_handle_at","","",2,[[["structhandleindex",3]],["structhandle",3]]],[11,"function_handle_at","","",2,[[["functionhandleindex",3]],["functionhandle",3]]],[11,"field_handle_at","","",2,[[["fieldhandleindex",3]],["fieldhandle",3]]],[11,"struct_instantiation_at","","",2,[[["structdefinstantiationindex",3]],["structdefinstantiation",3]]],[11,"function_instantiation_at","","",2,[[["functioninstantiationindex",3]],["functioninstantiation",3]]],[11,"field_instantiation_at","","",2,[[["fieldinstantiationindex",3]],["fieldinstantiation",3]]],[11,"signature_at","","",2,[[["signatureindex",3]],["signature",3]]],[11,"identifier_at","","",2,[[["identifierindex",3]],["identstr",3]]],[11,"address_identifier_at","","",2,[[["addressidentifierindex",3]],["accountaddress",3]]],[11,"constant_at","","",2,[[["constantpoolindex",3]],["constant",3]]],[11,"struct_def_at","","",2,[[["structdefinitionindex",3]],["structdefinition",3]]],[11,"function_def_at","","",2,[[["functiondefinitionindex",3]],["functiondefinition",3]]],[11,"module_handles","","",2,[[]]],[11,"struct_handles","","",2,[[]]],[11,"function_handles","","",2,[[]]],[11,"field_handles","","",2,[[]]],[11,"struct_instantiations","","",2,[[]]],[11,"function_instantiations","","",2,[[]]],[11,"field_instantiations","","",2,[[]]],[11,"signatures","","",2,[[]]],[11,"constant_pool","","",2,[[]]],[11,"identifiers","","",2,[[]]],[11,"address_identifiers","","",2,[[]]],[11,"struct_defs","","",2,[[]]],[11,"function_defs","","",2,[[]]],[11,"module_id_for_handle","","",2,[[["modulehandle",3]],["moduleid",3]]],[11,"self_id","","",2,[[],["moduleid",3]]],[8,"ScriptAccess","","Represents accessors for a compiled script.",null,null],[10,"as_script","","Returns the `CompiledScript` that will be used for accesses.",3,[[],["compiledscript",3]]],[11,"module_handle_at","","",3,[[["modulehandleindex",3]],["modulehandle",3]]],[11,"struct_handle_at","","",3,[[["structhandleindex",3]],["structhandle",3]]],[11,"function_handle_at","","",3,[[["functionhandleindex",3]],["functionhandle",3]]],[11,"signature_at","","",3,[[["signatureindex",3]],["signature",3]]],[11,"identifier_at","","",3,[[["identifierindex",3]],["identstr",3]]],[11,"address_identifier_at","","",3,[[["addressidentifierindex",3]],["accountaddress",3]]],[11,"constant_at","","",3,[[["constantpoolindex",3]],["constant",3]]],[11,"function_instantiation_at","","",3,[[["functioninstantiationindex",3]],["functioninstantiation",3]]],[11,"module_handles","","",3,[[]]],[11,"struct_handles","","",3,[[]]],[11,"function_handles","","",3,[[]]],[11,"function_instantiations","","",3,[[]]],[11,"signatures","","",3,[[]]],[11,"constant_pool","","",3,[[]]],[11,"identifiers","","",3,[[]]],[11,"address_identifiers","","",3,[[]]],[11,"code","","",3,[[],["codeunit",3]]],[4,"Bytecode","","`Bytecode` is a VM instruction of variable size. The type…",null,null],[13,"Pop","","Pop and discard the value at the top of the stack. The…",4,null],[13,"Ret","","Return from function, possibly with values according to…",4,null],[13,"BrTrue","","Branch to the instruction at position `CodeOffset` if the…",4,null],[13,"BrFalse","","Branch to the instruction at position `CodeOffset` if the…",4,null],[13,"Branch","","Branch unconditionally to the instruction at position…",4,null],[13,"LdU8","","Push a U8 constant onto the stack.",4,null],[13,"LdU64","","Push a U64 constant onto the stack.",4,null],[13,"LdU128","","Push a U128 constant onto the stack.",4,null],[13,"CastU8","","Convert the value at the top of the stack into u8.",4,null],[13,"CastU64","","Convert the value at the top of the stack into u64.",4,null],[13,"CastU128","","Convert the value at the top of the stack into u128.",4,null],[13,"LdConst","","Push a `Constant` onto the stack. The value is loaded and…",4,null],[13,"LdTrue","","Push `true` onto the stack.",4,null],[13,"LdFalse","","Push `false` onto the stack.",4,null],[13,"CopyLoc","","Push the local identified by `LocalIndex` onto the stack.…",4,null],[13,"MoveLoc","","Push the local identified by `LocalIndex` onto the stack.…",4,null],[13,"StLoc","","Pop value from the top of the stack and store it into the…",4,null],[13,"Call","","Call a function. The stack has the arguments pushed first…",4,null],[13,"CallGeneric","","",4,null],[13,"Pack","","Create an instance of the type specified via…",4,null],[13,"PackGeneric","","",4,null],[13,"Unpack","","Destroy an instance of a type and push the values bound to…",4,null],[13,"UnpackGeneric","","",4,null],[13,"ReadRef","","Read a reference. The reference is on the stack, it is…",4,null],[13,"WriteRef","","Write to a reference. The reference and the value are on…",4,null],[13,"FreezeRef","","Convert a mutable reference to an immutable reference.",4,null],[13,"MutBorrowLoc","","Load a mutable reference to a local identified by…",4,null],[13,"ImmBorrowLoc","","Load an immutable reference to a local identified by…",4,null],[13,"MutBorrowField","","Load a mutable reference to a field identified by…",4,null],[13,"MutBorrowFieldGeneric","","Load a mutable reference to a field identified by…",4,null],[13,"ImmBorrowField","","Load an immutable reference to a field identified by…",4,null],[13,"ImmBorrowFieldGeneric","","Load an immutable reference to a field identified by…",4,null],[13,"MutBorrowGlobal","","Return a mutable reference to an instance of type…",4,null],[13,"MutBorrowGlobalGeneric","","",4,null],[13,"ImmBorrowGlobal","","Return an immutable reference to an instance of type…",4,null],[13,"ImmBorrowGlobalGeneric","","",4,null],[13,"Add","","Add the 2 u64 at the top of the stack and pushes the…",4,null],[13,"Sub","","Subtract the 2 u64 at the top of the stack and pushes the…",4,null],[13,"Mul","","Multiply the 2 u64 at the top of the stack and pushes the…",4,null],[13,"Mod","","Perform a modulo operation on the 2 u64 at the top of the…",4,null],[13,"Div","","Divide the 2 u64 at the top of the stack and pushes the…",4,null],[13,"BitOr","","Bitwise OR the 2 u64 at the top of the stack and pushes…",4,null],[13,"BitAnd","","Bitwise AND the 2 u64 at the top of the stack and pushes…",4,null],[13,"Xor","","Bitwise XOR the 2 u64 at the top of the stack and pushes…",4,null],[13,"Or","","Logical OR the 2 bool at the top of the stack and pushes…",4,null],[13,"And","","Logical AND the 2 bool at the top of the stack and pushes…",4,null],[13,"Not","","Logical NOT the bool at the top of the stack and pushes…",4,null],[13,"Eq","","Compare for equality the 2 value at the top of the stack…",4,null],[13,"Neq","","Compare for inequality the 2 value at the top of the stack…",4,null],[13,"Lt","","Perform a \\\"less than\\\" operation of the 2 u64 at the top of…",4,null],[13,"Gt","","Perform a \\\"greater than\\\" operation of the 2 u64 at the top…",4,null],[13,"Le","","Perform a \\\"less than or equal\\\" operation of the 2 u64 at…",4,null],[13,"Ge","","Perform a \\\"greater than or equal\\\" than operation of the 2…",4,null],[13,"Abort","","Abort execution with errorcode",4,null],[13,"Nop","","No operation.",4,null],[13,"Exists","","Returns whether or not a given address has an object of…",4,null],[13,"ExistsGeneric","","",4,null],[13,"MoveFrom","","Move the instance of type StructDefinitionIndex, at the…",4,null],[13,"MoveFromGeneric","","",4,null],[13,"MoveTo","","Move the instance at the top of the stack to the address…",4,null],[13,"MoveToGeneric","","",4,null],[13,"Shl","","Shift the (second top value) left (top value) bits and…",4,null],[13,"Shr","","Shift the (second top value) right (top value) bits and…",4,null],[3,"CompiledScript","","Contains the main function to execute and its dependencies.",null,null],[3,"CompiledModule","","A `CompiledModule` defines the structure of a module which…",null,null],[3,"ModuleHandle","","A `ModuleHandle` is a reference to a MOVE module. It is…",null,null],[12,"address","","Index into the `AddressIdentifierIndex`. Identifies…",5,null],[12,"name","","The name of the module published in the code section for…",5,null],[4,"SignatureToken","","A `SignatureToken` is a type declaration for a location.",null,null],[13,"Bool","","Boolean, `true` or `false`.",6,null],[13,"U8","","Unsigned integers, 8 bits length.",6,null],[13,"U64","","Unsigned integers, 64 bits length.",6,null],[13,"U128","","Unsigned integers, 128 bits length.",6,null],[13,"Address","","Address, a 16 bytes immutable type.",6,null],[13,"Signer","","Signer, a 16 bytes immutable type representing the…",6,null],[13,"Vector","","Vector",6,null],[13,"Struct","","MOVE user type, resource or copyable",6,null],[13,"StructInstantiation","","",6,null],[13,"Reference","","Reference to a type.",6,null],[13,"MutableReference","","Mutable reference to a type.",6,null],[13,"TypeParameter","","Type parameter.",6,null],[4,"CompiledUnit","","",null,null],[13,"Module","","",7,null],[12,"ident","dvm_libra_deps::module::CompiledUnit","",8,null],[12,"module","","",8,null],[12,"source_map","","",8,null],[12,"function_infos","","",8,null],[13,"Script","dvm_libra_deps::module","",7,null],[12,"loc","dvm_libra_deps::module::CompiledUnit","",9,null],[12,"key","","",9,null],[12,"script","","",9,null],[12,"source_map","","",9,null],[12,"function_info","","",9,null],[4,"Definition","dvm_libra_deps::module","",null,null],[13,"Module","","",10,null],[13,"Address","","",10,null],[13,"Script","","",10,null],[3,"ModuleDefinition","","",null,null],[12,"loc","","",11,null],[12,"name","","",11,null],[12,"members","","",11,null],[3,"Script","","",null,null],[12,"loc","","",12,null],[12,"uses","","",12,null],[12,"constants","","",12,null],[12,"function","","",12,null],[12,"specs","","",12,null],[4,"MoveValue","","",null,null],[13,"U8","","",13,null],[13,"U64","","",13,null],[13,"U128","","",13,null],[13,"Bool","","",13,null],[13,"Address","","",13,null],[13,"Vector","","",13,null],[13,"Struct","","",13,null],[13,"Signer","","",13,null],[0,"account","dvm_libra_deps","",null,null],[3,"AccountAddress","dvm_libra_deps::account","A struct that represents an account address.",null,null],[17,"CORE_CODE_ADDRESS","","",null,null],[3,"Identifier","","An owned identifier.",null,null],[0,"result","dvm_libra_deps","",null,null],[4,"StatusCode","dvm_libra_deps::result","We don\'t derive Arbitrary on this enum because it is too…",null,null],[13,"UNKNOWN_VALIDATION_STATUS","","",14,null],[13,"INVALID_SIGNATURE","","",14,null],[13,"INVALID_AUTH_KEY","","",14,null],[13,"SEQUENCE_NUMBER_TOO_OLD","","",14,null],[13,"SEQUENCE_NUMBER_TOO_NEW","","",14,null],[13,"INSUFFICIENT_BALANCE_FOR_TRANSACTION_FEE","","",14,null],[13,"TRANSACTION_EXPIRED","","",14,null],[13,"SENDING_ACCOUNT_DOES_NOT_EXIST","","",14,null],[13,"REJECTED_WRITE_SET","","",14,null],[13,"INVALID_WRITE_SET","","",14,null],[13,"EXCEEDED_MAX_TRANSACTION_SIZE","","",14,null],[13,"UNKNOWN_SCRIPT","","",14,null],[13,"UNKNOWN_MODULE","","",14,null],[13,"MAX_GAS_UNITS_EXCEEDS_MAX_GAS_UNITS_BOUND","","",14,null],[13,"MAX_GAS_UNITS_BELOW_MIN_TRANSACTION_GAS_UNITS","","",14,null],[13,"GAS_UNIT_PRICE_BELOW_MIN_BOUND","","",14,null],[13,"GAS_UNIT_PRICE_ABOVE_MAX_BOUND","","",14,null],[13,"INVALID_GAS_SPECIFIER","","",14,null],[13,"SENDING_ACCOUNT_FROZEN","","",14,null],[13,"UNABLE_TO_DESERIALIZE_ACCOUNT","","",14,null],[13,"CURRENCY_INFO_DOES_NOT_EXIST","","",14,null],[13,"INVALID_MODULE_PUBLISHER","","",14,null],[13,"NO_ACCOUNT_ROLE","","",14,null],[13,"BAD_CHAIN_ID","","",14,null],[13,"UNKNOWN_VERIFICATION_ERROR","","",14,null],[13,"INDEX_OUT_OF_BOUNDS","","",14,null],[13,"INVALID_SIGNATURE_TOKEN","","",14,null],[13,"RECURSIVE_STRUCT_DEFINITION","","",14,null],[13,"INVALID_RESOURCE_FIELD","","",14,null],[13,"INVALID_FALL_THROUGH","","",14,null],[13,"NEGATIVE_STACK_SIZE_WITHIN_BLOCK","","",14,null],[13,"INVALID_MAIN_FUNCTION_SIGNATURE","","",14,null],[13,"DUPLICATE_ELEMENT","","",14,null],[13,"INVALID_MODULE_HANDLE","","",14,null],[13,"UNIMPLEMENTED_HANDLE","","",14,null],[13,"LOOKUP_FAILED","","",14,null],[13,"TYPE_MISMATCH","","",14,null],[13,"MISSING_DEPENDENCY","","",14,null],[13,"POP_RESOURCE_ERROR","","",14,null],[13,"BR_TYPE_MISMATCH_ERROR","","",14,null],[13,"ABORT_TYPE_MISMATCH_ERROR","","",14,null],[13,"STLOC_TYPE_MISMATCH_ERROR","","",14,null],[13,"STLOC_UNSAFE_TO_DESTROY_ERROR","","",14,null],[13,"UNSAFE_RET_LOCAL_OR_RESOURCE_STILL_BORROWED","","",14,null],[13,"RET_TYPE_MISMATCH_ERROR","","",14,null],[13,"RET_BORROWED_MUTABLE_REFERENCE_ERROR","","",14,null],[13,"FREEZEREF_TYPE_MISMATCH_ERROR","","",14,null],[13,"FREEZEREF_EXISTS_MUTABLE_BORROW_ERROR","","",14,null],[13,"BORROWFIELD_TYPE_MISMATCH_ERROR","","",14,null],[13,"BORROWFIELD_BAD_FIELD_ERROR","","",14,null],[13,"BORROWFIELD_EXISTS_MUTABLE_BORROW_ERROR","","",14,null],[13,"COPYLOC_UNAVAILABLE_ERROR","","",14,null],[13,"COPYLOC_RESOURCE_ERROR","","",14,null],[13,"COPYLOC_EXISTS_BORROW_ERROR","","",14,null],[13,"MOVELOC_UNAVAILABLE_ERROR","","",14,null],[13,"MOVELOC_EXISTS_BORROW_ERROR","","",14,null],[13,"BORROWLOC_REFERENCE_ERROR","","",14,null],[13,"BORROWLOC_UNAVAILABLE_ERROR","","",14,null],[13,"BORROWLOC_EXISTS_BORROW_ERROR","","",14,null],[13,"CALL_TYPE_MISMATCH_ERROR","","",14,null],[13,"CALL_BORROWED_MUTABLE_REFERENCE_ERROR","","",14,null],[13,"PACK_TYPE_MISMATCH_ERROR","","",14,null],[13,"UNPACK_TYPE_MISMATCH_ERROR","","",14,null],[13,"READREF_TYPE_MISMATCH_ERROR","","",14,null],[13,"READREF_RESOURCE_ERROR","","",14,null],[13,"READREF_EXISTS_MUTABLE_BORROW_ERROR","","",14,null],[13,"WRITEREF_TYPE_MISMATCH_ERROR","","",14,null],[13,"WRITEREF_RESOURCE_ERROR","","",14,null],[13,"WRITEREF_EXISTS_BORROW_ERROR","","",14,null],[13,"WRITEREF_NO_MUTABLE_REFERENCE_ERROR","","",14,null],[13,"INTEGER_OP_TYPE_MISMATCH_ERROR","","",14,null],[13,"BOOLEAN_OP_TYPE_MISMATCH_ERROR","","",14,null],[13,"EQUALITY_OP_TYPE_MISMATCH_ERROR","","",14,null],[13,"EXISTS_RESOURCE_TYPE_MISMATCH_ERROR","","",14,null],[13,"BORROWGLOBAL_TYPE_MISMATCH_ERROR","","",14,null],[13,"BORROWGLOBAL_NO_RESOURCE_ERROR","","",14,null],[13,"MOVEFROM_TYPE_MISMATCH_ERROR","","",14,null],[13,"MOVEFROM_NO_RESOURCE_ERROR","","",14,null],[13,"MOVETO_TYPE_MISMATCH_ERROR","","",14,null],[13,"MOVETO_NO_RESOURCE_ERROR","","",14,null],[13,"MODULE_ADDRESS_DOES_NOT_MATCH_SENDER","","",14,null],[13,"NO_MODULE_HANDLES","","",14,null],[13,"POSITIVE_STACK_SIZE_AT_BLOCK_END","","",14,null],[13,"MISSING_ACQUIRES_RESOURCE_ANNOTATION_ERROR","","",14,null],[13,"EXTRANEOUS_ACQUIRES_RESOURCE_ANNOTATION_ERROR","","",14,null],[13,"DUPLICATE_ACQUIRES_RESOURCE_ANNOTATION_ERROR","","",14,null],[13,"INVALID_ACQUIRES_RESOURCE_ANNOTATION_ERROR","","",14,null],[13,"GLOBAL_REFERENCE_ERROR","","",14,null],[13,"CONSTRAINT_KIND_MISMATCH","","",14,null],[13,"NUMBER_OF_TYPE_ARGUMENTS_MISMATCH","","",14,null],[13,"LOOP_IN_INSTANTIATION_GRAPH","","",14,null],[13,"ZERO_SIZED_STRUCT","","",14,null],[13,"LINKER_ERROR","","",14,null],[13,"INVALID_CONSTANT_TYPE","","",14,null],[13,"MALFORMED_CONSTANT_DATA","","",14,null],[13,"EMPTY_CODE_UNIT","","",14,null],[13,"INVALID_LOOP_SPLIT","","",14,null],[13,"INVALID_LOOP_BREAK","","",14,null],[13,"INVALID_LOOP_CONTINUE","","",14,null],[13,"UNSAFE_RET_UNUSED_RESOURCES","","",14,null],[13,"TOO_MANY_LOCALS","","",14,null],[13,"GENERIC_MEMBER_OPCODE_MISMATCH","","",14,null],[13,"FUNCTION_RESOLUTION_FAILURE","","",14,null],[13,"INVALID_OPERATION_IN_SCRIPT","","",14,null],[13,"DUPLICATE_MODULE_NAME","","",14,null],[13,"UNKNOWN_INVARIANT_VIOLATION_ERROR","","",14,null],[13,"EMPTY_VALUE_STACK","","",14,null],[13,"PC_OVERFLOW","","",14,null],[13,"VERIFICATION_ERROR","","",14,null],[13,"STORAGE_ERROR","","",14,null],[13,"INTERNAL_TYPE_ERROR","","",14,null],[13,"EVENT_KEY_MISMATCH","","",14,null],[13,"UNREACHABLE","","",14,null],[13,"VM_STARTUP_FAILURE","","",14,null],[13,"UNEXPECTED_ERROR_FROM_KNOWN_MOVE_FUNCTION","","",14,null],[13,"VERIFIER_INVARIANT_VIOLATION","","",14,null],[13,"UNEXPECTED_VERIFIER_ERROR","","",14,null],[13,"UNEXPECTED_DESERIALIZATION_ERROR","","",14,null],[13,"FAILED_TO_SERIALIZE_WRITE_SET_CHANGES","","",14,null],[13,"FAILED_TO_DESERIALIZE_RESOURCE","","",14,null],[13,"TYPE_RESOLUTION_FAILURE","","",14,null],[13,"UNKNOWN_BINARY_ERROR","","",14,null],[13,"MALFORMED","","",14,null],[13,"BAD_MAGIC","","",14,null],[13,"UNKNOWN_VERSION","","",14,null],[13,"UNKNOWN_TABLE_TYPE","","",14,null],[13,"UNKNOWN_SIGNATURE_TYPE","","",14,null],[13,"UNKNOWN_SERIALIZED_TYPE","","",14,null],[13,"UNKNOWN_OPCODE","","",14,null],[13,"BAD_HEADER_TABLE","","",14,null],[13,"UNEXPECTED_SIGNATURE_TYPE","","",14,null],[13,"DUPLICATE_TABLE","","",14,null],[13,"UNKNOWN_NOMINAL_RESOURCE","","",14,null],[13,"UNKNOWN_KIND","","",14,null],[13,"UNKNOWN_NATIVE_STRUCT_FLAG","","",14,null],[13,"BAD_U64","","",14,null],[13,"BAD_U128","","",14,null],[13,"VALUE_SERIALIZATION_ERROR","","",14,null],[13,"VALUE_DESERIALIZATION_ERROR","","",14,null],[13,"CODE_DESERIALIZATION_ERROR","","",14,null],[13,"UNKNOWN_RUNTIME_STATUS","","",14,null],[13,"EXECUTED","","",14,null],[13,"OUT_OF_GAS","","",14,null],[13,"RESOURCE_DOES_NOT_EXIST","","",14,null],[13,"RESOURCE_ALREADY_EXISTS","","",14,null],[13,"MISSING_DATA","","",14,null],[13,"DATA_FORMAT_ERROR","","",14,null],[13,"ABORTED","","",14,null],[13,"ARITHMETIC_ERROR","","",14,null],[13,"EXECUTION_STACK_OVERFLOW","","",14,null],[13,"CALL_STACK_OVERFLOW","","",14,null],[13,"VM_MAX_TYPE_DEPTH_REACHED","","",14,null],[13,"VM_MAX_VALUE_DEPTH_REACHED","","",14,null],[13,"UNKNOWN_STATUS","","",14,null],[4,"VMStatus","","A `VMStatus` is represented as either - `Executed`…",null,null],[13,"Executed","","The VM status corresponding to an EXECUTED status code",15,null],[13,"Error","","Indicates an error from the VM, e.g. OUT_OF_GAS,…",15,null],[13,"MoveAbort","","Indicates an `abort` from inside Move code. Contains the…",15,null],[13,"ExecutionFailure","","Indicates an failure from inside Move code, where the VM…",15,null],[12,"status_code","dvm_libra_deps::result::VMStatus","",16,null],[12,"location","","",16,null],[12,"function","","",16,null],[12,"code_offset","","",16,null],[6,"DiscardedVMStatus","dvm_libra_deps::result","",null,null],[4,"KeptVMStatus","","",null,null],[13,"Executed","","",17,null],[13,"OutOfGas","","",17,null],[13,"MoveAbort","","",17,null],[13,"ExecutionFailure","","",17,null],[12,"location","dvm_libra_deps::result::KeptVMStatus","",18,null],[12,"function","","",18,null],[12,"code_offset","","",18,null],[13,"MiscellaneousError","dvm_libra_deps::result","",17,null],[4,"AbortLoc","","An `AbortLocation` specifies where a Move program `abort`…",null,null],[13,"Module","","Indicates `abort` occurred in the specified module",19,null],[13,"Script","","Indicates the `abort` occurred in a script",19,null],[4,"Location","","",null,null],[13,"Undefined","","",20,null],[13,"Script","","",20,null],[13,"Module","","",20,null],[6,"VMResult","","",null,null],[6,"PartialVMResult","","",null,null],[3,"PartialVMError","","",null,null],[3,"VMError","","",null,null],[0,"ds","dvm_libra_deps","",null,null],[3,"AccessPath","dvm_libra_deps::ds","",null,null],[12,"address","","",21,null],[12,"path","","",21,null],[8,"RemoteCache","","Trait for the Move VM to abstract `StateView` operations.",null,null],[10,"get_module","","",22,[[["moduleid",3]],[["vmerror",3],["result",4],["option",4]]]],[10,"get_resource","","",22,[[["structtag",3],["accountaddress",3]],[["result",4],["partialvmerror",3],["option",4]]]],[4,"WriteOp","","",null,null],[13,"Deletion","","",23,null],[13,"Value","","",23,null],[3,"WriteSet","","`WriteSet` contains all access paths that one transaction…",null,null],[3,"WriteSetMut","","A mutable version of `WriteSet`.",null,null],[3,"ModuleCache","","",null,null],[3,"TransactionDataCache","","Transaction data cache. Keep updates within a transaction…",null,null],[12,"remote","","",24,null],[12,"loader","","",24,null],[12,"account_map","","",24,null],[12,"event_data","","",24,null],[3,"ScriptCache","","",null,null],[3,"TypeCache","","",null,null],[8,"DataStore","","Provide an implementation for bytecodes related to data…",null,null],[10,"load_resource","","Try to load a resource from remote storage and create a…",25,[[["type",4],["accountaddress",3]],[["result",4],["globalvalue",3],["partialvmerror",3]]]],[10,"load_module","","Get the serialized format of a `CompiledModule` given a…",25,[[["moduleid",3]],[["vmerror",3],["result",4],["vec",3]]]],[10,"publish_module","","Publish a module.",25,[[["moduleid",3],["vec",3]],[["vmerror",3],["result",4]]]],[10,"exists_module","","Check if this module exists.",25,[[["moduleid",3]],[["vmerror",3],["result",4]]]],[10,"emit_event","","Emit an event to the EventStore",25,[[["vec",3],["value",3],["option",4],["moduleid",3],["type",4]],[["result",4],["partialvmerror",3]]]],[3,"RemoteStorage","","",null,null],[3,"StructTag","","",null,null],[12,"address","","",26,null],[12,"module","","",26,null],[12,"name","","",26,null],[12,"type_params","","",26,null],[4,"TypeTag","","",null,null],[13,"Bool","","",27,null],[13,"U8","","",27,null],[13,"U64","","",27,null],[13,"U128","","",27,null],[13,"Address","","",27,null],[13,"Signer","","",27,null],[13,"Vector","","",27,null],[13,"Struct","","",27,null],[3,"ResourceKey","","Represents the intitial key into global storage where we…",null,null],[0,"compiler","dvm_libra_deps","",null,null],[0,"compiled_unit","dvm_libra_deps::compiler","",null,null],[3,"VarInfo","dvm_libra_deps::compiler::compiled_unit","",null,null],[12,"type_","","",28,null],[12,"index","","",28,null],[3,"SpecInfo","","",null,null],[12,"offset","","",29,null],[12,"used_locals","","",29,null],[3,"FunctionInfo","","",null,null],[12,"spec_info","","",30,null],[12,"parameters","","",30,null],[4,"CompiledUnit","","",null,null],[13,"Module","","",7,null],[12,"ident","dvm_libra_deps::compiler::compiled_unit::CompiledUnit","",8,null],[12,"module","","",8,null],[12,"source_map","","",8,null],[12,"function_infos","","",8,null],[13,"Script","dvm_libra_deps::compiler::compiled_unit","",7,null],[12,"loc","dvm_libra_deps::compiler::compiled_unit::CompiledUnit","",9,null],[12,"key","","",9,null],[12,"script","","",9,null],[12,"source_map","","",9,null],[12,"function_info","","",9,null],[5,"verify_units","dvm_libra_deps::compiler::compiled_unit","",null,[[["compiledunit",4],["vec",3]]]],[0,"errors","dvm_libra_deps::compiler","",null,null],[6,"Errors","dvm_libra_deps::compiler::errors","",null,null],[6,"Error","","",null,null],[6,"ErrorSlice","","",null,null],[6,"HashableError","","",null,null],[6,"FilesSourceText","","",null,null],[5,"check_errors","","",null,[[["vec",3],["vec",3]],[["result",4],["vec",3]]]],[5,"report_errors","","",null,[[["vec",3],["vec",3],["randomstate",3],["hashmap",3],["string",3]]]],[5,"report_errors_to_buffer","","",null,[[["vec",3],["vec",3],["randomstate",3],["hashmap",3],["string",3]],["vec",3]]],[5,"report_errors_to_color_buffer","","",null,[[["vec",3],["vec",3],["randomstate",3],["hashmap",3],["string",3]],["vec",3]]],[5,"output_errors","","",null,[[["vec",3],["vec",3],["randomstate",3],["hashmap",3],["string",3]]]],[5,"parse_program","dvm_libra_deps::compiler","",null,[[],[["result",4],["error",3]]]],[5,"compile_program","","",null,[[["vec",3],["program",3],["option",4],["address",3],["result",4]],[["result",4],["vec",3],["vec",3]]]],[3,"Program","","",null,null],[12,"source_definitions","","",31,null],[12,"lib_definitions","","",31,null],[4,"Definition","","",null,null],[13,"Module","","",10,null],[13,"Address","","",10,null],[13,"Script","","",10,null],[3,"Script","","",null,null],[12,"loc","","",12,null],[12,"uses","","",12,null],[12,"constants","","",12,null],[12,"function","","",12,null],[12,"specs","","",12,null],[4,"Use","","",null,null],[13,"Module","","",32,null],[13,"Members","","",32,null],[3,"ModuleName","","",null,null],[12,"0","","",33,null],[3,"ModuleIdent_","","",null,null],[12,"name","","",34,null],[12,"address","","",34,null],[3,"ModuleIdent","","",null,null],[12,"0","","",35,null],[3,"ModuleDefinition","","",null,null],[12,"loc","","",11,null],[12,"name","","",11,null],[12,"members","","",11,null],[4,"ModuleMember","","",null,null],[13,"Function","","",36,null],[13,"Struct","","",36,null],[13,"Spec","","",36,null],[13,"Use","","",36,null],[13,"Constant","","",36,null],[3,"Field","","",null,null],[12,"0","","",37,null],[3,"StructName","","",null,null],[12,"0","","",38,null],[6,"ResourceLoc","","",null,null],[3,"StructDefinition","","",null,null],[12,"loc","","",39,null],[12,"resource_opt","","",39,null],[12,"name","","",39,null],[12,"type_parameters","","",39,null],[12,"fields","","",39,null],[4,"StructFields","","",null,null],[13,"Defined","","",40,null],[13,"Native","","",40,null],[3,"FunctionName","","",null,null],[12,"0","","",41,null],[3,"FunctionSignature","","",null,null],[12,"type_parameters","","",42,null],[12,"parameters","","",42,null],[12,"return_type","","",42,null],[4,"FunctionVisibility","","",null,null],[13,"Public","","",43,null],[13,"Internal","","",43,null],[4,"FunctionBody_","","",null,null],[13,"Defined","","",44,null],[13,"Native","","",44,null],[6,"FunctionBody","","",null,null],[3,"Function","","",null,null],[12,"loc","","",45,null],[12,"visibility","","",45,null],[12,"signature","","",45,null],[12,"acquires","","",45,null],[12,"name","","",45,null],[12,"body","","",45,null],[3,"ConstantName","","",null,null],[12,"0","","",46,null],[3,"Constant","","",null,null],[12,"loc","","",47,null],[12,"signature","","",47,null],[12,"name","","",47,null],[12,"value","","",47,null],[3,"SpecBlock_","","",null,null],[12,"target","","",48,null],[12,"uses","","",48,null],[12,"members","","",48,null],[6,"SpecBlock","","",null,null],[4,"SpecBlockTarget_","","",null,null],[13,"Code","","",49,null],[13,"Module","","",49,null],[13,"Function","","",49,null],[13,"Structure","","",49,null],[13,"Schema","","",49,null],[6,"SpecBlockTarget","","",null,null],[3,"PragmaProperty_","","",null,null],[12,"name","","",50,null],[12,"value","","",50,null],[6,"PragmaProperty","","",null,null],[3,"SpecApplyPattern_","","",null,null],[12,"visibility","","",51,null],[12,"name_pattern","","",51,null],[12,"type_parameters","","",51,null],[6,"SpecApplyPattern","","",null,null],[4,"SpecApplyFragment_","","",null,null],[13,"Wildcard","","",52,null],[13,"NamePart","","",52,null],[6,"SpecApplyFragment","","",null,null],[4,"SpecBlockMember_","","",null,null],[13,"Condition","","",53,null],[12,"kind","dvm_libra_deps::compiler::SpecBlockMember_","",54,null],[12,"properties","","",54,null],[12,"exp","","",54,null],[12,"additional_exps","","",54,null],[13,"Function","dvm_libra_deps::compiler","",53,null],[12,"uninterpreted","dvm_libra_deps::compiler::SpecBlockMember_","",55,null],[12,"name","","",55,null],[12,"signature","","",55,null],[12,"body","","",55,null],[13,"Variable","dvm_libra_deps::compiler","",53,null],[12,"is_global","dvm_libra_deps::compiler::SpecBlockMember_","",56,null],[12,"name","","",56,null],[12,"type_parameters","","",56,null],[12,"type_","","",56,null],[13,"Let","dvm_libra_deps::compiler","",53,null],[12,"name","dvm_libra_deps::compiler::SpecBlockMember_","",57,null],[12,"def","","",57,null],[13,"Include","dvm_libra_deps::compiler","",53,null],[12,"exp","dvm_libra_deps::compiler::SpecBlockMember_","",58,null],[13,"Apply","dvm_libra_deps::compiler","",53,null],[12,"exp","dvm_libra_deps::compiler::SpecBlockMember_","",59,null],[12,"patterns","","",59,null],[12,"exclusion_patterns","","",59,null],[13,"Pragma","dvm_libra_deps::compiler","",53,null],[12,"properties","dvm_libra_deps::compiler::SpecBlockMember_","",60,null],[6,"SpecBlockMember","dvm_libra_deps::compiler","",null,null],[4,"SpecConditionKind","","",null,null],[13,"Assert","","",61,null],[13,"Assume","","",61,null],[13,"Decreases","","",61,null],[13,"AbortsIf","","",61,null],[13,"AbortsWith","","",61,null],[13,"SucceedsIf","","",61,null],[13,"Modifies","","",61,null],[13,"Ensures","","",61,null],[13,"Requires","","",61,null],[13,"RequiresModule","","",61,null],[13,"Invariant","","",61,null],[13,"InvariantUpdate","","",61,null],[13,"InvariantPack","","",61,null],[13,"InvariantUnpack","","",61,null],[13,"InvariantModule","","",61,null],[4,"InvariantKind","","",null,null],[13,"Data","","",62,null],[13,"Update","","",62,null],[13,"Pack","","",62,null],[13,"Unpack","","",62,null],[13,"Module","","",62,null],[4,"ModuleAccess_","","",null,null],[13,"Name","","",63,null],[13,"ModuleAccess","","",63,null],[13,"QualifiedModuleAccess","","",63,null],[6,"ModuleAccess","","",null,null],[4,"Kind_","","",null,null],[13,"Unknown","","",64,null],[13,"Resource","","",64,null],[13,"Affine","","",64,null],[13,"Copyable","","",64,null],[6,"Kind","","",null,null],[4,"Type_","","",null,null],[13,"Apply","","",65,null],[13,"Ref","","",65,null],[13,"Fun","","",65,null],[13,"Unit","","",65,null],[13,"Multiple","","",65,null],[6,"Type","","",null,null],[3,"Var","","",null,null],[12,"0","","",66,null],[4,"Bind_","","",null,null],[13,"Var","","",67,null],[13,"Unpack","","",67,null],[6,"Bind","","",null,null],[6,"BindList","","",null,null],[4,"Value_","","",null,null],[13,"Address","","",68,null],[13,"U8","","",68,null],[13,"U64","","",68,null],[13,"U128","","",68,null],[13,"Bool","","",68,null],[13,"HexString","","",68,null],[13,"ByteString","","",68,null],[6,"Value","","",null,null],[4,"UnaryOp_","","",null,null],[13,"Not","","",69,null],[6,"UnaryOp","","",null,null],[4,"BinOp_","","",null,null],[13,"Add","","",70,null],[13,"Sub","","",70,null],[13,"Mul","","",70,null],[13,"Mod","","",70,null],[13,"Div","","",70,null],[13,"BitOr","","",70,null],[13,"BitAnd","","",70,null],[13,"Xor","","",70,null],[13,"Shl","","",70,null],[13,"Shr","","",70,null],[13,"Range","","",70,null],[13,"Implies","","",70,null],[13,"And","","",70,null],[13,"Or","","",70,null],[13,"Eq","","",70,null],[13,"Neq","","",70,null],[13,"Lt","","",70,null],[13,"Gt","","",70,null],[13,"Le","","",70,null],[13,"Ge","","",70,null],[6,"BinOp","","",null,null],[4,"Exp_","","",null,null],[13,"Value","","",71,null],[13,"InferredNum","","",71,null],[13,"Move","","",71,null],[13,"Copy","","",71,null],[13,"Name","","",71,null],[13,"Call","","",71,null],[13,"Pack","","",71,null],[13,"IfElse","","",71,null],[13,"While","","",71,null],[13,"Loop","","",71,null],[13,"Block","","",71,null],[13,"Lambda","","",71,null],[13,"ExpList","","",71,null],[13,"Unit","","",71,null],[13,"Assign","","",71,null],[13,"Return","","",71,null],[13,"Abort","","",71,null],[13,"Break","","",71,null],[13,"Continue","","",71,null],[13,"Dereference","","",71,null],[13,"UnaryExp","","",71,null],[13,"BinopExp","","",71,null],[13,"Borrow","","",71,null],[13,"Dot","","",71,null],[13,"Index","","",71,null],[13,"Cast","","",71,null],[13,"Annotate","","",71,null],[13,"Spec","","",71,null],[13,"UnresolvedError","","",71,null],[6,"Exp","","",null,null],[6,"Sequence","","",null,null],[4,"SequenceItem_","","",null,null],[13,"Seq","","",72,null],[13,"Declare","","",72,null],[13,"Bind","","",72,null],[6,"SequenceItem","","",null,null],[3,"Address","","",null,null],[6,"FilesSourceText","","",null,null],[6,"Errors","","",null,null],[5,"output_errors","","",null,[[["vec",3],["vec",3],["randomstate",3],["hashmap",3],["string",3]]]],[3,"ConstPool","","",null,null],[5,"move_check","","Given a set of targets and a set of dependencies - Checks…",null,[[["option",4],["address",3]],[["error",3],["result",4]]]],[0,"file_format","dvm_libra_deps","",null,null],[6,"TableIndex","dvm_libra_deps::file_format","Generic index into one of the tables in the binary format.",null,null],[3,"ModuleHandleIndex","","Index into the `ModuleHandle` table.",null,null],[12,"0","","",73,null],[3,"StructHandleIndex","","Index into the `StructHandle` table.",null,null],[12,"0","","",74,null],[3,"FunctionHandleIndex","","Index into the `FunctionHandle` table.",null,null],[12,"0","","",75,null],[3,"FieldHandleIndex","","Index into the `FieldHandle` table.",null,null],[12,"0","","",76,null],[3,"StructDefInstantiationIndex","","Index into the `StructInstantiation` table.",null,null],[12,"0","","",77,null],[3,"FunctionInstantiationIndex","","Index into the `FunctionInstantiation` table.",null,null],[12,"0","","",78,null],[3,"FieldInstantiationIndex","","Index into the `FieldInstantiation` table.",null,null],[12,"0","","",79,null],[3,"IdentifierIndex","","Index into the `Identifier` table.",null,null],[12,"0","","",80,null],[3,"AddressIdentifierIndex","","Index into the `AddressIdentifier` table.",null,null],[12,"0","","",81,null],[3,"ConstantPoolIndex","","Index into the `ConstantPool` table.",null,null],[12,"0","","",82,null],[3,"SignatureIndex","","Index into the `Signature` table.",null,null],[12,"0","","",83,null],[3,"StructDefinitionIndex","","Index into the `StructDefinition` table.",null,null],[12,"0","","",84,null],[3,"FunctionDefinitionIndex","","Index into the `FunctionDefinition` table.",null,null],[12,"0","","",85,null],[6,"LocalIndex","","Index of a local variable in a function.",null,null],[6,"MemberCount","","Max number of fields in a `StructDefinition`.",null,null],[6,"CodeOffset","","Index into the code stream for a jump. The offset is…",null,null],[6,"IdentifierPool","","The pool of identifiers.",null,null],[6,"AddressIdentifierPool","","The pool of address identifiers (addresses used in…",null,null],[6,"ConstantPool","","The pool of `Constant` values",null,null],[6,"TypeSignaturePool","","The pool of `TypeSignature` instances. Those are system…",null,null],[6,"SignaturePool","","The pool of `Signature` instances. Every function…",null,null],[5,"self_module_name","","",null,[[],["identstr",3]]],[17,"NO_TYPE_ARGUMENTS","","Index 0 into the LocalsSignaturePool, which is guaranteed…",null,null],[3,"ModuleHandle","","A `ModuleHandle` is a reference to a MOVE module. It is…",null,null],[12,"address","","Index into the `AddressIdentifierIndex`. Identifies…",5,null],[12,"name","","The name of the module published in the code section for…",5,null],[3,"StructHandle","","A `StructHandle` is a reference to a user defined type. It…",null,null],[12,"module","","The module that defines the type.",86,null],[12,"name","","The name of the type.",86,null],[12,"is_nominal_resource","","There are two ways for a type to have the Kind resource 1)…",86,null],[12,"type_parameters","","The type formals (identified by their index into the vec)…",86,null],[3,"FunctionHandle","","A `FunctionHandle` is a reference to a function. It is…",null,null],[12,"module","","The module that defines the function.",87,null],[12,"name","","The name of the function.",87,null],[12,"parameters","","The list of arguments to the function.",87,null],[12,"return_","","The list of return types.",87,null],[12,"type_parameters","","The type formals (identified by their index into the vec)…",87,null],[3,"FieldHandle","","A field access info (owner type and offset)",null,null],[12,"owner","","",88,null],[12,"field","","",88,null],[4,"StructFieldInformation","","`StructFieldInformation` indicates whether a struct is…",null,null],[13,"Native","","",89,null],[13,"Declared","","",89,null],[3,"StructDefInstantiation","","A complete or partial instantiation of a generic struct",null,null],[12,"def","","",90,null],[12,"type_parameters","","",90,null],[3,"FunctionInstantiation","","A complete or partial instantiation of a function",null,null],[12,"handle","","",91,null],[12,"type_parameters","","",91,null],[3,"FieldInstantiation","","A complete or partial instantiation of a field (or the…",null,null],[12,"handle","","",92,null],[12,"type_parameters","","",92,null],[3,"StructDefinition","","A `StructDefinition` is a type definition. It either…",null,null],[12,"struct_handle","","The `StructHandle` for this `StructDefinition`. This has…",93,null],[12,"field_information","","Contains either - Information indicating the struct is…",93,null],[3,"FieldDefinition","","A `FieldDefinition` is the definition of a field: its name…",null,null],[12,"name","","The name of the field.",94,null],[12,"signature","","The type of the field.",94,null],[3,"FunctionDefinition","","A `FunctionDefinition` is the implementation of a…",null,null],[12,"function","","The prototype of the function (module, name, signature).",95,null],[12,"is_public","","Flag to indicate if this function is public.",95,null],[12,"acquires_global_resources","","List of nominal resources (declared in this module) that…",95,null],[12,"code","","Code for this function.",95,null],[3,"TypeSignature","","A type definition. `SignatureToken` allows the definition…",null,null],[12,"0","","",96,null],[3,"FunctionSignature","","A `FunctionSignature` in internally used to create a…",null,null],[12,"return_","","The list of return types.",97,null],[12,"parameters","","The list of arguments to the function.",97,null],[12,"type_parameters","","The type formals (identified by their index into the vec)…",97,null],[3,"Signature","","A `Signature` is the list of locals used by a function.",null,null],[12,"0","","",98,null],[6,"TypeParameterIndex","","Type parameters are encoded as indices. This index can…",null,null],[4,"Kind","","A `Kind` classifies types into sets with rules each set…",null,null],[13,"All","","Represents the super set of all types. The type might…",99,null],[13,"Resource","","`Resource` types must follow move semantics and various…",99,null],[13,"Copyable","","`Copyable` types do not need to follow the `Resource`…",99,null],[4,"SignatureToken","","A `SignatureToken` is a type declaration for a location.",null,null],[13,"Bool","","Boolean, `true` or `false`.",6,null],[13,"U8","","Unsigned integers, 8 bits length.",6,null],[13,"U64","","Unsigned integers, 64 bits length.",6,null],[13,"U128","","Unsigned integers, 128 bits length.",6,null],[13,"Address","","Address, a 16 bytes immutable type.",6,null],[13,"Signer","","Signer, a 16 bytes immutable type representing the…",6,null],[13,"Vector","","Vector",6,null],[13,"Struct","","MOVE user type, resource or copyable",6,null],[13,"StructInstantiation","","",6,null],[13,"Reference","","Reference to a type.",6,null],[13,"MutableReference","","Mutable reference to a type.",6,null],[13,"TypeParameter","","Type parameter.",6,null],[3,"SignatureTokenPreorderTraversalIter","","An iterator to help traverse the `SignatureToken` in a…",null,null],[3,"SignatureTokenPreorderTraversalIterWithDepth","","Alternative preorder traversal iterator for SignatureToken…",null,null],[3,"Constant","","A `Constant` is a serialized value along with it\'s type.…",null,null],[12,"type_","","",100,null],[12,"data","","",100,null],[3,"CodeUnit","","A `CodeUnit` is the body of a function. It has the…",null,null],[12,"locals","","List of locals type. All locals are typed.",101,null],[12,"code","","Code stream, function body.",101,null],[4,"Bytecode","","`Bytecode` is a VM instruction of variable size. The type…",null,null],[13,"Pop","","Pop and discard the value at the top of the stack. The…",4,null],[13,"Ret","","Return from function, possibly with values according to…",4,null],[13,"BrTrue","","Branch to the instruction at position `CodeOffset` if the…",4,null],[13,"BrFalse","","Branch to the instruction at position `CodeOffset` if the…",4,null],[13,"Branch","","Branch unconditionally to the instruction at position…",4,null],[13,"LdU8","","Push a U8 constant onto the stack.",4,null],[13,"LdU64","","Push a U64 constant onto the stack.",4,null],[13,"LdU128","","Push a U128 constant onto the stack.",4,null],[13,"CastU8","","Convert the value at the top of the stack into u8.",4,null],[13,"CastU64","","Convert the value at the top of the stack into u64.",4,null],[13,"CastU128","","Convert the value at the top of the stack into u128.",4,null],[13,"LdConst","","Push a `Constant` onto the stack. The value is loaded and…",4,null],[13,"LdTrue","","Push `true` onto the stack.",4,null],[13,"LdFalse","","Push `false` onto the stack.",4,null],[13,"CopyLoc","","Push the local identified by `LocalIndex` onto the stack.…",4,null],[13,"MoveLoc","","Push the local identified by `LocalIndex` onto the stack.…",4,null],[13,"StLoc","","Pop value from the top of the stack and store it into the…",4,null],[13,"Call","","Call a function. The stack has the arguments pushed first…",4,null],[13,"CallGeneric","","",4,null],[13,"Pack","","Create an instance of the type specified via…",4,null],[13,"PackGeneric","","",4,null],[13,"Unpack","","Destroy an instance of a type and push the values bound to…",4,null],[13,"UnpackGeneric","","",4,null],[13,"ReadRef","","Read a reference. The reference is on the stack, it is…",4,null],[13,"WriteRef","","Write to a reference. The reference and the value are on…",4,null],[13,"FreezeRef","","Convert a mutable reference to an immutable reference.",4,null],[13,"MutBorrowLoc","","Load a mutable reference to a local identified by…",4,null],[13,"ImmBorrowLoc","","Load an immutable reference to a local identified by…",4,null],[13,"MutBorrowField","","Load a mutable reference to a field identified by…",4,null],[13,"MutBorrowFieldGeneric","","Load a mutable reference to a field identified by…",4,null],[13,"ImmBorrowField","","Load an immutable reference to a field identified by…",4,null],[13,"ImmBorrowFieldGeneric","","Load an immutable reference to a field identified by…",4,null],[13,"MutBorrowGlobal","","Return a mutable reference to an instance of type…",4,null],[13,"MutBorrowGlobalGeneric","","",4,null],[13,"ImmBorrowGlobal","","Return an immutable reference to an instance of type…",4,null],[13,"ImmBorrowGlobalGeneric","","",4,null],[13,"Add","","Add the 2 u64 at the top of the stack and pushes the…",4,null],[13,"Sub","","Subtract the 2 u64 at the top of the stack and pushes the…",4,null],[13,"Mul","","Multiply the 2 u64 at the top of the stack and pushes the…",4,null],[13,"Mod","","Perform a modulo operation on the 2 u64 at the top of the…",4,null],[13,"Div","","Divide the 2 u64 at the top of the stack and pushes the…",4,null],[13,"BitOr","","Bitwise OR the 2 u64 at the top of the stack and pushes…",4,null],[13,"BitAnd","","Bitwise AND the 2 u64 at the top of the stack and pushes…",4,null],[13,"Xor","","Bitwise XOR the 2 u64 at the top of the stack and pushes…",4,null],[13,"Or","","Logical OR the 2 bool at the top of the stack and pushes…",4,null],[13,"And","","Logical AND the 2 bool at the top of the stack and pushes…",4,null],[13,"Not","","Logical NOT the bool at the top of the stack and pushes…",4,null],[13,"Eq","","Compare for equality the 2 value at the top of the stack…",4,null],[13,"Neq","","Compare for inequality the 2 value at the top of the stack…",4,null],[13,"Lt","","Perform a \\\"less than\\\" operation of the 2 u64 at the top of…",4,null],[13,"Gt","","Perform a \\\"greater than\\\" operation of the 2 u64 at the top…",4,null],[13,"Le","","Perform a \\\"less than or equal\\\" operation of the 2 u64 at…",4,null],[13,"Ge","","Perform a \\\"greater than or equal\\\" than operation of the 2…",4,null],[13,"Abort","","Abort execution with errorcode",4,null],[13,"Nop","","No operation.",4,null],[13,"Exists","","Returns whether or not a given address has an object of…",4,null],[13,"ExistsGeneric","","",4,null],[13,"MoveFrom","","Move the instance of type StructDefinitionIndex, at the…",4,null],[13,"MoveFromGeneric","","",4,null],[13,"MoveTo","","Move the instance at the top of the stack to the address…",4,null],[13,"MoveToGeneric","","",4,null],[13,"Shl","","Shift the (second top value) left (top value) bits and…",4,null],[13,"Shr","","Shift the (second top value) right (top value) bits and…",4,null],[17,"NUMBER_OF_NATIVE_FUNCTIONS","","",null,null],[3,"CompiledScript","","Contains the main function to execute and its dependencies.",null,null],[3,"CompiledScriptMut","","A mutable version of `CompiledScript`. Converting to a…",null,null],[12,"module_handles","","Handles to all modules referenced.",102,null],[12,"struct_handles","","Handles to external/imported types.",102,null],[12,"function_handles","","Handles to external/imported functions.",102,null],[12,"function_instantiations","","Function instantiations.",102,null],[12,"signatures","","",102,null],[12,"identifiers","","All identifiers used in this transaction.",102,null],[12,"address_identifiers","","All address identifiers used in this transaction.",102,null],[12,"constant_pool","","Constant pool. The constant values used in the transaction.",102,null],[12,"type_parameters","","",102,null],[12,"parameters","","",102,null],[12,"code","","",102,null],[3,"ScriptConversionInfo","","",null,null],[3,"CompiledModule","","A `CompiledModule` defines the structure of a module which…",null,null],[3,"CompiledModuleMut","","A mutable version of `CompiledModule`. Converting to a…",null,null],[12,"self_module_handle_idx","","Handle to self.",103,null],[12,"module_handles","","Handles to external modules and self.",103,null],[12,"struct_handles","","Handles to external and internal types.",103,null],[12,"function_handles","","Handles to external and internal functions.",103,null],[12,"field_handles","","Handles to fields.",103,null],[12,"struct_def_instantiations","","Struct instantiations.",103,null],[12,"function_instantiations","","Function instantiations.",103,null],[12,"field_instantiations","","Field instantiations.",103,null],[12,"signatures","","Locals signature pool. The signature for all locals of the…",103,null],[12,"identifiers","","All identifiers used in this module.",103,null],[12,"address_identifiers","","All address identifiers used in this module.",103,null],[12,"constant_pool","","Constant pool. The constant values used in the module.",103,null],[12,"struct_defs","","Types defined in this module.",103,null],[12,"function_defs","","Function defined in this module.",103,null],[5,"empty_module","","Return the simplest module that will pass the bounds checker",null,[[],["compiledmodulemut",3]]],[5,"basic_test_module","","Create the following module which is convenient in tests:…",null,[[],["compiledmodulemut",3]]],[5,"dummy_procedure_module","","Create a dummy module to wrap the bytecode program in…",null,[[["bytecode",4],["vec",3]],["compiledmodule",3]]],[5,"empty_script","","Return a simple script that contains only a return in the…",null,[[],["compiledscriptmut",3]]],[4,"BinaryConstants","","Constant values for the binary format header.",null,null],[17,"TABLE_COUNT_MAX","","",null,null],[17,"TABLE_OFFSET_MAX","","",null,null],[17,"TABLE_SIZE_MAX","","",null,null],[17,"TABLE_CONTENT_SIZE_MAX","","",null,null],[17,"TABLE_INDEX_MAX","","",null,null],[17,"SIGNATURE_INDEX_MAX","","",null,null],[17,"ADDRESS_INDEX_MAX","","",null,null],[17,"IDENTIFIER_INDEX_MAX","","",null,null],[17,"MODULE_HANDLE_INDEX_MAX","","",null,null],[17,"STRUCT_HANDLE_INDEX_MAX","","",null,null],[17,"STRUCT_DEF_INDEX_MAX","","",null,null],[17,"FUNCTION_HANDLE_INDEX_MAX","","",null,null],[17,"FUNCTION_INST_INDEX_MAX","","",null,null],[17,"FIELD_HANDLE_INDEX_MAX","","",null,null],[17,"FIELD_INST_INDEX_MAX","","",null,null],[17,"STRUCT_DEF_INST_INDEX_MAX","","",null,null],[17,"CONSTANT_INDEX_MAX","","",null,null],[17,"BYTECODE_COUNT_MAX","","",null,null],[17,"BYTECODE_INDEX_MAX","","",null,null],[17,"LOCAL_INDEX_MAX","","",null,null],[17,"IDENTIFIER_SIZE_MAX","","",null,null],[17,"CONSTANT_SIZE_MAX","","",null,null],[17,"SIGNATURE_SIZE_MAX","","",null,null],[17,"ACQUIRES_COUNT_MAX","","",null,null],[17,"FIELD_COUNT_MAX","","",null,null],[17,"FIELD_OFFSET_MAX","","",null,null],[17,"TYPE_PARAMETER_COUNT_MAX","","",null,null],[17,"TYPE_PARAMETER_INDEX_MAX","","",null,null],[17,"SIGNATURE_TOKEN_DEPTH_MAX","","",null,null],[4,"TableType","","Constants for table types in the binary.",null,null],[13,"MODULE_HANDLES","","",104,null],[13,"STRUCT_HANDLES","","",104,null],[13,"FUNCTION_HANDLES","","",104,null],[13,"FUNCTION_INST","","",104,null],[13,"SIGNATURES","","",104,null],[13,"CONSTANT_POOL","","",104,null],[13,"IDENTIFIERS","","",104,null],[13,"ADDRESS_IDENTIFIERS","","",104,null],[13,"STRUCT_DEFS","","",104,null],[13,"STRUCT_DEF_INST","","",104,null],[13,"FUNCTION_DEFS","","",104,null],[13,"FIELD_HANDLE","","",104,null],[13,"FIELD_INST","","",104,null],[4,"SerializedType","","Constants for signature blob values.",null,null],[13,"BOOL","","",105,null],[13,"U8","","",105,null],[13,"U64","","",105,null],[13,"U128","","",105,null],[13,"ADDRESS","","",105,null],[13,"REFERENCE","","",105,null],[13,"MUTABLE_REFERENCE","","",105,null],[13,"STRUCT","","",105,null],[13,"TYPE_PARAMETER","","",105,null],[13,"VECTOR","","",105,null],[13,"STRUCT_INST","","",105,null],[13,"SIGNER","","",105,null],[4,"SerializedNominalResourceFlag","","",null,null],[13,"NOMINAL_RESOURCE","","",106,null],[13,"NORMAL_STRUCT","","",106,null],[4,"SerializedKind","","",null,null],[13,"ALL","","",107,null],[13,"COPYABLE","","",107,null],[13,"RESOURCE","","",107,null],[4,"SerializedNativeStructFlag","","",null,null],[13,"NATIVE","","",108,null],[13,"DECLARED","","",108,null],[4,"Opcodes","","List of opcodes constants.",null,null],[13,"POP","","",109,null],[13,"RET","","",109,null],[13,"BR_TRUE","","",109,null],[13,"BR_FALSE","","",109,null],[13,"BRANCH","","",109,null],[13,"LD_U64","","",109,null],[13,"LD_CONST","","",109,null],[13,"LD_TRUE","","",109,null],[13,"LD_FALSE","","",109,null],[13,"COPY_LOC","","",109,null],[13,"MOVE_LOC","","",109,null],[13,"ST_LOC","","",109,null],[13,"MUT_BORROW_LOC","","",109,null],[13,"IMM_BORROW_LOC","","",109,null],[13,"MUT_BORROW_FIELD","","",109,null],[13,"IMM_BORROW_FIELD","","",109,null],[13,"CALL","","",109,null],[13,"PACK","","",109,null],[13,"UNPACK","","",109,null],[13,"READ_REF","","",109,null],[13,"WRITE_REF","","",109,null],[13,"ADD","","",109,null],[13,"SUB","","",109,null],[13,"MUL","","",109,null],[13,"MOD","","",109,null],[13,"DIV","","",109,null],[13,"BIT_OR","","",109,null],[13,"BIT_AND","","",109,null],[13,"XOR","","",109,null],[13,"OR","","",109,null],[13,"AND","","",109,null],[13,"NOT","","",109,null],[13,"EQ","","",109,null],[13,"NEQ","","",109,null],[13,"LT","","",109,null],[13,"GT","","",109,null],[13,"LE","","",109,null],[13,"GE","","",109,null],[13,"ABORT","","",109,null],[13,"NOP","","",109,null],[13,"EXISTS","","",109,null],[13,"MUT_BORROW_GLOBAL","","",109,null],[13,"IMM_BORROW_GLOBAL","","",109,null],[13,"MOVE_FROM","","",109,null],[13,"MOVE_TO","","",109,null],[13,"FREEZE_REF","","",109,null],[13,"SHL","","",109,null],[13,"SHR","","",109,null],[13,"LD_U8","","",109,null],[13,"LD_U128","","",109,null],[13,"CAST_U8","","",109,null],[13,"CAST_U64","","",109,null],[13,"CAST_U128","","",109,null],[13,"MUT_BORROW_FIELD_GENERIC","","",109,null],[13,"IMM_BORROW_FIELD_GENERIC","","",109,null],[13,"CALL_GENERIC","","",109,null],[13,"PACK_GENERIC","","",109,null],[13,"UNPACK_GENERIC","","",109,null],[13,"EXISTS_GENERIC","","",109,null],[13,"MUT_BORROW_GLOBAL_GENERIC","","",109,null],[13,"IMM_BORROW_GLOBAL_GENERIC","","",109,null],[13,"MOVE_FROM_GENERIC","","",109,null],[13,"MOVE_TO_GENERIC","","",109,null],[17,"BINARY_SIZE_LIMIT","","Upper limit on the binary size",null,null],[3,"BinaryData","","A wrapper for the binary vector",null,null],[5,"write_u64_as_uleb128","","",null,[[["binarydata",3]],[["error",3],["result",4]]]],[5,"read_u32","","",null,[[["cursor",3]],[["result",4],["error",3]]]],[5,"read_u8","","",null,[[["cursor",3]],[["result",4],["error",3]]]],[5,"read_uleb128_as_u64","","",null,[[["cursor",3]],[["error",3],["result",4]]]],[5,"instruction_key","","The encoding of the instruction is the serialized form of…",null,[[["bytecode",4]]]],[8,"ModuleAccess","","Represents accessors for a compiled module.",null,null],[10,"as_module","","Returns the `CompiledModule` that will be used for accesses.",2,[[],["compiledmodule",3]]],[11,"self_handle_idx","","",2,[[],["modulehandleindex",3]]],[11,"self_handle","","Returns the `ModuleHandle` for `self`.",2,[[],["modulehandle",3]]],[11,"name","","Returns the name of the module.",2,[[],["identstr",3]]],[11,"address","","Returns the address of the module.",2,[[],["accountaddress",3]]],[11,"module_handle_at","","",2,[[["modulehandleindex",3]],["modulehandle",3]]],[11,"struct_handle_at","","",2,[[["structhandleindex",3]],["structhandle",3]]],[11,"function_handle_at","","",2,[[["functionhandleindex",3]],["functionhandle",3]]],[11,"field_handle_at","","",2,[[["fieldhandleindex",3]],["fieldhandle",3]]],[11,"struct_instantiation_at","","",2,[[["structdefinstantiationindex",3]],["structdefinstantiation",3]]],[11,"function_instantiation_at","","",2,[[["functioninstantiationindex",3]],["functioninstantiation",3]]],[11,"field_instantiation_at","","",2,[[["fieldinstantiationindex",3]],["fieldinstantiation",3]]],[11,"signature_at","","",2,[[["signatureindex",3]],["signature",3]]],[11,"identifier_at","","",2,[[["identifierindex",3]],["identstr",3]]],[11,"address_identifier_at","","",2,[[["addressidentifierindex",3]],["accountaddress",3]]],[11,"constant_at","","",2,[[["constantpoolindex",3]],["constant",3]]],[11,"struct_def_at","","",2,[[["structdefinitionindex",3]],["structdefinition",3]]],[11,"function_def_at","","",2,[[["functiondefinitionindex",3]],["functiondefinition",3]]],[11,"module_handles","","",2,[[]]],[11,"struct_handles","","",2,[[]]],[11,"function_handles","","",2,[[]]],[11,"field_handles","","",2,[[]]],[11,"struct_instantiations","","",2,[[]]],[11,"function_instantiations","","",2,[[]]],[11,"field_instantiations","","",2,[[]]],[11,"signatures","","",2,[[]]],[11,"constant_pool","","",2,[[]]],[11,"identifiers","","",2,[[]]],[11,"address_identifiers","","",2,[[]]],[11,"struct_defs","","",2,[[]]],[11,"function_defs","","",2,[[]]],[11,"module_id_for_handle","","",2,[[["modulehandle",3]],["moduleid",3]]],[11,"self_id","","",2,[[],["moduleid",3]]],[0,"vm","dvm_libra_deps","",null,null],[4,"ContractEvent","dvm_libra_deps::vm","Support versioning of the data structure.",null,null],[13,"V0","","",110,null],[4,"TransactionStatus","","The status of executing a transaction. The VM decides…",null,null],[13,"Discard","","Discard the transaction output",111,null],[13,"Keep","","Keep the transaction output",111,null],[13,"Retry","","Retry the transaction because it is after a…",111,null],[5,"txn_effects_to_writeset_and_events_cached","","",null,[[["transactioneffects",3]],[["vmstatus",4],["result",4]]]],[3,"MoveVM","","",null,null],[12,"runtime","","",112,null],[3,"Value","","A Move value -- a wrapper around `ValueImpl` which can be…",null,null],[12,"0","","",113,null],[3,"Loader","","",null,null],[12,"scripts","","",114,null],[12,"module_cache","","",114,null],[12,"type_cache","","",114,null],[3,"TransactionEffects","","",null,null],[12,"resources","","",115,null],[12,"modules","","",115,null],[12,"events","","",115,null],[3,"Session","","",null,null],[0,"gas","dvm_libra_deps","",null,null],[6,"GasCarrier","dvm_libra_deps::gas","The underlying carrier for gas-related units and costs.…",null,null],[8,"GasAlgebra","","A trait encoding the operations permitted on the…",null,null],[10,"new","","Project a value into the gas algebra.",116,[[]]],[10,"get","","Get the carrier.",116,[[]]],[11,"map","","Map a function `f` of one argument over the underlying data.",116,[[]]],[11,"map2","","Map a function `f` of two arguments over the underlying…",116,[[]]],[11,"app","","Apply a function `f` of two arguments to the carrier.…",116,[[]]],[11,"unitary_cast","","We allow casting between GasAlgebras as long as they have…",116,[[]]],[11,"add","","Add the two `GasAlgebra`s together.",116,[[]]],[11,"sub","","Subtract one `GasAlgebra` from the other.",116,[[]]],[11,"mul","","Multiply two `GasAlgebra`s together.",116,[[]]],[11,"div","","Divide one `GasAlgebra` by the other.",116,[[]]],[3,"AbstractMemorySize","","A newtype wrapper that represents the (abstract) memory…",null,null],[3,"GasUnits","","A newtype wrapper around the underlying carrier for the…",null,null],[3,"GasPrice","","A newtype wrapper around the gas price for each unit of…",null,null],[17,"ONE_GAS_UNIT","","One unit of gas",null,null],[17,"MAX_ABSTRACT_MEMORY_SIZE","","The maximum size representable by AbstractMemorySize",null,null],[17,"CONST_SIZE","","The size in bytes for a non-string or address constant on…",null,null],[17,"REFERENCE_SIZE","","The size in bytes for a reference on the stack",null,null],[17,"STRUCT_SIZE","","The size of a struct in bytes",null,null],[17,"DEFAULT_ACCOUNT_SIZE","","For V1 all accounts will be ~800 bytes",null,null],[17,"LARGE_TRANSACTION_CUTOFF","","Any transaction over this size will be charged…",null,null],[17,"MIN_EXISTS_DATA_SIZE","","For exists checks on data that doesn\'t exists this is the…",null,null],[3,"GasConstants","","",null,null],[12,"global_memory_per_byte_cost","","The cost per-byte read from global storage.",117,null],[12,"global_memory_per_byte_write_cost","","The cost per-byte written to storage.",117,null],[12,"min_transaction_gas_units","","The flat minimum amount of gas required for any…",117,null],[12,"large_transaction_cutoff","","Any transaction over this size will be charged an…",117,null],[12,"intrinsic_gas_per_byte","","The units of gas that to be charged per byte over the…",117,null],[12,"maximum_number_of_gas_units","","~5 microseconds should equal one unit of computational…",117,null],[12,"min_price_per_gas_unit","","The minimum gas price that a transaction can be submitted…",117,null],[12,"max_price_per_gas_unit","","The maximum gas unit price that a transaction can be…",117,null],[12,"max_transaction_size_in_bytes","","",117,null],[12,"gas_unit_scaling_factor","","",117,null],[12,"default_account_size","","",117,null],[3,"CostTable","","The cost tables, keyed by the serialized form of the…",null,null],[12,"instruction_table","","",118,null],[12,"native_table","","",118,null],[12,"gas_constants","","",118,null],[3,"GasCost","","The `GasCost` tracks: - instruction cost: how much…",null,null],[12,"instruction_gas","","",119,null],[12,"memory_gas","","",119,null],[3,"CostStrategy","","The Move VM implementation for gas charging.",null,null],[5,"new_from_instructions","","",null,[[["vec",3],["gascost",3],["vec",3]],["costtable",3]]],[5,"zero_cost_schedule","","",null,[[],["costtable",3]]],[5,"calculate_intrinsic_gas","","Calculate the intrinsic gas for the transaction based upon…",null,[[["abstractmemorysize",3],["gasconstants",3]],["gasunits",3]]],[4,"NativeCostIndex","","",null,null],[13,"SHA2_256","","",120,null],[13,"SHA3_256","","",120,null],[13,"ED25519_VERIFY","","",120,null],[13,"ED25519_THRESHOLD_VERIFY","","",120,null],[13,"LCS_TO_BYTES","","",120,null],[13,"LENGTH","","",120,null],[13,"EMPTY","","",120,null],[13,"BORROW","","",120,null],[13,"BORROW_MUT","","",120,null],[13,"PUSH_BACK","","",120,null],[13,"POP_BACK","","",120,null],[13,"DESTROY_EMPTY","","",120,null],[13,"SWAP","","",120,null],[13,"ED25519_VALIDATE_KEY","","",120,null],[13,"SIGNER_BORROW","","",120,null],[13,"CREATE_SIGNER","","",120,null],[13,"DESTROY_SIGNER","","",120,null],[13,"EMIT_EVENT","","",120,null],[13,"U256_FROM_U8","","",120,null],[13,"U256_FROM_U64","","",120,null],[13,"U256_FROM_U128","","",120,null],[13,"U256_AS_U8","","",120,null],[13,"U256_AS_U64","","",120,null],[13,"U256_AS_U128","","",120,null],[13,"U256_MUL","","",120,null],[13,"U256_DIV","","",120,null],[13,"U256_SUB","","",120,null],[13,"U256_ADD","","",120,null],[4,"N","","",null,null],[13,"SHA2_256","","",120,null],[13,"SHA3_256","","",120,null],[13,"ED25519_VERIFY","","",120,null],[13,"ED25519_THRESHOLD_VERIFY","","",120,null],[13,"LCS_TO_BYTES","","",120,null],[13,"LENGTH","","",120,null],[13,"EMPTY","","",120,null],[13,"BORROW","","",120,null],[13,"BORROW_MUT","","",120,null],[13,"PUSH_BACK","","",120,null],[13,"POP_BACK","","",120,null],[13,"DESTROY_EMPTY","","",120,null],[13,"SWAP","","",120,null],[13,"ED25519_VALIDATE_KEY","","",120,null],[13,"SIGNER_BORROW","","",120,null],[13,"CREATE_SIGNER","","",120,null],[13,"DESTROY_SIGNER","","",120,null],[13,"EMIT_EVENT","","",120,null],[13,"U256_FROM_U8","","",120,null],[13,"U256_FROM_U64","","",120,null],[13,"U256_FROM_U128","","",120,null],[13,"U256_AS_U8","","",120,null],[13,"U256_AS_U64","","",120,null],[13,"U256_AS_U128","","",120,null],[13,"U256_MUL","","",120,null],[13,"U256_DIV","","",120,null],[13,"U256_SUB","","",120,null],[13,"U256_ADD","","",120,null],[0,"lcs","dvm_libra_deps","",null,null],[0,"test_helpers","dvm_libra_deps::lcs","",null,null],[5,"assert_canonical_encode_decode","dvm_libra_deps::lcs::test_helpers","",null,[[]]],[17,"MAX_SEQUENCE_LENGTH","dvm_libra_deps::lcs","Variable length sequences in LCS are limited to max length…",null,null],[17,"MAX_CONTAINER_DEPTH","","Maximal allowed depth of LCS data, counting only structs…",null,null],[5,"from_bytes","","Deserializes a `&[u8]` into a type.",null,[[],[["error",4],["result",4]]]],[5,"from_bytes_seed","","Perform a stateful deserialization from a `&[u8]` using…",null,[[],[["error",4],["result",4]]]],[4,"Error","","",null,null],[13,"Eof","","",121,null],[13,"Io","","",121,null],[13,"ExceededMaxLen","","",121,null],[13,"ExceededContainerDepthLimit","","",121,null],[13,"ExpectedBoolean","","",121,null],[13,"ExpectedMapKey","","",121,null],[13,"ExpectedMapValue","","",121,null],[13,"NonCanonicalMap","","",121,null],[13,"ExpectedOption","","",121,null],[13,"Custom","","",121,null],[13,"MissingLen","","",121,null],[13,"NotSupported","","",121,null],[13,"RemainingInput","","",121,null],[13,"Utf8","","",121,null],[13,"NonCanonicalUleb128Encoding","","",121,null],[13,"IntegerOverflowDuringUleb128Decoding","","",121,null],[6,"Result","","",null,null],[5,"is_human_readable","","",null,[[]]],[5,"serialize_into","","Same as `to_bytes` but write directly into an…",null,[[],[["result",4],["error",4]]]],[5,"serialized_size","","Same as `to_bytes` but only return the size of the…",null,[[],[["error",4],["result",4]]]],[5,"to_bytes","","Serialize the given data structure as a `Vec<u8>` of LCS.",null,[[],[["result",4],["error",4],["vec",3]]]],[0,"logger","dvm_libra_deps","",null,null],[0,"prelude","dvm_libra_deps::logger","",null,null],[14,"debug","dvm_libra_deps::logger::prelude","",null,null],[14,"error","","",null,null],[14,"event","","Writes event to event stream Example: event!(\\\"committed\\\",…",null,null],[14,"info","","",null,null],[4,"SecurityEvent","","",null,null],[13,"InvalidTransactionMempool","","Mempool received a transaction from another peer with an…",122,null],[13,"InvalidNetworkEventMempool","","Mempool received an invalid network event",122,null],[13,"ConsensusInvalidMessage","","Consensus received an invalid message (not well-formed or…",122,null],[13,"ConsensusEquivocatingVote","","Consensus received an equivocating vote",122,null],[13,"InvalidConsensusProposal","","Consensus received an invalid proposal",122,null],[13,"InvalidConsensusVote","","Consensus received an invalid vote",122,null],[13,"InvalidConsensusRound","","Consensus received an invalid new round message",122,null],[13,"InvalidSyncInfoMsg","","Consensus received an invalid sync info message",122,null],[13,"InvalidRetrievedBlock","","A received block is invalid",122,null],[13,"InvalidBlock","","A block being committed or executed is invalid",122,null],[13,"StateSyncInvalidChunk","","Invalid chunk of transactions received",122,null],[13,"InvalidNetworkEventHC","","HealthChecker received an invalid network event",122,null],[13,"InvalidHealthCheckerMsg","","HealthChecker received an invalid message",122,null],[13,"InvalidNetworkPeer","","Network identified an invalid peer",122,null],[13,"InvalidNetworkHandshakeMsg","","Network couldn\'t negotiate",122,null],[14,"trace","","",null,null],[14,"warn","","",null,null],[3,"StructuredLogEntry","","",null,null],[0,"json_log","dvm_libra_deps::logger","",null,null],[3,"JsonLogEntry","dvm_libra_deps::logger::json_log","",null,null],[12,"name","","",123,null],[12,"timestamp","","",123,null],[12,"json","","",123,null],[5,"send_json_log","","Sends event to event stream.",null,[[["jsonlogentry",3]]]],[5,"pop_last_entries","","Get up to MAX_EVENTS_IN_QUEUE last events and clears the…",null,[[],[["vec",3],["jsonlogentry",3]]]],[14,"event","dvm_libra_deps::logger","Writes event to event stream Example: event!(\\\"committed\\\",…",null,null],[14,"log","","",null,null],[14,"trace","","",null,null],[14,"debug","","",null,null],[14,"info","","",null,null],[14,"warn","","",null,null],[14,"error","","",null,null],[3,"LibraLogger","","",null,null],[3,"Logger","","",null,null],[3,"LibraLoggerBuilder","","",null,null],[8,"Writer","","An trait encapsulating the operations required for writing…",null,null],[10,"write","","Write the log.",124,[[["string",3]]]],[17,"CHANNEL_SIZE","","",null,null],[3,"Event","","",null,null],[3,"Filter","","",null,null],[4,"LevelFilter","","",null,null],[13,"Off","","",125,null],[13,"Error","","",125,null],[13,"Warn","","",125,null],[13,"Info","","",125,null],[13,"Debug","","",125,null],[13,"Trace","","",125,null],[4,"Level","","",null,null],[13,"Error","","The \\\"error\\\" level.",126,null],[13,"Warn","","The \\\"warn\\\" level.",126,null],[13,"Info","","The \\\"info\\\" level.",126,null],[13,"Debug","","The \\\"debug\\\" level.",126,null],[13,"Trace","","The \\\"trace\\\" level.",126,null],[3,"Metadata","","",null,null],[3,"LoggingField","","Field is similar to .data but restricts type of the value…",null,null],[3,"StructuredLogEntry","","",null,null],[3,"Key","","",null,null],[3,"KeyValue","","",null,null],[8,"Schema","","A schema of key-value pairs.",null,null],[10,"visit","","Visit key-value pairs.",127,[[["visitor",8]]]],[24,"Schema","","",null,null],[4,"Value","","",null,null],[13,"Debug","","",128,null],[13,"Display","","",128,null],[13,"Serde","","",128,null],[8,"Visitor","","A visitor for the key-value pairs in a `Schema`.",null,null],[10,"visit_pair","","Visit a key-value pair.",129,[[["key",3],["value",4]]]],[4,"SecurityEvent","","",null,null],[13,"InvalidTransactionMempool","","Mempool received a transaction from another peer with an…",122,null],[13,"InvalidNetworkEventMempool","","Mempool received an invalid network event",122,null],[13,"ConsensusInvalidMessage","","Consensus received an invalid message (not well-formed or…",122,null],[13,"ConsensusEquivocatingVote","","Consensus received an equivocating vote",122,null],[13,"InvalidConsensusProposal","","Consensus received an invalid proposal",122,null],[13,"InvalidConsensusVote","","Consensus received an invalid vote",122,null],[13,"InvalidConsensusRound","","Consensus received an invalid new round message",122,null],[13,"InvalidSyncInfoMsg","","Consensus received an invalid sync info message",122,null],[13,"InvalidRetrievedBlock","","A received block is invalid",122,null],[13,"InvalidBlock","","A block being committed or executed is invalid",122,null],[13,"StateSyncInvalidChunk","","Invalid chunk of transactions received",122,null],[13,"InvalidNetworkEventHC","","HealthChecker received an invalid network event",122,null],[13,"InvalidHealthCheckerMsg","","HealthChecker received an invalid message",122,null],[13,"InvalidNetworkPeer","","Network identified an invalid peer",122,null],[13,"InvalidNetworkHandshakeMsg","","Network couldn\'t negotiate",122,null],[11,"from","dvm_libra_deps::bf","",130,[[]]],[11,"into","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"vzip","","",130,[[]]],[11,"from","dvm_libra_deps::module","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"to_string","","",131,[[],["string",3]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"test_only_hash","","",131,[[],["hashvalue",3]]],[11,"vzip","","",131,[[]]],[11,"equivalent","","",131,[[]]],[11,"erased_serialize","","",131,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"vzip","","",1,[[]]],[11,"equivalent","","",1,[[]]],[11,"erased_serialize","","",1,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","dvm_libra_deps::file_format","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"equivalent","","",4,[[]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"vzip","","",132,[[]]],[11,"equivalent","","",132,[[]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"vzip","","",133,[[]]],[11,"equivalent","","",133,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"equivalent","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"equivalent","","",6,[[]]],[11,"from","dvm_libra_deps::compiler::compiled_unit","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","dvm_libra_deps::compiler","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","dvm_libra_deps::module","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"test_only_hash","","",13,[[],["hashvalue",3]]],[11,"vzip","","",13,[[]]],[11,"equivalent","","",13,[[]]],[11,"erased_serialize","","",13,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","dvm_libra_deps::account","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"to_string","","",134,[[],["string",3]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"test_only_hash","","",134,[[],["hashvalue",3]]],[11,"vzip","","",134,[[]]],[11,"encode_hex","","",134,[[]]],[11,"encode_hex_upper","","",134,[[]]],[11,"equivalent","","",134,[[]]],[11,"erased_serialize","","",134,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"to_string","","",135,[[],["string",3]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"test_only_hash","","",135,[[],["hashvalue",3]]],[11,"vzip","","",135,[[]]],[11,"equivalent","","",135,[[]]],[11,"erased_serialize","","",135,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","dvm_libra_deps::result","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"test_only_hash","","",14,[[],["hashvalue",3]]],[11,"vzip","","",14,[[]]],[11,"equivalent","","",14,[[]]],[11,"erased_serialize","","",14,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"test_only_hash","","",15,[[],["hashvalue",3]]],[11,"vzip","","",15,[[]]],[11,"equivalent","","",15,[[]]],[11,"erased_serialize","","",15,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"test_only_hash","","",17,[[],["hashvalue",3]]],[11,"vzip","","",17,[[]]],[11,"equivalent","","",17,[[]]],[11,"erased_serialize","","",17,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"test_only_hash","","",19,[[],["hashvalue",3]]],[11,"vzip","","",19,[[]]],[11,"equivalent","","",19,[[]]],[11,"erased_serialize","","",19,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"equivalent","","",20,[[]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"to_string","","",136,[[],["string",3]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"vzip","","",136,[[]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"to_string","","",137,[[],["string",3]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"vzip","","",137,[[]]],[11,"equivalent","","",137,[[]]],[11,"from","dvm_libra_deps::ds","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"to_string","","",21,[[],["string",3]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"test_only_hash","","",21,[[],["hashvalue",3]]],[11,"vzip","","",21,[[]]],[11,"equivalent","","",21,[[]]],[11,"erased_serialize","","",21,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"test_only_hash","","",23,[[],["hashvalue",3]]],[11,"vzip","","",23,[[]]],[11,"equivalent","","",23,[[]]],[11,"erased_serialize","","",23,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"into_iter","","",138,[[]]],[11,"to_owned","","",138,[[]]],[11,"clone_into","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"test_only_hash","","",138,[[],["hashvalue",3]]],[11,"vzip","","",138,[[]]],[11,"equivalent","","",138,[[]]],[11,"erased_serialize","","",138,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"test_only_hash","","",139,[[],["hashvalue",3]]],[11,"vzip","","",139,[[]]],[11,"equivalent","","",139,[[]]],[11,"erased_serialize","","",139,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"vzip","","",140,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"vzip","","",141,[[]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"vzip","","",142,[[]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"vzip","","",143,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"to_string","","",26,[[],["string",3]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"test_only_hash","","",26,[[],["hashvalue",3]]],[11,"vzip","","",26,[[]]],[11,"equivalent","","",26,[[]]],[11,"erased_serialize","","",26,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"to_string","","",27,[[],["string",3]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"test_only_hash","","",27,[[],["hashvalue",3]]],[11,"vzip","","",27,[[]]],[11,"equivalent","","",27,[[]]],[11,"erased_serialize","","",27,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"test_only_hash","","",144,[[],["hashvalue",3]]],[11,"vzip","","",144,[[]]],[11,"equivalent","","",144,[[]]],[11,"erased_serialize","","",144,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","dvm_libra_deps::compiler::compiled_unit","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","dvm_libra_deps::compiler","",31,[[]]],[11,"into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"equivalent","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"equivalent","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"equivalent","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"equivalent","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"to_string","","",37,[[],["string",3]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"equivalent","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"to_string","","",38,[[],["string",3]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"equivalent","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"to_string","","",41,[[],["string",3]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"equivalent","","",41,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"equivalent","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"equivalent","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"to_string","","",66,[[],["string",3]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"equivalent","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"to_string","","",69,[[],["string",3]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"to_string","","",70,[[],["string",3]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"to_string","","",145,[[],["string",3]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"vzip","","",145,[[]]],[11,"encode_hex","","",145,[[]]],[11,"encode_hex_upper","","",145,[[]]],[11,"equivalent","","",145,[[]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"vzip","","",146,[[]]],[11,"from","dvm_libra_deps::file_format","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"to_string","","",73,[[],["string",3]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"equivalent","","",73,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"to_string","","",74,[[],["string",3]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"equivalent","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"to_string","","",75,[[],["string",3]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"equivalent","","",75,[[]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"to_string","","",76,[[],["string",3]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"equivalent","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"to_string","","",77,[[],["string",3]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"equivalent","","",77,[[]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"to_string","","",78,[[],["string",3]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"equivalent","","",78,[[]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"to_string","","",79,[[],["string",3]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"equivalent","","",79,[[]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"to_string","","",80,[[],["string",3]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"equivalent","","",80,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"to_string","","",81,[[],["string",3]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"equivalent","","",81,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"to_string","","",82,[[],["string",3]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"equivalent","","",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"to_string","","",83,[[],["string",3]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"equivalent","","",83,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"to_string","","",84,[[],["string",3]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"equivalent","","",84,[[]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"to_string","","",85,[[],["string",3]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"equivalent","","",85,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"equivalent","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"equivalent","","",87,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"equivalent","","",88,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"vzip","","",89,[[]]],[11,"equivalent","","",89,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"equivalent","","",90,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"vzip","","",91,[[]]],[11,"equivalent","","",91,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"equivalent","","",92,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"equivalent","","",93,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"vzip","","",94,[[]]],[11,"equivalent","","",94,[[]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"vzip","","",95,[[]]],[11,"equivalent","","",95,[[]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"vzip","","",96,[[]]],[11,"equivalent","","",96,[[]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"to_owned","","",97,[[]]],[11,"clone_into","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"vzip","","",97,[[]]],[11,"equivalent","","",97,[[]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"vzip","","",98,[[]]],[11,"equivalent","","",98,[[]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"vzip","","",99,[[]]],[11,"equivalent","","",99,[[]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"into_iter","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"vzip","","",147,[[]]],[11,"par_bridge","","",147,[[],["iterbridge",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"into_iter","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"vzip","","",148,[[]]],[11,"par_bridge","","",148,[[],["iterbridge",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"vzip","","",100,[[]]],[11,"equivalent","","",100,[[]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"vzip","","",101,[[]]],[11,"equivalent","","",101,[[]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"vzip","","",102,[[]]],[11,"equivalent","","",102,[[]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"vzip","","",149,[[]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"vzip","","",103,[[]]],[11,"equivalent","","",103,[[]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"vzip","","",150,[[]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"vzip","","",104,[[]]],[11,"equivalent","","",104,[[]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"vzip","","",105,[[]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"vzip","","",106,[[]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"vzip","","",107,[[]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"vzip","","",108,[[]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"vzip","","",109,[[]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"vzip","","",151,[[]]],[11,"from","dvm_libra_deps::vm","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"to_string","","",110,[[],["string",3]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"test_only_hash","","",110,[[],["hashvalue",3]]],[11,"vzip","","",110,[[]]],[11,"equivalent","","",110,[[]]],[11,"erased_serialize","","",110,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"test_only_hash","","",111,[[],["hashvalue",3]]],[11,"vzip","","",111,[[]]],[11,"equivalent","","",111,[[]]],[11,"erased_serialize","","",111,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"vzip","","",112,[[]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_string","","",113,[[],["string",3]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"vzip","","",113,[[]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"vzip","","",114,[[]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"vzip","","",115,[[]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"vzip","","",152,[[]]],[11,"from","dvm_libra_deps::gas","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"test_only_hash","","",153,[[],["hashvalue",3]]],[11,"vzip","","",153,[[]]],[11,"equivalent","","",153,[[]]],[11,"erased_serialize","","",153,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"test_only_hash","","",154,[[],["hashvalue",3]]],[11,"vzip","","",154,[[]]],[11,"equivalent","","",154,[[]]],[11,"erased_serialize","","",154,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"test_only_hash","","",155,[[],["hashvalue",3]]],[11,"vzip","","",155,[[]]],[11,"equivalent","","",155,[[]]],[11,"erased_serialize","","",155,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"test_only_hash","","",117,[[],["hashvalue",3]]],[11,"vzip","","",117,[[]]],[11,"erased_serialize","","",117,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"test_only_hash","","",118,[[],["hashvalue",3]]],[11,"vzip","","",118,[[]]],[11,"erased_serialize","","",118,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"test_only_hash","","",119,[[],["hashvalue",3]]],[11,"vzip","","",119,[[]]],[11,"erased_serialize","","",119,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"vzip","","",156,[[]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"vzip","","",120,[[]]],[11,"equivalent","","",120,[[]]],[11,"from","dvm_libra_deps::lcs","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"to_string","","",121,[[],["string",3]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"vzip","","",121,[[]]],[11,"from","dvm_libra_deps::logger","",122,[[]]],[11,"into","","",122,[[]]],[11,"to_owned","","",122,[[]]],[11,"clone_into","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"test_only_hash","","",122,[[],["hashvalue",3]]],[11,"vzip","","",122,[[]]],[11,"erased_serialize","","",122,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"test_only_hash","","",157,[[],["hashvalue",3]]],[11,"vzip","","",157,[[]]],[11,"erased_serialize","","",157,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","dvm_libra_deps::logger::json_log","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"test_only_hash","","",123,[[],["hashvalue",3]]],[11,"vzip","","",123,[[]]],[11,"erased_serialize","","",123,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","dvm_libra_deps::logger","",158,[[]]],[11,"into","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"vzip","","",158,[[]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"vzip","","",159,[[]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"vzip","","",160,[[]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"vzip","","",161,[[]]],[11,"from","","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"vzip","","",125,[[]]],[11,"equivalent","","",125,[[]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"to_string","","",126,[[],["string",3]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"test_only_hash","","",126,[[],["hashvalue",3]]],[11,"vzip","","",126,[[]]],[11,"equivalent","","",126,[[]]],[11,"erased_serialize","","",126,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"test_only_hash","","",162,[[],["hashvalue",3]]],[11,"vzip","","",162,[[]]],[11,"erased_serialize","","",162,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"vzip","","",163,[[]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"test_only_hash","","",164,[[],["hashvalue",3]]],[11,"vzip","","",164,[[]]],[11,"equivalent","","",164,[[]]],[11,"erased_serialize","","",164,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"vzip","","",165,[[]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"vzip","","",128,[[]]],[11,"clone","dvm_libra_deps::lcs","",121,[[],["error",4]]],[11,"custom","","",121,[[],["error",4]]],[11,"fmt","","",121,[[["formatter",3]],[["error",3],["result",4]]]],[11,"custom","","",121,[[],["error",4]]],[11,"fmt","","",121,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",121,[[["error",3]],["error",4]]],[11,"eq","","",121,[[["error",4]]]],[11,"ne","","",121,[[["error",4]]]],[11,"as_module","dvm_libra_deps::file_format","",133,[[],["compiledmodule",3]]],[11,"eq","","",82,[[["constantpoolindex",3]]]],[11,"ne","","",82,[[["constantpoolindex",3]]]],[11,"eq","","",6,[[["signaturetoken",4]]]],[11,"ne","","",6,[[["signaturetoken",4]]]],[11,"eq","","",89,[[["structfieldinformation",4]]]],[11,"ne","","",89,[[["structfieldinformation",4]]]],[11,"eq","","",132,[[["compiledscript",3]]]],[11,"ne","","",132,[[["compiledscript",3]]]],[11,"eq","","",100,[[["constant",3]]]],[11,"ne","","",100,[[["constant",3]]]],[11,"eq","","",91,[[["functioninstantiation",3]]]],[11,"ne","","",91,[[["functioninstantiation",3]]]],[11,"eq","","",97,[[["functionsignature",3]]]],[11,"ne","","",97,[[["functionsignature",3]]]],[11,"eq","","",95,[[["functiondefinition",3]]]],[11,"ne","","",95,[[["functiondefinition",3]]]],[11,"eq","","",86,[[["structhandle",3]]]],[11,"ne","","",86,[[["structhandle",3]]]],[11,"eq","","",75,[[["functionhandleindex",3]]]],[11,"ne","","",75,[[["functionhandleindex",3]]]],[11,"eq","","",79,[[["fieldinstantiationindex",3]]]],[11,"ne","","",79,[[["fieldinstantiationindex",3]]]],[11,"eq","","",74,[[["structhandleindex",3]]]],[11,"ne","","",74,[[["structhandleindex",3]]]],[11,"eq","","",83,[[["signatureindex",3]]]],[11,"ne","","",83,[[["signatureindex",3]]]],[11,"eq","","",4,[[["bytecode",4]]]],[11,"ne","","",4,[[["bytecode",4]]]],[11,"eq","","",5,[[["modulehandle",3]]]],[11,"ne","","",5,[[["modulehandle",3]]]],[11,"eq","","",133,[[["compiledmodule",3]]]],[11,"ne","","",133,[[["compiledmodule",3]]]],[11,"eq","dvm_libra_deps::result","",137,[[["vmerror",3]]]],[11,"ne","","",137,[[["vmerror",3]]]],[11,"eq","dvm_libra_deps::file_format","",90,[[["structdefinstantiation",3]]]],[11,"ne","","",90,[[["structdefinstantiation",3]]]],[11,"eq","","",78,[[["functioninstantiationindex",3]]]],[11,"ne","","",78,[[["functioninstantiationindex",3]]]],[11,"eq","","",99,[[["kind",4]]]],[11,"eq","","",73,[[["modulehandleindex",3]]]],[11,"ne","","",73,[[["modulehandleindex",3]]]],[11,"eq","","",77,[[["structdefinstantiationindex",3]]]],[11,"ne","","",77,[[["structdefinstantiationindex",3]]]],[11,"eq","","",81,[[["addressidentifierindex",3]]]],[11,"ne","","",81,[[["addressidentifierindex",3]]]],[11,"eq","","",92,[[["fieldinstantiation",3]]]],[11,"ne","","",92,[[["fieldinstantiation",3]]]],[11,"eq","","",87,[[["functionhandle",3]]]],[11,"ne","","",87,[[["functionhandle",3]]]],[11,"eq","","",101,[[["codeunit",3]]]],[11,"ne","","",101,[[["codeunit",3]]]],[11,"eq","","",103,[[["compiledmodulemut",3]]]],[11,"ne","","",103,[[["compiledmodulemut",3]]]],[11,"eq","","",76,[[["fieldhandleindex",3]]]],[11,"ne","","",76,[[["fieldhandleindex",3]]]],[11,"eq","","",85,[[["functiondefinitionindex",3]]]],[11,"ne","","",85,[[["functiondefinitionindex",3]]]],[11,"eq","","",88,[[["fieldhandle",3]]]],[11,"ne","","",88,[[["fieldhandle",3]]]],[11,"eq","","",98,[[["signature",3]]]],[11,"ne","","",98,[[["signature",3]]]],[11,"eq","","",80,[[["identifierindex",3]]]],[11,"ne","","",80,[[["identifierindex",3]]]],[11,"eq","","",104,[[["tabletype",4]]]],[11,"eq","","",93,[[["structdefinition",3]]]],[11,"ne","","",93,[[["structdefinition",3]]]],[11,"eq","","",96,[[["typesignature",3]]]],[11,"ne","","",96,[[["typesignature",3]]]],[11,"eq","dvm_libra_deps::result","",20,[[["location",4]]]],[11,"ne","","",20,[[["location",4]]]],[11,"eq","dvm_libra_deps::file_format","",102,[[["compiledscriptmut",3]]]],[11,"ne","","",102,[[["compiledscriptmut",3]]]],[11,"eq","","",84,[[["structdefinitionindex",3]]]],[11,"ne","","",84,[[["structdefinitionindex",3]]]],[11,"eq","","",94,[[["fielddefinition",3]]]],[11,"ne","","",94,[[["fielddefinition",3]]]],[11,"into_index","","",84,[[]]],[11,"into_index","","",78,[[]]],[11,"into_index","","",76,[[]]],[11,"into_index","","",82,[[]]],[11,"into_index","","",79,[[]]],[11,"into_index","","",73,[[]]],[11,"into_index","","",80,[[]]],[11,"into_index","","",74,[[]]],[11,"into_index","","",85,[[]]],[11,"into_index","","",77,[[]]],[11,"into_index","","",75,[[]]],[11,"into_index","","",83,[[]]],[11,"into_index","","",81,[[]]],[11,"clone","","",90,[[],["structdefinstantiation",3]]],[11,"clone","","",94,[[],["fielddefinition",3]]],[11,"clone","","",100,[[],["constant",3]]],[11,"clone","","",109,[[],["opcodes",4]]],[11,"clone","","",99,[[],["kind",4]]],[11,"clone","","",80,[[],["identifierindex",3]]],[11,"clone","","",76,[[],["fieldhandleindex",3]]],[11,"clone","","",77,[[],["structdefinstantiationindex",3]]],[11,"clone","","",86,[[],["structhandle",3]]],[11,"clone","","",4,[[],["bytecode",4]]],[11,"clone","","",6,[[],["signaturetoken",4]]],[11,"clone","","",74,[[],["structhandleindex",3]]],[11,"clone","","",133,[[],["compiledmodule",3]]],[11,"clone","","",91,[[],["functioninstantiation",3]]],[11,"clone","","",83,[[],["signatureindex",3]]],[11,"clone","","",107,[[],["serializedkind",4]]],[11,"clone","","",93,[[],["structdefinition",3]]],[11,"clone","","",84,[[],["structdefinitionindex",3]]],[11,"clone","","",87,[[],["functionhandle",3]]],[11,"clone","","",104,[[],["tabletype",4]]],[11,"clone","","",102,[[],["compiledscriptmut",3]]],[11,"clone","","",5,[[],["modulehandle",3]]],[11,"clone","","",82,[[],["constantpoolindex",3]]],[11,"clone","","",103,[[],["compiledmodulemut",3]]],[11,"clone","","",73,[[],["modulehandleindex",3]]],[11,"clone","","",132,[[],["compiledscript",3]]],[11,"clone","","",85,[[],["functiondefinitionindex",3]]],[11,"clone","","",105,[[],["serializedtype",4]]],[11,"clone","","",92,[[],["fieldinstantiation",3]]],[11,"clone","","",97,[[],["functionsignature",3]]],[11,"clone","","",78,[[],["functioninstantiationindex",3]]],[11,"clone","","",89,[[],["structfieldinformation",4]]],[11,"clone","","",79,[[],["fieldinstantiationindex",3]]],[11,"clone","dvm_libra_deps::result","",137,[[],["vmerror",3]]],[11,"clone","dvm_libra_deps::file_format","",81,[[],["addressidentifierindex",3]]],[11,"clone","dvm_libra_deps::result","",20,[[],["location",4]]],[11,"clone","","",136,[[],["partialvmerror",3]]],[11,"clone","dvm_libra_deps::file_format","",106,[[],["serializednominalresourceflag",4]]],[11,"clone","","",88,[[],["fieldhandle",3]]],[11,"clone","","",96,[[],["typesignature",3]]],[11,"clone","","",98,[[],["signature",3]]],[11,"clone","","",108,[[],["serializednativestructflag",4]]],[11,"clone","","",95,[[],["functiondefinition",3]]],[11,"clone","","",101,[[],["codeunit",3]]],[11,"clone","","",75,[[],["functionhandleindex",3]]],[11,"as_script","","",132,[[],["compiledscript",3]]],[11,"fmt","","",103,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",81,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::result","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::file_format","",91,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",88,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",108,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",78,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",107,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",104,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",106,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",92,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",79,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",98,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",89,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",105,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::result","",137,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::file_format","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",94,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",85,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",84,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",96,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",74,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",95,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",73,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",80,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",101,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",77,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",75,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",99,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",133,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",93,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",132,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",87,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",102,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",151,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",76,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",97,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::result","",136,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::file_format","",100,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","","",76,[[],["fieldhandleindex",3]]],[11,"default","","",77,[[],["structdefinstantiationindex",3]]],[11,"default","","",84,[[],["structdefinitionindex",3]]],[11,"default","","",151,[[],["binarydata",3]]],[11,"default","","",103,[[],["compiledmodulemut",3]]],[11,"default","","",98,[[],["signature",3]]],[11,"default","","",73,[[],["modulehandleindex",3]]],[11,"default","","",101,[[],["codeunit",3]]],[11,"default","","",82,[[],["constantpoolindex",3]]],[11,"default","","",81,[[],["addressidentifierindex",3]]],[11,"default","","",78,[[],["functioninstantiationindex",3]]],[11,"default","","",83,[[],["signatureindex",3]]],[11,"default","","",95,[[],["functiondefinition",3]]],[11,"default","","",74,[[],["structhandleindex",3]]],[11,"default","","",102,[[],["compiledscriptmut",3]]],[11,"default","","",75,[[],["functionhandleindex",3]]],[11,"default","","",79,[[],["fieldinstantiationindex",3]]],[11,"default","","",80,[[],["identifierindex",3]]],[11,"default","","",85,[[],["functiondefinitionindex",3]]],[11,"hash","","",77,[[]]],[11,"hash","","",99,[[]]],[11,"hash","","",79,[[]]],[11,"hash","","",80,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",96,[[]]],[11,"hash","","",81,[[]]],[11,"hash","","",97,[[]]],[11,"hash","","",78,[[]]],[11,"hash","","",84,[[]]],[11,"hash","","",91,[[]]],[11,"hash","","",86,[[]]],[11,"hash","","",92,[[]]],[11,"hash","","",76,[[]]],[11,"hash","","",74,[[]]],[11,"hash","","",73,[[]]],[11,"hash","","",88,[[]]],[11,"hash","","",85,[[]]],[11,"hash","","",98,[[]]],[11,"hash","","",83,[[]]],[11,"hash","","",104,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",87,[[]]],[11,"hash","","",82,[[]]],[11,"hash","","",75,[[]]],[11,"hash","","",90,[[]]],[11,"hash","","",100,[[]]],[11,"into","dvm_libra_deps::result","",137,[[],["vmstatus",4]]],[11,"fmt","dvm_libra_deps::file_format","",74,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::result","",136,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::file_format","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",84,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",78,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",85,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",75,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",81,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::result","",137,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::file_format","",76,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",79,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",77,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",73,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::result","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::file_format","",80,[[["formatter",3]],[["error",3],["result",4]]]],[11,"next","","",147,[[],["option",4]]],[11,"next","","",148,[[],["option",4]]],[11,"from","","",151,[[["vec",3]],["binarydata",3]]],[11,"partial_cmp","","",73,[[["modulehandleindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",73,[[["modulehandleindex",3]]]],[11,"le","","",73,[[["modulehandleindex",3]]]],[11,"gt","","",73,[[["modulehandleindex",3]]]],[11,"ge","","",73,[[["modulehandleindex",3]]]],[11,"partial_cmp","","",84,[[["structdefinitionindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",84,[[["structdefinitionindex",3]]]],[11,"le","","",84,[[["structdefinitionindex",3]]]],[11,"gt","","",84,[[["structdefinitionindex",3]]]],[11,"ge","","",84,[[["structdefinitionindex",3]]]],[11,"partial_cmp","","",83,[[["signatureindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",83,[[["signatureindex",3]]]],[11,"le","","",83,[[["signatureindex",3]]]],[11,"gt","","",83,[[["signatureindex",3]]]],[11,"ge","","",83,[[["signatureindex",3]]]],[11,"partial_cmp","","",77,[[["structdefinstantiationindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",77,[[["structdefinstantiationindex",3]]]],[11,"le","","",77,[[["structdefinstantiationindex",3]]]],[11,"gt","","",77,[[["structdefinstantiationindex",3]]]],[11,"ge","","",77,[[["structdefinstantiationindex",3]]]],[11,"partial_cmp","","",75,[[["functionhandleindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",75,[[["functionhandleindex",3]]]],[11,"le","","",75,[[["functionhandleindex",3]]]],[11,"gt","","",75,[[["functionhandleindex",3]]]],[11,"ge","","",75,[[["functionhandleindex",3]]]],[11,"partial_cmp","","",6,[[["signaturetoken",4]],[["ordering",4],["option",4]]]],[11,"lt","","",6,[[["signaturetoken",4]]]],[11,"le","","",6,[[["signaturetoken",4]]]],[11,"gt","","",6,[[["signaturetoken",4]]]],[11,"ge","","",6,[[["signaturetoken",4]]]],[11,"partial_cmp","","",82,[[["constantpoolindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",82,[[["constantpoolindex",3]]]],[11,"le","","",82,[[["constantpoolindex",3]]]],[11,"gt","","",82,[[["constantpoolindex",3]]]],[11,"ge","","",82,[[["constantpoolindex",3]]]],[11,"partial_cmp","","",79,[[["fieldinstantiationindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",79,[[["fieldinstantiationindex",3]]]],[11,"le","","",79,[[["fieldinstantiationindex",3]]]],[11,"gt","","",79,[[["fieldinstantiationindex",3]]]],[11,"ge","","",79,[[["fieldinstantiationindex",3]]]],[11,"partial_cmp","","",80,[[["identifierindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",80,[[["identifierindex",3]]]],[11,"le","","",80,[[["identifierindex",3]]]],[11,"gt","","",80,[[["identifierindex",3]]]],[11,"ge","","",80,[[["identifierindex",3]]]],[11,"partial_cmp","","",85,[[["functiondefinitionindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",85,[[["functiondefinitionindex",3]]]],[11,"le","","",85,[[["functiondefinitionindex",3]]]],[11,"gt","","",85,[[["functiondefinitionindex",3]]]],[11,"ge","","",85,[[["functiondefinitionindex",3]]]],[11,"partial_cmp","","",78,[[["functioninstantiationindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",78,[[["functioninstantiationindex",3]]]],[11,"le","","",78,[[["functioninstantiationindex",3]]]],[11,"gt","","",78,[[["functioninstantiationindex",3]]]],[11,"ge","","",78,[[["functioninstantiationindex",3]]]],[11,"partial_cmp","","",81,[[["addressidentifierindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",81,[[["addressidentifierindex",3]]]],[11,"le","","",81,[[["addressidentifierindex",3]]]],[11,"gt","","",81,[[["addressidentifierindex",3]]]],[11,"ge","","",81,[[["addressidentifierindex",3]]]],[11,"partial_cmp","","",86,[[["structhandle",3]],[["ordering",4],["option",4]]]],[11,"lt","","",86,[[["structhandle",3]]]],[11,"le","","",86,[[["structhandle",3]]]],[11,"gt","","",86,[[["structhandle",3]]]],[11,"ge","","",86,[[["structhandle",3]]]],[11,"partial_cmp","","",76,[[["fieldhandleindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",76,[[["fieldhandleindex",3]]]],[11,"le","","",76,[[["fieldhandleindex",3]]]],[11,"gt","","",76,[[["fieldhandleindex",3]]]],[11,"ge","","",76,[[["fieldhandleindex",3]]]],[11,"partial_cmp","","",74,[[["structhandleindex",3]],[["ordering",4],["option",4]]]],[11,"lt","","",74,[[["structhandleindex",3]]]],[11,"le","","",74,[[["structhandleindex",3]]]],[11,"gt","","",74,[[["structhandleindex",3]]]],[11,"ge","","",74,[[["structhandleindex",3]]]],[11,"partial_cmp","","",5,[[["modulehandle",3]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["modulehandle",3]]]],[11,"le","","",5,[[["modulehandle",3]]]],[11,"gt","","",5,[[["modulehandle",3]]]],[11,"ge","","",5,[[["modulehandle",3]]]],[11,"partial_cmp","dvm_libra_deps::result","",20,[[["location",4]],[["ordering",4],["option",4]]]],[11,"lt","","",20,[[["location",4]]]],[11,"le","","",20,[[["location",4]]]],[11,"gt","","",20,[[["location",4]]]],[11,"ge","","",20,[[["location",4]]]],[11,"partial_cmp","","",137,[[["vmerror",3]],[["ordering",4],["option",4]]]],[11,"lt","","",137,[[["vmerror",3]]]],[11,"le","","",137,[[["vmerror",3]]]],[11,"gt","","",137,[[["vmerror",3]]]],[11,"ge","","",137,[[["vmerror",3]]]],[11,"partial_cmp","dvm_libra_deps::file_format","",99,[[["kind",4]],[["ordering",4],["option",4]]]],[11,"cmp","","",5,[[["modulehandle",3]],["ordering",4]]],[11,"cmp","","",99,[[["kind",4]],["ordering",4]]],[11,"cmp","","",86,[[["structhandle",3]],["ordering",4]]],[11,"cmp","","",82,[[["constantpoolindex",3]],["ordering",4]]],[11,"cmp","","",77,[[["structdefinstantiationindex",3]],["ordering",4]]],[11,"cmp","","",80,[[["identifierindex",3]],["ordering",4]]],[11,"cmp","dvm_libra_deps::result","",137,[[["vmerror",3]],["ordering",4]]],[11,"cmp","dvm_libra_deps::file_format","",83,[[["signatureindex",3]],["ordering",4]]],[11,"cmp","","",74,[[["structhandleindex",3]],["ordering",4]]],[11,"cmp","","",78,[[["functioninstantiationindex",3]],["ordering",4]]],[11,"cmp","","",76,[[["fieldhandleindex",3]],["ordering",4]]],[11,"cmp","","",79,[[["fieldinstantiationindex",3]],["ordering",4]]],[11,"cmp","","",6,[[["signaturetoken",4]],["ordering",4]]],[11,"cmp","dvm_libra_deps::result","",20,[[["location",4]],["ordering",4]]],[11,"cmp","dvm_libra_deps::file_format","",84,[[["structdefinitionindex",3]],["ordering",4]]],[11,"cmp","","",73,[[["modulehandleindex",3]],["ordering",4]]],[11,"cmp","","",75,[[["functionhandleindex",3]],["ordering",4]]],[11,"cmp","","",85,[[["functiondefinitionindex",3]],["ordering",4]]],[11,"cmp","","",81,[[["addressidentifierindex",3]],["ordering",4]]],[11,"into_enum_iter","dvm_libra_deps::result","",14,[[]]],[11,"fmt","dvm_libra_deps::account","",134,[[["formatter",3]],[["error",3],["result",4]]]],[11,"deref","","",135,[[],["identstr",3]]],[11,"deserialize","dvm_libra_deps::gas","",117,[[],[["result",4],["gasconstants",3]]]],[11,"deserialize","dvm_libra_deps::ds","",144,[[],[["resourcekey",3],["result",4]]]],[11,"deserialize","dvm_libra_deps::gas","",155,[[],[["result",4],["gasprice",3]]]],[11,"deserialize","dvm_libra_deps::result","",14,[[],[["statuscode",4],["result",4]]]],[11,"deserialize","","",17,[[],[["keptvmstatus",4],["result",4]]]],[11,"deserialize","dvm_libra_deps::gas","",154,[[],[["result",4],["gasunits",3]]]],[11,"deserialize","dvm_libra_deps::account","",134,[[],[["result",4],["accountaddress",3]]]],[11,"deserialize","dvm_libra_deps::gas","",118,[[],[["costtable",3],["result",4]]]],[11,"deserialize","dvm_libra_deps::account","",135,[[],[["result",4],["identifier",3]]]],[11,"deserialize","dvm_libra_deps::gas","",153,[[],[["result",4],["abstractmemorysize",3]]]],[11,"deserialize","dvm_libra_deps::result","",15,[[],[["result",4],["vmstatus",4]]]],[11,"deserialize","dvm_libra_deps::gas","",119,[[],[["result",4],["gascost",3]]]],[11,"deserialize","dvm_libra_deps::ds","",26,[[],[["result",4],["structtag",3]]]],[11,"deserialize","dvm_libra_deps::result","",19,[[],[["abortlocation",4],["result",4]]]],[11,"deserialize","dvm_libra_deps::module","",131,[[],[["result",4],["moduleid",3]]]],[11,"deserialize","dvm_libra_deps::ds","",27,[[],[["typetag",4],["result",4]]]],[11,"borrow","dvm_libra_deps::account","",135,[[],["identstr",3]]],[11,"from","","",135,[[["identstr",3]],["identifier",3]]],[11,"cmp","","",135,[[["identifier",3]],["ordering",4]]],[11,"cmp","dvm_libra_deps::result","",19,[[["abortlocation",4]],["ordering",4]]],[11,"cmp","","",15,[[["vmstatus",4]],["ordering",4]]],[11,"cmp","dvm_libra_deps::account","",134,[[["accountaddress",3]],["ordering",4]]],[11,"cmp","dvm_libra_deps::ds","",26,[[["structtag",3]],["ordering",4]]],[11,"cmp","","",144,[[["resourcekey",3]],["ordering",4]]],[11,"cmp","dvm_libra_deps::result","",17,[[["keptvmstatus",4]],["ordering",4]]],[11,"cmp","dvm_libra_deps::ds","",27,[[["typetag",4]],["ordering",4]]],[11,"cmp","dvm_libra_deps::result","",14,[[["statuscode",4]],["ordering",4]]],[11,"cmp","dvm_libra_deps::module","",131,[[["moduleid",3]],["ordering",4]]],[11,"eq","dvm_libra_deps::result","",19,[[["abortlocation",4]]]],[11,"ne","","",19,[[["abortlocation",4]]]],[11,"eq","dvm_libra_deps::module","",131,[[["moduleid",3]]]],[11,"ne","","",131,[[["moduleid",3]]]],[11,"eq","dvm_libra_deps::ds","",27,[[["typetag",4]]]],[11,"ne","","",27,[[["typetag",4]]]],[11,"eq","dvm_libra_deps::gas","",153,[[["abstractmemorysize",3]]]],[11,"ne","","",153,[[["abstractmemorysize",3]]]],[11,"eq","","",117,[[["gasconstants",3]]]],[11,"ne","","",117,[[["gasconstants",3]]]],[11,"eq","dvm_libra_deps::ds","",144,[[["resourcekey",3]]]],[11,"ne","","",144,[[["resourcekey",3]]]],[11,"eq","dvm_libra_deps::gas","",155,[[["gasprice",3]]]],[11,"ne","","",155,[[["gasprice",3]]]],[11,"eq","","",118,[[["costtable",3]]]],[11,"ne","","",118,[[["costtable",3]]]],[11,"eq","dvm_libra_deps::module","",13,[[["movevalue",4]]]],[11,"ne","","",13,[[["movevalue",4]]]],[11,"eq","dvm_libra_deps::account","",134,[[["accountaddress",3]]]],[11,"ne","","",134,[[["accountaddress",3]]]],[11,"eq","dvm_libra_deps::result","",17,[[["keptvmstatus",4]]]],[11,"ne","","",17,[[["keptvmstatus",4]]]],[11,"eq","","",14,[[["statuscode",4]]]],[11,"eq","dvm_libra_deps::ds","",26,[[["structtag",3]]]],[11,"ne","","",26,[[["structtag",3]]]],[11,"eq","dvm_libra_deps::gas","",119,[[["gascost",3]]]],[11,"ne","","",119,[[["gascost",3]]]],[11,"eq","dvm_libra_deps::account","",135,[[["identifier",3]]]],[11,"ne","","",135,[[["identifier",3]]]],[11,"eq","dvm_libra_deps::result","",15,[[["vmstatus",4]]]],[11,"ne","","",15,[[["vmstatus",4]]]],[11,"eq","dvm_libra_deps::gas","",154,[[["gasunits",3]]]],[11,"ne","","",154,[[["gasunits",3]]]],[11,"hash","dvm_libra_deps::module","",131,[[],["hashvalue",3]]],[11,"hash","dvm_libra_deps::account","",134,[[],["hashvalue",3]]],[11,"hash","dvm_libra_deps::ds","",26,[[],["hashvalue",3]]],[11,"serialize","dvm_libra_deps::gas","",119,[[],["result",4]]],[11,"serialize","","",154,[[],["result",4]]],[11,"serialize","dvm_libra_deps::account","",134,[[],["result",4]]],[11,"serialize","dvm_libra_deps::gas","",118,[[],["result",4]]],[11,"serialize","dvm_libra_deps::account","",135,[[],["result",4]]],[11,"serialize","dvm_libra_deps::module","",13,[[],["result",4]]],[11,"serialize","dvm_libra_deps::gas","",155,[[],["result",4]]],[11,"serialize","dvm_libra_deps::result","",14,[[],["result",4]]],[11,"serialize","dvm_libra_deps::ds","",144,[[],["result",4]]],[11,"serialize","","",26,[[],["result",4]]],[11,"serialize","dvm_libra_deps::gas","",117,[[],["result",4]]],[11,"serialize","","",153,[[],["result",4]]],[11,"serialize","dvm_libra_deps::result","",15,[[],["result",4]]],[11,"serialize","dvm_libra_deps::module","",131,[[],["result",4]]],[11,"serialize","dvm_libra_deps::result","",17,[[],["result",4]]],[11,"serialize","","",19,[[],["result",4]]],[11,"serialize","dvm_libra_deps::ds","",27,[[],["result",4]]],[11,"clone","dvm_libra_deps::gas","",153,[[],["abstractmemorysize",3]]],[11,"clone","","",119,[[],["gascost",3]]],[11,"clone","dvm_libra_deps::account","",134,[[],["accountaddress",3]]],[11,"clone","dvm_libra_deps::gas","",117,[[],["gasconstants",3]]],[11,"clone","dvm_libra_deps::ds","",27,[[],["typetag",4]]],[11,"clone","","",144,[[],["resourcekey",3]]],[11,"clone","dvm_libra_deps::gas","",154,[[],["gasunits",3]]],[11,"clone","dvm_libra_deps::module","",13,[[],["movevalue",4]]],[11,"clone","dvm_libra_deps::gas","",118,[[],["costtable",3]]],[11,"clone","dvm_libra_deps::ds","",26,[[],["structtag",3]]],[11,"clone","dvm_libra_deps::gas","",155,[[],["gasprice",3]]],[11,"clone","dvm_libra_deps::result","",19,[[],["abortlocation",4]]],[11,"clone","","",15,[[],["vmstatus",4]]],[11,"clone","dvm_libra_deps::account","",135,[[],["identifier",3]]],[11,"clone","dvm_libra_deps::result","",17,[[],["keptvmstatus",4]]],[11,"clone","","",14,[[],["statuscode",4]]],[11,"clone","dvm_libra_deps::module","",131,[[],["moduleid",3]]],[11,"fmt","dvm_libra_deps::account","",135,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::result","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::gas","",118,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::module","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::gas","",155,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",119,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",117,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::ds","",144,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::module","",131,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::gas","",154,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::ds","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::result","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::account","",134,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::ds","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::gas","",153,[[["formatter",3]],[["error",3],["result",4]]]],[11,"try_from","dvm_libra_deps::account","Tries to convert the provided byte buffer into Address.",134,[[["vec",3]],[["error",3],["result",4],["accountaddress",3]]]],[11,"try_from","","Tries to convert the provided byte array into Address.",134,[[],[["error",3],["result",4],["accountaddress",3]]]],[11,"try_from","","Tries to convert the provided byte array into Address.",134,[[],[["error",3],["result",4],["accountaddress",3]]]],[11,"try_from","dvm_libra_deps::result","",14,[[],[["statuscode",4],["result",4]]]],[11,"try_from","dvm_libra_deps::account","",134,[[["string",3]],[["error",3],["result",4],["accountaddress",3]]]],[11,"default","dvm_libra_deps::gas","",117,[[],["gasconstants",3]]],[11,"hash","dvm_libra_deps::ds","",27,[[]]],[11,"hash","dvm_libra_deps::gas","",155,[[]]],[11,"hash","dvm_libra_deps::result","",17,[[]]],[11,"hash","dvm_libra_deps::ds","",144,[[]]],[11,"hash","dvm_libra_deps::module","",131,[[]]],[11,"hash","dvm_libra_deps::gas","",154,[[]]],[11,"hash","dvm_libra_deps::result","",14,[[]]],[11,"hash","dvm_libra_deps::gas","",153,[[]]],[11,"hash","dvm_libra_deps::result","",19,[[]]],[11,"hash","","",15,[[]]],[11,"hash","dvm_libra_deps::account","",134,[[]]],[11,"hash","","",135,[[]]],[11,"hash","dvm_libra_deps::ds","",26,[[]]],[11,"new","dvm_libra_deps::gas","",154,[[],["gasunits",3]]],[11,"get","","",154,[[]]],[11,"new","","",155,[[],["gasprice",3]]],[11,"get","","",155,[[]]],[11,"new","","",153,[[],["abstractmemorysize",3]]],[11,"get","","",153,[[]]],[11,"fmt","dvm_libra_deps::module","",131,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::ds","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::account","",134,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",135,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::result","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::ds","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"partial_cmp","dvm_libra_deps::account","",135,[[["identifier",3]],[["ordering",4],["option",4]]]],[11,"lt","","",135,[[["identifier",3]]]],[11,"le","","",135,[[["identifier",3]]]],[11,"gt","","",135,[[["identifier",3]]]],[11,"ge","","",135,[[["identifier",3]]]],[11,"partial_cmp","dvm_libra_deps::ds","",27,[[["typetag",4]],[["ordering",4],["option",4]]]],[11,"lt","","",27,[[["typetag",4]]]],[11,"le","","",27,[[["typetag",4]]]],[11,"gt","","",27,[[["typetag",4]]]],[11,"ge","","",27,[[["typetag",4]]]],[11,"partial_cmp","dvm_libra_deps::result","",14,[[["statuscode",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","dvm_libra_deps::account","",134,[[["accountaddress",3]],[["ordering",4],["option",4]]]],[11,"lt","","",134,[[["accountaddress",3]]]],[11,"le","","",134,[[["accountaddress",3]]]],[11,"gt","","",134,[[["accountaddress",3]]]],[11,"ge","","",134,[[["accountaddress",3]]]],[11,"partial_cmp","dvm_libra_deps::result","",17,[[["keptvmstatus",4]],[["ordering",4],["option",4]]]],[11,"lt","","",17,[[["keptvmstatus",4]]]],[11,"le","","",17,[[["keptvmstatus",4]]]],[11,"gt","","",17,[[["keptvmstatus",4]]]],[11,"ge","","",17,[[["keptvmstatus",4]]]],[11,"partial_cmp","","",19,[[["abortlocation",4]],[["ordering",4],["option",4]]]],[11,"lt","","",19,[[["abortlocation",4]]]],[11,"le","","",19,[[["abortlocation",4]]]],[11,"gt","","",19,[[["abortlocation",4]]]],[11,"ge","","",19,[[["abortlocation",4]]]],[11,"partial_cmp","dvm_libra_deps::ds","",26,[[["structtag",3]],[["ordering",4],["option",4]]]],[11,"lt","","",26,[[["structtag",3]]]],[11,"le","","",26,[[["structtag",3]]]],[11,"gt","","",26,[[["structtag",3]]]],[11,"ge","","",26,[[["structtag",3]]]],[11,"partial_cmp","dvm_libra_deps::result","",15,[[["vmstatus",4]],[["ordering",4],["option",4]]]],[11,"lt","","",15,[[["vmstatus",4]]]],[11,"le","","",15,[[["vmstatus",4]]]],[11,"gt","","",15,[[["vmstatus",4]]]],[11,"ge","","",15,[[["vmstatus",4]]]],[11,"partial_cmp","dvm_libra_deps::module","",131,[[["moduleid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",131,[[["moduleid",3]]]],[11,"le","","",131,[[["moduleid",3]]]],[11,"gt","","",131,[[["moduleid",3]]]],[11,"ge","","",131,[[["moduleid",3]]]],[11,"partial_cmp","dvm_libra_deps::ds","",144,[[["resourcekey",3]],[["ordering",4],["option",4]]]],[11,"lt","","",144,[[["resourcekey",3]]]],[11,"le","","",144,[[["resourcekey",3]]]],[11,"gt","","",144,[[["resourcekey",3]]]],[11,"ge","","",144,[[["resourcekey",3]]]],[11,"as_ref","dvm_libra_deps::account","",135,[[],["identstr",3]]],[11,"as_ref","","",134,[[]]],[11,"from_str","","",134,[[],[["error",3],["result",4],["accountaddress",3]]]],[11,"hash","dvm_libra_deps::vm","",110,[[],["hashvalue",3]]],[11,"deref","","",110,[[]]],[11,"deserialize","dvm_libra_deps::module","",1,[[],[["result",4],["module",3]]]],[11,"deserialize","dvm_libra_deps::ds","",139,[[],[["result",4],["writesetmut",3]]]],[11,"deserialize","","",138,[[],[["writeset",3],["result",4]]]],[11,"deserialize","dvm_libra_deps::vm","",110,[[],[["result",4],["contractevent",4]]]],[11,"deserialize","dvm_libra_deps::ds","",21,[[],[["accesspath",3],["result",4]]]],[11,"deserialize","","",23,[[],[["result",4],["writeop",4]]]],[11,"deserialize","dvm_libra_deps::vm","",111,[[],[["result",4],["transactionstatus",4]]]],[11,"into_iter","dvm_libra_deps::ds","",138,[[]]],[11,"from","dvm_libra_deps::vm","",111,[[["vmstatus",4]],["transactionstatus",4]]],[11,"from","dvm_libra_deps::ds","",21,[[["moduleid",3]],["accesspath",3]]],[11,"cmp","","",21,[[["accesspath",3]],["ordering",4]]],[11,"eq","","",139,[[["writesetmut",3]]]],[11,"ne","","",139,[[["writesetmut",3]]]],[11,"eq","","",138,[[["writeset",3]]]],[11,"ne","","",138,[[["writeset",3]]]],[11,"eq","","",21,[[["accesspath",3]]]],[11,"ne","","",21,[[["accesspath",3]]]],[11,"eq","","",23,[[["writeop",4]]]],[11,"ne","","",23,[[["writeop",4]]]],[11,"eq","dvm_libra_deps::vm","",110,[[["contractevent",4]]]],[11,"ne","","",110,[[["contractevent",4]]]],[11,"eq","","",111,[[["transactionstatus",4]]]],[11,"ne","","",111,[[["transactionstatus",4]]]],[11,"eq","dvm_libra_deps::module","",1,[[["module",3]]]],[11,"ne","","",1,[[["module",3]]]],[11,"serialize","dvm_libra_deps::ds","",138,[[],["result",4]]],[11,"serialize","","",23,[[],["result",4]]],[11,"serialize","dvm_libra_deps::module","",1,[[],["result",4]]],[11,"serialize","dvm_libra_deps::vm","",111,[[],["result",4]]],[11,"serialize","dvm_libra_deps::ds","",139,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","dvm_libra_deps::vm","",110,[[],["result",4]]],[11,"clone","dvm_libra_deps::ds","",23,[[],["writeop",4]]],[11,"clone","dvm_libra_deps::vm","",110,[[],["contractevent",4]]],[11,"clone","dvm_libra_deps::module","",1,[[],["module",3]]],[11,"clone","dvm_libra_deps::ds","",138,[[],["writeset",3]]],[11,"clone","dvm_libra_deps::vm","",111,[[],["transactionstatus",4]]],[11,"clone","dvm_libra_deps::ds","",139,[[],["writesetmut",3]]],[11,"clone","","",21,[[],["accesspath",3]]],[11,"from_iter","","",139,[[],["writesetmut",3]]],[11,"fmt","dvm_libra_deps::vm","",111,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::ds","",139,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",138,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::module","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::ds","",23,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::vm","",110,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","dvm_libra_deps::ds","",139,[[],["writesetmut",3]]],[11,"default","","",138,[[],["writeset",3]]],[11,"hash","","",23,[[]]],[11,"hash","","",138,[[]]],[11,"hash","","",21,[[]]],[11,"hash","dvm_libra_deps::module","",1,[[]]],[11,"hash","dvm_libra_deps::vm","",110,[[]]],[11,"hash","dvm_libra_deps::ds","",139,[[]]],[11,"fmt","","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::vm","",110,[[["formatter",3]],[["error",3],["result",4]]]],[11,"partial_cmp","dvm_libra_deps::ds","",21,[[["accesspath",3]],[["ordering",4],["option",4]]]],[11,"lt","","",21,[[["accesspath",3]]]],[11,"le","","",21,[[["accesspath",3]]]],[11,"gt","","",21,[[["accesspath",3]]]],[11,"ge","","",21,[[["accesspath",3]]]],[11,"block_start","dvm_libra_deps::bf","",130,[[]]],[11,"block_end","","",130,[[]]],[11,"successors","","",130,[[],["vec",3]]],[11,"blocks","","",130,[[],["vec",3]]],[11,"instr_indexes","","",130,[[],[["iterator",8],["box",3]]]],[11,"num_blocks","","",130,[[]]],[11,"entry_block_id","","",130,[[]]],[11,"eq","dvm_libra_deps::compiler","",34,[[["moduleident_",3]]]],[11,"ne","","",34,[[["moduleident_",3]]]],[11,"eq","","",41,[[["functionname",3]]]],[11,"ne","","",41,[[["functionname",3]]]],[11,"eq","","",46,[[["constantname",3]]]],[11,"ne","","",46,[[["constantname",3]]]],[11,"eq","","",47,[[["constant",3]]]],[11,"ne","","",47,[[["constant",3]]]],[11,"eq","","",37,[[["field",3]]]],[11,"ne","","",37,[[["field",3]]]],[11,"eq","","",63,[[["moduleaccess_",4]]]],[11,"ne","","",63,[[["moduleaccess_",4]]]],[11,"eq","","",45,[[["function",3]]]],[11,"ne","","",45,[[["function",3]]]],[11,"eq","","",145,[[["address",3]]]],[11,"ne","","",145,[[["address",3]]]],[11,"eq","","",65,[[["type_",4]]]],[11,"ne","","",65,[[["type_",4]]]],[11,"eq","","",51,[[["specapplypattern_",3]]]],[11,"ne","","",51,[[["specapplypattern_",3]]]],[11,"eq","","",38,[[["structname",3]]]],[11,"ne","","",38,[[["structname",3]]]],[11,"eq","","",72,[[["sequenceitem_",4]]]],[11,"ne","","",72,[[["sequenceitem_",4]]]],[11,"eq","","",68,[[["value_",4]]]],[11,"ne","","",68,[[["value_",4]]]],[11,"eq","","",61,[[["specconditionkind",4]]]],[11,"eq","","",70,[[["binop_",4]]]],[11,"eq","","",67,[[["bind_",4]]]],[11,"ne","","",67,[[["bind_",4]]]],[11,"eq","","",66,[[["var",3]]]],[11,"ne","","",66,[[["var",3]]]],[11,"eq","","",48,[[["specblock_",3]]]],[11,"ne","","",48,[[["specblock_",3]]]],[11,"eq","","",50,[[["pragmaproperty_",3]]]],[11,"ne","","",50,[[["pragmaproperty_",3]]]],[11,"eq","","",49,[[["specblocktarget_",4]]]],[11,"ne","","",49,[[["specblocktarget_",4]]]],[11,"eq","","",64,[[["kind_",4]]]],[11,"eq","","",52,[[["specapplyfragment_",4]]]],[11,"ne","","",52,[[["specapplyfragment_",4]]]],[11,"eq","","",39,[[["structdefinition",3]]]],[11,"ne","","",39,[[["structdefinition",3]]]],[11,"eq","","",53,[[["specblockmember_",4]]]],[11,"ne","","",53,[[["specblockmember_",4]]]],[11,"eq","","",32,[[["use",4]]]],[11,"ne","","",32,[[["use",4]]]],[11,"eq","","",35,[[["moduleident",3]]]],[11,"ne","","",35,[[["moduleident",3]]]],[11,"eq","","",42,[[["functionsignature",3]]]],[11,"ne","","",42,[[["functionsignature",3]]]],[11,"eq","","",40,[[["structfields",4]]]],[11,"ne","","",40,[[["structfields",4]]]],[11,"eq","","",69,[[["unaryop_",4]]]],[11,"eq","","",71,[[["exp_",4]]]],[11,"ne","","",71,[[["exp_",4]]]],[11,"eq","","",62,[[["invariantkind",4]]]],[11,"eq","","",33,[[["modulename",3]]]],[11,"ne","","",33,[[["modulename",3]]]],[11,"eq","","",44,[[["functionbody_",4]]]],[11,"ne","","",44,[[["functionbody_",4]]]],[11,"eq","","",43,[[["functionvisibility",4]]]],[11,"ne","","",43,[[["functionvisibility",4]]]],[11,"value","","",46,[[]]],[11,"loc","","",46,[[],["loc",3]]],[11,"value","","",66,[[]]],[11,"loc","","",66,[[],["loc",3]]],[11,"value","","",41,[[]]],[11,"loc","","",41,[[],["loc",3]]],[11,"value","","",33,[[]]],[11,"loc","","",33,[[],["loc",3]]],[11,"value","","",38,[[]]],[11,"loc","","",38,[[],["loc",3]]],[11,"value","","",37,[[]]],[11,"loc","","",37,[[],["loc",3]]],[11,"clone","","",33,[[],["modulename",3]]],[11,"clone","","",70,[[],["binop_",4]]],[11,"clone","","",41,[[],["functionname",3]]],[11,"clone","","",35,[[],["moduleident",3]]],[11,"clone","","",34,[[],["moduleident_",3]]],[11,"clone","","",37,[[],["field",3]]],[11,"clone","","",46,[[],["constantname",3]]],[11,"clone","","",43,[[],["functionvisibility",4]]],[11,"clone","","",66,[[],["var",3]]],[11,"clone","","",38,[[],["structname",3]]],[11,"clone","","",69,[[],["unaryop_",4]]],[11,"clone","","",145,[[],["address",3]]],[11,"clone","","",64,[[],["kind_",4]]],[11,"drop_loc","","",33,[[]]],[11,"clone_drop_loc","","",33,[[]]],[11,"add_loc","","",33,[[["string",3],["loc",3]],["modulename",3]]],[11,"drop_loc","","",46,[[]]],[11,"clone_drop_loc","","",46,[[]]],[11,"add_loc","","",46,[[["string",3],["loc",3]],["constantname",3]]],[11,"drop_loc","","",35,[[]]],[11,"clone_drop_loc","","",35,[[]]],[11,"add_loc","","",35,[[],["moduleident",3]]],[11,"drop_loc","","",41,[[]]],[11,"clone_drop_loc","","",41,[[]]],[11,"add_loc","","",41,[[["string",3],["loc",3]],["functionname",3]]],[11,"drop_loc","","",38,[[]]],[11,"clone_drop_loc","","",38,[[]]],[11,"add_loc","","",38,[[["string",3],["loc",3]],["structname",3]]],[11,"drop_loc","","",37,[[]]],[11,"clone_drop_loc","","",37,[[]]],[11,"add_loc","","",37,[[["string",3],["loc",3]],["field",3]]],[11,"drop_loc","","",66,[[]]],[11,"clone_drop_loc","","",66,[[]]],[11,"add_loc","","",66,[[["string",3],["loc",3]],["var",3]]],[11,"fmt","","",145,[[["formatter",3]],[["error",3],["result",4]]]],[11,"drop","","",146,[[]]],[11,"try_from","","",145,[[],[["string",3],["result",4],["address",3]]]],[11,"ast_debug","","",11,[[["astwriter",3]]]],[11,"ast_debug","","",39,[[["astwriter",3]]]],[11,"ast_debug","","",50,[[["astwriter",3]]]],[11,"ast_debug","","",10,[[["astwriter",3]]]],[11,"ast_debug","","",42,[[["astwriter",3]]]],[11,"ast_debug","","",52,[[["astwriter",3]]]],[11,"ast_debug","","",63,[[["astwriter",3]]]],[11,"ast_debug","","",71,[[["astwriter",3]]]],[11,"ast_debug","","",72,[[["astwriter",3]]]],[11,"ast_debug","","",53,[[["astwriter",3]]]],[11,"ast_debug","dvm_libra_deps::module","",13,[[["astwriter",3]]]],[11,"ast_debug","dvm_libra_deps::compiler","",68,[[["astwriter",3]]]],[11,"ast_debug","","",65,[[["astwriter",3]]]],[11,"ast_debug","","",64,[[["astwriter",3]]]],[11,"ast_debug","","",69,[[["astwriter",3]]]],[11,"ast_debug","","",48,[[["astwriter",3]]]],[11,"ast_debug","","",31,[[["astwriter",3]]]],[11,"ast_debug","","",43,[[["astwriter",3]]]],[11,"ast_debug","","",51,[[["astwriter",3]]]],[11,"ast_debug","","",32,[[["astwriter",3]]]],[11,"ast_debug","","",36,[[["astwriter",3]]]],[11,"ast_debug","","",61,[[["astwriter",3]]]],[11,"ast_debug","","",47,[[["astwriter",3]]]],[11,"ast_debug","","",12,[[["astwriter",3]]]],[11,"ast_debug","","",67,[[["astwriter",3]]]],[11,"ast_debug","","",49,[[["astwriter",3]]]],[11,"ast_debug","","",45,[[["astwriter",3]]]],[11,"ast_debug","","",70,[[["astwriter",3]]]],[11,"fmt","","",72,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::compiler::compiled_unit","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::compiler","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",32,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",68,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",65,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::compiler::compiled_unit","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::compiler","",38,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::compiler::compiled_unit","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::compiler","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",40,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",62,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",39,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",64,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",69,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",146,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",70,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",145,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",61,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",42,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",71,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",33,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::compiler::compiled_unit","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","dvm_libra_deps::compiler","",146,[[],["constpool",3]]],[11,"default","","",145,[[],["address",3]]],[11,"hash","","",66,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",46,[[]]],[11,"hash","","",34,[[]]],[11,"hash","","",41,[[]]],[11,"hash","","",145,[[]]],[11,"hash","","",64,[[]]],[11,"hash","","",33,[[]]],[11,"fmt","","",41,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",69,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",70,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",37,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",38,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",33,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",66,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",145,[[["formatter",3]],[["error",3],["result",4]]]],[11,"partial_cmp","","",34,[[["moduleident_",3]],[["ordering",4],["option",4]]]],[11,"lt","","",34,[[["moduleident_",3]]]],[11,"le","","",34,[[["moduleident_",3]]]],[11,"gt","","",34,[[["moduleident_",3]]]],[11,"ge","","",34,[[["moduleident_",3]]]],[11,"partial_cmp","","",38,[[["structname",3]],[["ordering",4],["option",4]]]],[11,"lt","","",38,[[["structname",3]]]],[11,"le","","",38,[[["structname",3]]]],[11,"gt","","",38,[[["structname",3]]]],[11,"ge","","",38,[[["structname",3]]]],[11,"partial_cmp","","",37,[[["field",3]],[["ordering",4],["option",4]]]],[11,"lt","","",37,[[["field",3]]]],[11,"le","","",37,[[["field",3]]]],[11,"gt","","",37,[[["field",3]]]],[11,"ge","","",37,[[["field",3]]]],[11,"partial_cmp","","",41,[[["functionname",3]],[["ordering",4],["option",4]]]],[11,"lt","","",41,[[["functionname",3]]]],[11,"le","","",41,[[["functionname",3]]]],[11,"gt","","",41,[[["functionname",3]]]],[11,"ge","","",41,[[["functionname",3]]]],[11,"partial_cmp","","",66,[[["var",3]],[["ordering",4],["option",4]]]],[11,"lt","","",66,[[["var",3]]]],[11,"le","","",66,[[["var",3]]]],[11,"gt","","",66,[[["var",3]]]],[11,"ge","","",66,[[["var",3]]]],[11,"partial_cmp","","",46,[[["constantname",3]],[["ordering",4],["option",4]]]],[11,"lt","","",46,[[["constantname",3]]]],[11,"le","","",46,[[["constantname",3]]]],[11,"gt","","",46,[[["constantname",3]]]],[11,"ge","","",46,[[["constantname",3]]]],[11,"partial_cmp","","",33,[[["modulename",3]],[["ordering",4],["option",4]]]],[11,"lt","","",33,[[["modulename",3]]]],[11,"le","","",33,[[["modulename",3]]]],[11,"gt","","",33,[[["modulename",3]]]],[11,"ge","","",33,[[["modulename",3]]]],[11,"partial_cmp","","",64,[[["kind_",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",145,[[["address",3]],[["ordering",4],["option",4]]]],[11,"lt","","",145,[[["address",3]]]],[11,"le","","",145,[[["address",3]]]],[11,"gt","","",145,[[["address",3]]]],[11,"ge","","",145,[[["address",3]]]],[11,"partial_cmp","","",35,[[["moduleident",3]],[["ordering",4],["option",4]]]],[11,"lt","","",35,[[["moduleident",3]]]],[11,"le","","",35,[[["moduleident",3]]]],[11,"gt","","",35,[[["moduleident",3]]]],[11,"ge","","",35,[[["moduleident",3]]]],[11,"cmp","","",35,[[["moduleident",3]],["ordering",4]]],[11,"cmp","","",145,[[["address",3]],["ordering",4]]],[11,"cmp","","",34,[[["moduleident_",3]],["ordering",4]]],[11,"cmp","","",66,[[["var",3]],["ordering",4]]],[11,"cmp","","",33,[[["modulename",3]],["ordering",4]]],[11,"cmp","","",37,[[["field",3]],["ordering",4]]],[11,"cmp","","",41,[[["functionname",3]],["ordering",4]]],[11,"cmp","","",46,[[["constantname",3]],["ordering",4]]],[11,"cmp","","",64,[[["kind_",4]],["ordering",4]]],[11,"cmp","","",38,[[["structname",3]],["ordering",4]]],[11,"as_ref","","",145,[[]]],[11,"load_resource","dvm_libra_deps::ds","",24,[[["type",4],["accountaddress",3]],[["result",4],["globalvalue",3],["partialvmerror",3]]]],[11,"load_module","","",24,[[["moduleid",3]],[["vmerror",3],["result",4],["vec",3]]]],[11,"publish_module","","",24,[[["moduleid",3],["vec",3]],[["vmerror",3],["result",4]]]],[11,"exists_module","","",24,[[["moduleid",3]],[["vmerror",3],["result",4]]]],[11,"emit_event","","",24,[[["vec",3],["value",3],["option",4],["moduleid",3],["type",4]],[["result",4],["partialvmerror",3]]]],[11,"default","dvm_libra_deps::vm","",112,[[],["movevm",3]]],[11,"from_str","dvm_libra_deps::logger","",125,[[],[["levelfilter",4],["result",4]]]],[11,"from_str","","",126,[[],[["result",4],["level",4]]]],[11,"eq","","",126,[[["level",4]]]],[11,"eq","","",125,[[["levelfilter",4]]]],[11,"eq","","",164,[[["key",3]]]],[11,"ne","","",164,[[["key",3]]]],[11,"clone","","",126,[[],["level",4]]],[11,"clone","","",122,[[],["securityevent",4]]],[11,"clone","","",162,[[],["metadata",3]]],[11,"clone","","",128,[[],["value",4]]],[11,"clone","","",165,[[],["keyvalue",3]]],[11,"clone","","",164,[[],["key",3]]],[11,"clone","","",125,[[],["levelfilter",4]]],[11,"clone","dvm_libra_deps::logger::json_log","",123,[[],["jsonlogentry",3]]],[11,"serialize","dvm_libra_deps::logger","",126,[[],["result",4]]],[11,"serialize","","",122,[[],["result",4]]],[11,"serialize","","",162,[[],["result",4]]],[11,"serialize","","",164,[[],["result",4]]],[11,"serialize","","",157,[[],["result",4]]],[11,"serialize","dvm_libra_deps::logger::json_log","",123,[[],["result",4]]],[11,"fmt","dvm_libra_deps::logger","",157,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",165,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",128,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",125,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",160,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",164,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",122,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",126,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",161,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",162,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","","",157,[[],["structuredlogentry",3]]],[11,"hash","","",164,[[]]],[11,"hash","","",126,[[]]],[11,"visit","","",122,[[["visitor",8]]]],[11,"visit","","",157,[[["visitor",8]]]],[11,"visit","","",165,[[["visitor",8]]]],[11,"fmt","","",126,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",125,[[["level",4]],["levelfilter",4]]],[11,"partial_cmp","","",125,[[["levelfilter",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",126,[[["level",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",164,[[["key",3]],[["ordering",4],["option",4]]]],[11,"lt","","",164,[[["key",3]]]],[11,"le","","",164,[[["key",3]]]],[11,"gt","","",164,[[["key",3]]]],[11,"ge","","",164,[[["key",3]]]],[11,"cmp","","",126,[[["level",4]],["ordering",4]]],[11,"cmp","","",164,[[["key",3]],["ordering",4]]],[11,"cmp","","",125,[[["levelfilter",4]],["ordering",4]]],[11,"deserialize","","",126,[[],[["result",4],["level",4]]]],[11,"deserialize","","",162,[[],[["result",4],["metadata",3]]]],[11,"deserialize","dvm_libra_deps::logger::json_log","",123,[[],[["jsonlogentry",3],["result",4]]]],[11,"deserialize","dvm_libra_deps::logger","",122,[[],[["result",4],["securityevent",4]]]],[11,"clone","dvm_libra_deps::gas","",120,[[],["nativecostindex",4]]],[11,"cast","dvm_libra_deps::vm","",113,[[],[["result",4],["partialvmerror",3],["vec",3]]]],[11,"cast","","",113,[[],[["reference",3],["partialvmerror",3],["result",4]]]],[11,"cast","","",113,[[],[["partialvmerror",3],["result",4]]]],[11,"cast","","",113,[[],[["partialvmerror",3],["structref",3],["result",4]]]],[11,"cast","","",113,[[],[["result",4],["partialvmerror",3]]]],[11,"cast","","",113,[[],[["container",4],["result",4],["partialvmerror",3]]]],[11,"cast","","",113,[[],[["partialvmerror",3],["result",4],["accountaddress",3]]]],[11,"cast","","",113,[[],[["containerref",4],["result",4],["partialvmerror",3]]]],[11,"cast","","",113,[[],[["result",4],["vector",3],["partialvmerror",3]]]],[11,"cast","","",113,[[],[["result",4],["partialvmerror",3]]]],[11,"cast","","",113,[[],[["result",4],["partialvmerror",3],["struct",3]]]],[11,"cast","","",113,[[],[["result",4],["indexedref",3],["partialvmerror",3]]]],[11,"cast","","",113,[[],[["result",4],["vectorref",3],["partialvmerror",3]]]],[11,"cast","","",113,[[],[["result",4],["signerref",3],["partialvmerror",3]]]],[11,"cast","","",113,[[],[["integervalue",4],["result",4],["partialvmerror",3]]]],[11,"cast","","",113,[[],[["result",4],["partialvmerror",3]]]],[11,"fmt","dvm_libra_deps::gas","",120,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_libra_deps::vm","",113,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","dvm_libra_deps::gas","",120,[[]]],[11,"fmt","dvm_libra_deps::vm","",113,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","dvm_libra_deps::gas","",120,[[["nativecostindex",4]]]],[11,"partial_cmp","","",120,[[["nativecostindex",4]],[["ordering",4],["option",4]]]],[11,"cmp","","",120,[[["nativecostindex",4]],["ordering",4]]],[11,"get_module","dvm_libra_deps::ds","",143,[[["moduleid",3]],[["vmerror",3],["result",4],["option",4]]]],[11,"get_resource","","",143,[[["structtag",3],["accountaddress",3]],[["result",4],["partialvmerror",3],["option",4]]]],[11,"fetch_config","","",143,[[["accesspath",3]],[["option",4],["vec",3]]]],[11,"new","dvm_libra_deps::bf","",130,[[],["vmcontrolflowgraph",3]]],[11,"display","","",130,[[]]],[11,"reachable_from","","",130,[[],["vec",3]]],[11,"new","dvm_libra_deps::module","",131,[[["identifier",3],["accountaddress",3]],["moduleid",3]]],[11,"name","","",131,[[],["identstr",3]]],[11,"address","","",131,[[],["accountaddress",3]]],[11,"access_vector","","",131,[[],["vec",3]]],[11,"new","","",1,[[["vec",3]],["module",3]]],[11,"code","","",1,[[]]],[11,"is_unconditional_branch","dvm_libra_deps::file_format","Return true if this bytecode instruction always branches",4,[[]]],[11,"is_conditional_branch","","Return true if the branching behavior of this bytecode…",4,[[]]],[11,"is_branch","","Returns true if this bytecode instruction is either a…",4,[[]]],[11,"offset","","Returns the offset that this bytecode instruction branches…",4,[[],["option",4]]],[11,"get_successors","","Return the successor offsets of this bytecode instruction.",4,[[],["vec",3]]],[18,"NUM_INSTRUCTIONS","","The number of variants in this enum.",4,null],[11,"deserialize","","Deserializes a &[u8] slice into a `CompiledScript` instance.",132,[[],[["compiledscript",3],["result",4],["partialvmerror",3]]]],[18,"MAIN_INDEX","","Returns the index of `main` in case a script is converted…",132,null],[11,"as_inner","","Returns a reference to the inner `CompiledScriptMut`.",132,[[],["compiledscriptmut",3]]],[11,"into_inner","","Converts this instance into the inner `CompiledScriptMut`.…",132,[[],["compiledscriptmut",3]]],[11,"into_module","","Converts a `CompiledScript` into a `CompiledModule` for…",132,[[]]],[11,"serialize","","Serializes a `CompiledScript` into a binary. The mutable…",132,[[["vec",3]],[["error",3],["result",4]]]],[11,"deserialize","","Deserialize a &[u8] slice into a `CompiledModule` instance.",133,[[],[["compiledmodule",3],["result",4],["partialvmerror",3]]]],[11,"as_inner","","Returns a reference to the inner `CompiledModuleMut`.",133,[[],["compiledmodulemut",3]]],[11,"into_inner","","Converts this instance into the inner `CompiledModuleMut`.…",133,[[],["compiledmodulemut",3]]],[11,"kind_count","","Returns the number of items of a specific `IndexKind`.",133,[[["indexkind",4]]]],[11,"module_id_for_handle","","Returns the code key of `module_handle`",133,[[["modulehandle",3]],["moduleid",3]]],[11,"self_id","","Returns the code key of `self`",133,[[],["moduleid",3]]],[11,"into_script","","This function should only be called on an instance of…",133,[[["scriptconversioninfo",3]],["compiledscript",3]]],[11,"serialize","","Serializes a `CompiledModule` into a binary. The mutable…",133,[[["vec",3]],[["error",3],["result",4]]]],[11,"signature_token_kind","","Returns the \\\"value kind\\\" for the `SignatureToken`",6,[[],["signaturetokenkind",4]]],[11,"is_integer","","",6,[[]]],[11,"is_reference","","Returns true if the `SignatureToken` is any kind of…",6,[[]]],[11,"is_mutable_reference","","Returns true if the `SignatureToken` is a mutable reference.",6,[[]]],[11,"is_valid_for_constant","","Returns true if the `SignatureToken` can represent a…",6,[[]]],[11,"debug_set_sh_idx","","Set the index to this one. Useful for random testing.",6,[[["structhandleindex",3]]]],[11,"preorder_traversal","","",6,[[],["signaturetokenpreordertraversaliter",3]]],[11,"preorder_traversal_with_depth","","",6,[[],["signaturetokenpreordertraversaliterwithdepth",3]]],[11,"name","dvm_libra_deps::compiler::compiled_unit","",7,[[],["string",3]]],[11,"serialize","","",7,[[],["vec",3]]],[11,"serialize_debug","","",7,[[],["vec",3]]],[11,"serialize_source_map","","",7,[[],["vec",3]]],[11,"verify","","",7,[[]]],[11,"simple_deserialize","dvm_libra_deps::module","",13,[[["movetypelayout",4]],[["movevalue",4],["error",3],["result",4]]]],[11,"simple_serialize","","",13,[[],[["option",4],["vec",3]]]],[11,"vector_u8","","",13,[[["vec",3]],["movevalue",4]]],[11,"new","dvm_libra_deps::account","",134,[[],["accountaddress",3]]],[18,"LENGTH","","The number of bytes in an address.",134,null],[18,"ZERO","","Hex address: 0x0",134,null],[11,"random","","",134,[[],["accountaddress",3]]],[11,"short_str","","",134,[[],["string",3]]],[11,"to_vec","","",134,[[],["vec",3]]],[11,"from_hex_literal","","",134,[[],[["error",3],["result",4],["accountaddress",3]]]],[11,"from_identity_public_key","","",134,[[["publickey",3]],["accountaddress",3]]],[11,"new","","Creates a new `Identifier` instance.",135,[[],[["result",4],["identifier",3],["error",3]]]],[11,"is_valid","","Returns true if this string is a valid identifier.",135,[[]]],[11,"is_self","","Returns if this identifier is \\\"\\\". TODO: remove once we…",135,[[]]],[11,"from_utf8","","Converts a vector of bytes to an `Identifier`.",135,[[["vec",3]],[["result",4],["identifier",3],["error",3]]]],[11,"as_ident_str","","Creates a borrowed version of `self`.",135,[[],["identstr",3]]],[11,"into_string","","Converts this `Identifier` into a `String`.",135,[[],["string",3]]],[11,"into_bytes","","Converts this `Identifier` into a UTF-8-encoded byte…",135,[[],["vec",3]]],[11,"status_type","dvm_libra_deps::result","Return the status type for this status code",14,[[],["statustype",4]]],[11,"status_code","","Return the status code for the `VMStatus`",15,[[],["statuscode",4]]],[11,"move_abort_code","","Returns the Move abort code if the status is `MoveAbort`,…",15,[[],["option",4]]],[11,"status_type","","Return the status type for this `VMStatus`. This is solely…",15,[[],["statustype",4]]],[11,"keep_or_discard","","Returns `Ok` with a recorded status if it should be kept,…",15,[[],[["result",4],["statuscode",4],["keptvmstatus",4]]]],[11,"finish","","",136,[[["location",4]],["vmerror",3]]],[11,"new","","",136,[[["statuscode",4]],["partialvmerror",3]]],[11,"major_status","","",136,[[],["statuscode",4]]],[11,"with_sub_status","","",136,[[],["partialvmerror",3]]],[11,"with_message","","",136,[[["string",3]],["partialvmerror",3]]],[11,"at_index","","",136,[[["indexkind",4]],["partialvmerror",3]]],[11,"at_indices","","",136,[[["vec",3]],["partialvmerror",3]]],[11,"at_code_offset","","",136,[[["functiondefinitionindex",3]],["partialvmerror",3]]],[11,"at_code_offsets","","",136,[[["vec",3]],["partialvmerror",3]]],[11,"append_message_with_separator","","Append the message `message` to the message field of the…",136,[[["string",3]],["partialvmerror",3]]],[11,"into_vm_status","","",137,[[],["vmstatus",4]]],[11,"major_status","","",137,[[],["statuscode",4]]],[11,"sub_status","","",137,[[],["option",4]]],[11,"message","","",137,[[],[["option",4],["string",3]]]],[11,"location","","",137,[[],["location",4]]],[11,"indices","","",137,[[],["vec",3]]],[11,"offsets","","",137,[[],["vec",3]]],[11,"status_type","","",137,[[],["statustype",4]]],[11,"all_data","","",137,[[]]],[18,"CODE_TAG","dvm_libra_deps::ds","",21,null],[18,"RESOURCE_TAG","","",21,null],[11,"new","","",21,[[["vec",3],["accountaddress",3]],["accesspath",3]]],[11,"resource_access_vec","","",21,[[["structtag",3]],["vec",3]]],[11,"resource_access_path","","Convert Accesses into a byte offset which would be used by…",21,[[["resourcekey",3]],["accesspath",3]]],[11,"code_access_path","","",21,[[["moduleid",3]],["accesspath",3]]],[11,"is_deletion","","",23,[[]]],[11,"is_empty","","",138,[[]]],[11,"iter","","",138,[[],["iter",3]]],[11,"into_mut","","",138,[[],["writesetmut",3]]],[11,"new","","",139,[[["vec",3]],["writesetmut",3]]],[11,"push","","",139,[[]]],[11,"is_empty","","",139,[[]]],[11,"freeze","","",139,[[],[["result",4],["error",3],["writeset",3]]]],[11,"new","","",140,[[],["modulecache",3]]],[11,"new","","Create a `TransactionDataCache` with a `RemoteCache` that…",24,[[["loader",3]],["transactiondatacache",3]]],[11,"new","","",141,[[],["scriptcache",3]]],[11,"new","","",142,[[],["typecache",3]]],[11,"new","","",143,[[],["remotestorage",3]]],[11,"get","","",143,[[["accesspath",3]],[["result",4],["partialvmerror",3],["option",4]]]],[11,"access_vector","","",26,[[],["vec",3]]],[11,"module_id","","",26,[[],["moduleid",3]]],[11,"address","","",144,[[],["accountaddress",3]]],[11,"type_","","",144,[[],["structtag",3]]],[11,"new","","",144,[[["structtag",3],["accountaddress",3]],["resourcekey",3]]],[18,"SELF_NAME","dvm_libra_deps::compiler","",33,null],[11,"loc","","",35,[[],["loc",3]]],[18,"VALUE_CONSTRAINT","","",64,null],[18,"RESOURCE_CONSTRAINT","","",64,null],[11,"is_resourceful","","",64,[[]]],[11,"unit","","",65,[[["loc",3]],[["spanned",3],["type_",4]]]],[11,"starts_with_underscore","","",66,[[]]],[18,"NOT","","",69,null],[11,"symbol","","",69,[[]]],[11,"is_pure","","",69,[[]]],[18,"ADD","","",70,null],[18,"SUB","","",70,null],[18,"MUL","","",70,null],[18,"MOD","","",70,null],[18,"DIV","","",70,null],[18,"BIT_OR","","",70,null],[18,"BIT_AND","","",70,null],[18,"XOR","","",70,null],[18,"SHL","","",70,null],[18,"SHR","","",70,null],[18,"AND","","",70,null],[18,"OR","","",70,null],[18,"EQ","","",70,null],[18,"NEQ","","",70,null],[18,"LT","","",70,null],[18,"GT","","",70,null],[18,"LE","","",70,null],[18,"GE","","",70,null],[18,"IMPLIES","","",70,null],[18,"RANGE","","",70,null],[11,"symbol","","",70,[[]]],[11,"is_pure","","",70,[[]]],[11,"is_spec_only","","",70,[[]]],[18,"LIBRA_CORE","","",145,null],[11,"new","","",145,[[],["address",3]]],[11,"to_u8","","",145,[[]]],[11,"parse_str","","",145,[[],[["string",3],["result",4],["address",3]]]],[11,"new","","",146,[[],["constpool",3]]],[11,"push","","",146,[[]]],[11,"new","dvm_libra_deps::file_format","",73,[[],["modulehandleindex",3]]],[11,"new","","",74,[[],["structhandleindex",3]]],[11,"new","","",75,[[],["functionhandleindex",3]]],[11,"new","","",76,[[],["fieldhandleindex",3]]],[11,"new","","",77,[[],["structdefinstantiationindex",3]]],[11,"new","","",78,[[],["functioninstantiationindex",3]]],[11,"new","","",79,[[],["fieldinstantiationindex",3]]],[11,"new","","",80,[[],["identifierindex",3]]],[11,"new","","",81,[[],["addressidentifierindex",3]]],[11,"new","","",82,[[],["constantpoolindex",3]]],[11,"new","","",83,[[],["signatureindex",3]]],[11,"new","","",84,[[],["structdefinitionindex",3]]],[11,"new","","",85,[[],["functiondefinitionindex",3]]],[11,"declared_field_count","","",93,[[],[["partialvmerror",3],["result",4]]]],[11,"is_public","","Returns whether the FunctionDefinition is public.",95,[[]]],[11,"is_native","","Returns whether the FunctionDefinition is native.",95,[[]]],[18,"PUBLIC","","Function can be invoked outside of its declaring module.",95,null],[18,"NATIVE","","A native function implemented in Rust.",95,null],[11,"len","","Length of the `Signature`.",98,[[]]],[11,"is_empty","","Whether the function has no locals (both arguments or…",98,[[]]],[11,"is_sub_kind_of","","Checks if the given kind is a sub-kind of another.",99,[[["kind",4]]]],[11,"join","","Helper function to determine the kind of a struct instance…",99,[[["kind",4]],["kind",4]]],[11,"serialize_constant","","",100,[[["movevalue",4],["movetypelayout",4]],[["constant",3],["option",4]]]],[11,"deserialize_constant","","",100,[[],[["option",4],["movevalue",4]]]],[11,"freeze","","Converts this instance into `CompiledScript` after…",102,[[],[["compiledscript",3],["result",4],["partialvmerror",3]]]],[11,"into_module","","Converts a `CompiledScriptMut` to a `CompiledModule` for…",102,[[]]],[11,"serialize","","Serializes this into a binary format.",102,[[["vec",3]],[["error",3],["result",4]]]],[11,"deserialize_no_check_bounds","","",103,[[],[["compiledmodulemut",3],["partialvmerror",3],["result",4]]]],[11,"kind_count","","Returns the count of a specific `IndexKind`",103,[[["indexkind",4]]]],[11,"freeze","","Converts this instance into `CompiledModule` after…",103,[[],[["compiledmodule",3],["result",4],["partialvmerror",3]]]],[11,"serialize","","Serializes this into a binary format.",103,[[["vec",3]],[["error",3],["result",4]]]],[18,"LIBRA_MAGIC_SIZE","","The blob that must start a binary.",150,null],[18,"LIBRA_MAGIC","","",150,null],[18,"HEADER_SIZE","","The `LIBRA_MAGIC` size, 4 byte for major version and 1…",150,null],[18,"TABLE_HEADER_SIZE","","A (Table Type, Start Offset, Byte Count) size, which is 1…",150,null],[11,"new","","",151,[[],["binarydata",3]]],[11,"as_inner","","",151,[[]]],[11,"into_inner","","",151,[[],["vec",3]]],[11,"push","","",151,[[],[["error",3],["result",4]]]],[11,"extend","","",151,[[],[["error",3],["result",4]]]],[11,"len","","",151,[[]]],[11,"is_empty","","",151,[[]]],[11,"clear","","",151,[[]]],[11,"new","dvm_libra_deps::vm","",110,[[["eventkey",3],["typetag",4],["vec",3]],["contractevent",4]]],[11,"with_caller","","",110,[[["typetag",4],["vec",3],["eventkey",3],["option",4],["moduleid",3]],["contractevent",4]]],[11,"status","","",111,[[],[["result",4],["statuscode",4],["keptvmstatus",4]]]],[11,"is_discarded","","",111,[[]]],[11,"new","","",112,[[],["movevm",3]]],[11,"new_session","","",112,[[],["session",3]]],[11,"is_valid_arg","","",113,[[["signaturetoken",4]]]],[11,"is_constant_or_signer_ref","","",113,[[]]],[11,"copy_value","","",113,[[],[["value",3],["partialvmerror",3],["result",4]]]],[11,"equals","","",113,[[["value",3]],[["result",4],["partialvmerror",3]]]],[11,"u8","","",113,[[],["value",3]]],[11,"u64","","",113,[[],["value",3]]],[11,"u128","","",113,[[],["value",3]]],[11,"bool","","",113,[[],["value",3]]],[11,"address","","",113,[[["accountaddress",3]],["value",3]]],[11,"signer","","",113,[[["accountaddress",3]],["value",3]]],[11,"transaction_argument_signer_reference","","Create a \\\"unowned\\\" reference to a signer value (&signer)…",113,[[["accountaddress",3]],["value",3]]],[11,"struct_","","",113,[[["struct",3]],["value",3]]],[11,"vector_u8","","",113,[[],["value",3]]],[11,"vector_u64","","",113,[[],["value",3]]],[11,"vector_u128","","",113,[[],["value",3]]],[11,"vector_bool","","",113,[[],["value",3]]],[11,"vector_address","","",113,[[],["value",3]]],[11,"constant_vector_generic","","",113,[[["signaturetoken",4]],[["value",3],["partialvmerror",3],["result",4]]]],[11,"vector_resource_for_testing_only","","",113,[[],["value",3]]],[11,"value_as","","",113,[[],[["partialvmerror",3],["result",4]]]],[11,"size","","",113,[[],["abstractmemorysize",3]]],[11,"simple_deserialize","","",113,[[["movekindinfo",4],["movetypelayout",4]],[["value",3],["option",4]]]],[11,"simple_serialize","","",113,[[["movetypelayout",4]],[["option",4],["vec",3]]]],[11,"deserialize_constant","","",113,[[["constant",3]],[["value",3],["option",4]]]],[11,"new","","",114,[[],["loader",3]]],[11,"execute_function","","",152,[[["typetag",4],["vec",3],["moduleid",3],["vec",3],["value",3],["coststrategy",3],["identstr",3],["accountaddress",3]],[["vmstatus",4],["result",4]]]],[11,"execute_script","","",152,[[["typetag",4],["vec",3],["vec",3],["vec",3],["vec",3],["value",3],["coststrategy",3],["accountaddress",3]],[["vmerror",3],["result",4]]]],[11,"publish_module","","",152,[[["accountaddress",3],["coststrategy",3],["vec",3]],[["vmerror",3],["result",4]]]],[11,"num_mutated_accounts","","",152,[[]]],[11,"finish","","",152,[[],[["result",4],["transactioneffects",3],["vmerror",3]]]],[11,"instruction_cost","dvm_libra_deps::gas","",118,[[],["gascost",3]]],[11,"native_cost","","",118,[[],["gascost",3]]],[11,"new","","",119,[[],["gascost",3]]],[11,"total","","Take a GasCost from our gas schedule and convert it to a…",119,[[],["gasunits",3]]],[11,"transaction","","A transaction `CostStrategy`. Charge for every operation…",156,[[["gasunits",3],["costtable",3]],["coststrategy",3]]],[11,"system","","A system `CostStrategy` does not charge for operations.",156,[[["gasunits",3],["costtable",3]],["coststrategy",3]]],[11,"cost_table","","Return the `CostTable` behind this `CostStrategy`.",156,[[],["costtable",3]]],[11,"remaining_gas","","Return the gas left.",156,[[],["gasunits",3]]],[11,"deduct_gas","","Charge a given amount of gas and fail if not enough gas…",156,[[["gasunits",3]],[["result",4],["partialvmerror",3]]]],[11,"charge_instr_with_size","","Charge an instruction over data with a given size and fail…",156,[[["abstractmemorysize",3],["opcodes",4]],[["result",4],["partialvmerror",3]]]],[11,"charge_instr","","Charge an instruction and fail if not enough gas units are…",156,[[["opcodes",4]],[["result",4],["partialvmerror",3]]]],[11,"charge_intrinsic_gas","","Charge gas related to the overall size of a transaction…",156,[[["abstractmemorysize",3]],[["vmerror",3],["result",4]]]],[11,"disable_metering","","",156,[[]]],[11,"enable_metering","","",156,[[]]],[11,"new_named","dvm_libra_deps::logger","Creates a log with a category and a name. This should be…",157,[[],["structuredlogentry",3]]],[11,"data","","Add a data field, with a given value, will serialize into…",157,[[],["structuredlogentry",3]]],[11,"data_display","","Used for errors and other types that don\'t serialize well",157,[[],["structuredlogentry",3]]],[11,"field","","Add a typed data field to serialize, to ensure type and…",157,[[["loggingfield",3]],["structuredlogentry",3]]],[11,"message","","Sets the context log line used for text logs. This is…",157,[[["string",3]],["structuredlogentry",3]]],[11,"new","dvm_libra_deps::logger::json_log","",123,[[["value",4]],["jsonlogentry",3]]],[11,"builder","dvm_libra_deps::logger","",158,[[],["libraloggerbuilder",3]]],[11,"new","","",158,[[],["libraloggerbuilder",3]]],[11,"init_for_testing","","",158,[[]]],[11,"set_filter","","",158,[[["filter",3]]]],[11,"new","","",159,[[],["libraloggerbuilder",3]]],[11,"address","","",159,[[["string",3]],["libraloggerbuilder",3]]],[11,"read_env","","",159,[[],["libraloggerbuilder",3]]],[11,"level","","",159,[[["level",4]],["libraloggerbuilder",3]]],[11,"channel_size","","",159,[[],["libraloggerbuilder",3]]],[11,"printer","","",159,[[["box",3],["writer",8]],["libraloggerbuilder",3]]],[11,"is_async","","",159,[[],["libraloggerbuilder",3]]],[11,"init","","",159,[[]]],[11,"build","","",159,[[],[["arc",3],["libralogger",3]]]],[11,"dispatch","","",160,[[["arguments",3],["metadata",3],["option",4]]]],[11,"metadata","","",160,[[],["metadata",3]]],[11,"message","","",160,[[],[["arguments",3],["option",4]]]],[11,"keys_and_values","","",160,[[]]],[11,"builder","","",161,[[],["builder",3]]],[11,"enabled","","",161,[[["metadata",3]]]],[11,"max","","Returns the most verbose logging level filter.",125,[[],["levelfilter",4]]],[11,"new","","",162,[[["level",4]],["metadata",3]]],[11,"enabled","","",162,[[]]],[11,"level","","",162,[[],["level",4]]],[11,"target","","",162,[[]]],[11,"module_path","","",162,[[]]],[11,"file","","",162,[[]]],[11,"line","","",162,[[]]],[11,"location","","",162,[[]]],[11,"new","","",163,[[],["loggingfield",3]]],[11,"new","","",164,[[],["key",3]]],[11,"as_str","","",164,[[]]],[11,"new","","",165,[[["value",4]],["keyvalue",3]]],[11,"from_serde","","Get a value from a debuggable type.",128,[[],["value",4]]],[11,"from_debug","","Get a value from a debuggable type.",128,[[],["value",4]]],[11,"from_display","","Get a value from a displayable type.",128,[[],["value",4]]]],"p":[[8,"ControlFlowGraph"],[3,"Module"],[8,"ModuleAccess"],[8,"ScriptAccess"],[4,"Bytecode"],[3,"ModuleHandle"],[4,"SignatureToken"],[4,"CompiledUnit"],[13,"Module"],[13,"Script"],[4,"Definition"],[3,"ModuleDefinition"],[3,"Script"],[4,"MoveValue"],[4,"StatusCode"],[4,"VMStatus"],[13,"ExecutionFailure"],[4,"KeptVMStatus"],[13,"ExecutionFailure"],[4,"AbortLoc"],[4,"Location"],[3,"AccessPath"],[8,"RemoteCache"],[4,"WriteOp"],[3,"TransactionDataCache"],[8,"DataStore"],[3,"StructTag"],[4,"TypeTag"],[3,"VarInfo"],[3,"SpecInfo"],[3,"FunctionInfo"],[3,"Program"],[4,"Use"],[3,"ModuleName"],[3,"ModuleIdent_"],[3,"ModuleIdent"],[4,"ModuleMember"],[3,"Field"],[3,"StructName"],[3,"StructDefinition"],[4,"StructFields"],[3,"FunctionName"],[3,"FunctionSignature"],[4,"FunctionVisibility"],[4,"FunctionBody_"],[3,"Function"],[3,"ConstantName"],[3,"Constant"],[3,"SpecBlock_"],[4,"SpecBlockTarget_"],[3,"PragmaProperty_"],[3,"SpecApplyPattern_"],[4,"SpecApplyFragment_"],[4,"SpecBlockMember_"],[13,"Condition"],[13,"Function"],[13,"Variable"],[13,"Let"],[13,"Include"],[13,"Apply"],[13,"Pragma"],[4,"SpecConditionKind"],[4,"InvariantKind"],[4,"ModuleAccess_"],[4,"Kind_"],[4,"Type_"],[3,"Var"],[4,"Bind_"],[4,"Value_"],[4,"UnaryOp_"],[4,"BinOp_"],[4,"Exp_"],[4,"SequenceItem_"],[3,"ModuleHandleIndex"],[3,"StructHandleIndex"],[3,"FunctionHandleIndex"],[3,"FieldHandleIndex"],[3,"StructDefInstantiationIndex"],[3,"FunctionInstantiationIndex"],[3,"FieldInstantiationIndex"],[3,"IdentifierIndex"],[3,"AddressIdentifierIndex"],[3,"ConstantPoolIndex"],[3,"SignatureIndex"],[3,"StructDefinitionIndex"],[3,"FunctionDefinitionIndex"],[3,"StructHandle"],[3,"FunctionHandle"],[3,"FieldHandle"],[4,"StructFieldInformation"],[3,"StructDefInstantiation"],[3,"FunctionInstantiation"],[3,"FieldInstantiation"],[3,"StructDefinition"],[3,"FieldDefinition"],[3,"FunctionDefinition"],[3,"TypeSignature"],[3,"FunctionSignature"],[3,"Signature"],[4,"Kind"],[3,"Constant"],[3,"CodeUnit"],[3,"CompiledScriptMut"],[3,"CompiledModuleMut"],[4,"TableType"],[4,"SerializedType"],[4,"SerializedNominalResourceFlag"],[4,"SerializedKind"],[4,"SerializedNativeStructFlag"],[4,"Opcodes"],[4,"ContractEvent"],[4,"TransactionStatus"],[3,"MoveVM"],[3,"Value"],[3,"Loader"],[3,"TransactionEffects"],[8,"GasAlgebra"],[3,"GasConstants"],[3,"CostTable"],[3,"GasCost"],[4,"N"],[4,"Error"],[4,"SecurityEvent"],[3,"JsonLogEntry"],[8,"Writer"],[4,"LevelFilter"],[4,"Level"],[8,"Schema"],[4,"Value"],[8,"Visitor"],[3,"VMControlFlowGraph"],[3,"ModuleId"],[3,"CompiledScript"],[3,"CompiledModule"],[3,"AccountAddress"],[3,"Identifier"],[3,"PartialVMError"],[3,"VMError"],[3,"WriteSet"],[3,"WriteSetMut"],[3,"ModuleCache"],[3,"ScriptCache"],[3,"TypeCache"],[3,"RemoteStorage"],[3,"ResourceKey"],[3,"Address"],[3,"ConstPool"],[3,"SignatureTokenPreorderTraversalIter"],[3,"SignatureTokenPreorderTraversalIterWithDepth"],[3,"ScriptConversionInfo"],[4,"BinaryConstants"],[3,"BinaryData"],[3,"Session"],[3,"AbstractMemorySize"],[3,"GasUnits"],[3,"GasPrice"],[3,"CostStrategy"],[3,"StructuredLogEntry"],[3,"Logger"],[3,"LibraLoggerBuilder"],[3,"Event"],[3,"Filter"],[3,"Metadata"],[3,"LoggingField"],[3,"Key"],[3,"KeyValue"]]},\
"dvm_net":{"doc":"","i":[[0,"endpoint","dvm_net","",null,null],[3,"Http","dvm_net::endpoint","Create Endpoint with inner URI. Supports http and https.…",null,null],[3,"Ipc","","",null,null],[4,"Endpoint","","",null,null],[13,"Http","","",0,null],[13,"Ipc","","",0,null],[5,"from_uri","","",null,[[["uri",3]],[["endpoint",4],["stderror",6],["result",4]]]],[11,"connect","","",0,[[]]],[11,"is_ipc","","",0,[[]]],[11,"is_http","","",0,[[]]],[11,"connect","","Connect using default transport (http2).",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"connect","","Connect using UDS transport.",2,[[]]],[11,"as_str","","",2,[[],["option",4]]],[0,"serve","dvm_net","",null,null],[5,"serve_with_drop","dvm_net::serve","",null,[[["endpoint",4],["router",3]]]],[5,"serve_with_shutdown","","",null,[[["endpoint",4],["router",3]]]],[8,"ServeWith","","",null,null],[10,"serve_ext","","",3,[[["endpoint",4]],[["pin",3],["box",3]]]],[10,"serve_ext_with_shutdown","","",3,[[["endpoint",4],["send",8],["future",8]],[["pin",3],["box",3]]]],[0,"transport","dvm_net","",null,null],[3,"Stream","dvm_net::transport","",null,null],[3,"Listener","","",null,null],[3,"FdGuard","","",null,null],[5,"close_uds","","",null,[[["asref",8],["path",3]],[["error",3],["result",4]]]],[5,"unlink_uds","","",null,[[["asref",8],["path",3]],[["error",3],["result",4]]]],[6,"Guard","","",null,null],[0,"prelude","dvm_net","The DVM-NET Prelude",null,null],[8,"TryInto","dvm_net::prelude","An attempted conversion that consumes `self`, which may or…",null,null],[16,"Error","","The type returned in the event of a conversion error.",4,null],[10,"try_into","","Performs the conversion.",4,[[],["result",4]]],[8,"TryFrom","","Simple and safe type conversions that may fail in a…",null,null],[16,"Error","","The type returned in the event of a conversion error.",5,null],[10,"try_from","","Performs the conversion.",5,[[],["result",4]]],[6,"StdError","dvm_net","",null,null],[11,"from","dvm_net::endpoint","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_request","","",1,[[],["request",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_request","","",2,[[],["request",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_request","","",0,[[],["request",3]]],[11,"vzip","","",0,[[]]],[11,"from","dvm_net::transport","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_request","","",6,[[],["request",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_request","","",7,[[],["request",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_request","","",8,[[],["request",3]]],[11,"vzip","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"clone","dvm_net::endpoint","",0,[[],["endpoint",4]]],[11,"clone","","",1,[[],["http",3]]],[11,"clone","","",2,[[],["ipc",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_net::transport","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_net::endpoint","",0,[[["formatter",3]],["result",6]]],[11,"try_from","","",0,[[["uri",3]],["result",4]]],[11,"from_str","","Create Endpoint from URI. Supports http and ipc schemes.",0,[[],["result",4]]],[11,"try_into","","",1,[[],[["result",4],["socketaddr",4]]]],[11,"try_into","","",0,[[],[["result",4],["socketaddr",4]]]],[11,"try_into","","",0,[[],[["uri",3],["result",4]]]],[11,"poll_read","dvm_net::transport","",6,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_write","","",6,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_flush","","",6,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"poll_shutdown","","",6,[[["context",3],["pin",3]],[["poll",4],["result",6]]]],[11,"new","","",6,[[["unixstream",3]]]],[11,"connect","","",6,[[["asref",8],["path",3]]]],[11,"into_incoming","","",6,[[]]],[11,"bind","","",7,[[["asref",8],["path",3]],[["error",3],["result",4]]]],[11,"incoming","","",7,[[]]],[11,"guarded","","Builder-pattern-like enable or disable inner fd-guard. If…",7,[[]]],[11,"set_guard","","Enable or disable inner fd-guard. If disable prevent…",7,[[]]],[11,"guard","","Take and return the guard. Return `None` if already taken.",7,[[],[["option",4],["fdguard",3]]]],[11,"disable","","",8,[[]]]],"p":[[4,"Endpoint"],[3,"Http"],[3,"Ipc"],[8,"ServeWith"],[8,"TryInto"],[8,"TryFrom"],[3,"Stream"],[3,"Listener"],[3,"FdGuard"]]},\
"dvm_runtime":{"doc":"Integration with MoveVM.","i":[[0,"gas_schedule","dvm_runtime","Defines dvm `CostTable`.",null,null],[5,"cost_table","dvm_runtime::gas_schedule","Specific gas per instruction configuration for dvm.…",null,[[],["costtable",3]]],[0,"resources","dvm_runtime","Chain resources.",null,null],[3,"BlockMetadata","dvm_runtime::resources","Height of the current block.",null,null],[12,"height","","Block height.",0,null],[3,"CurrentTimestamp","","A singleton resource holding the current Unix time in…",null,null],[12,"seconds","","Unix time stamp in seconds",1,null],[3,"Price","","Currency price.",null,null],[12,"price","","Currency price.",2,null],[3,"U64Store","","Deserializable `u64` for lcs.",null,null],[12,"val","","Internal value.",3,null],[3,"AddressStore","","Deserializable `AccountAddress` for lcs.",null,null],[12,"val","","Internal value.",4,null],[3,"VectorU8Store","","Deserializable `Vec<u8>` for lcs.",null,null],[12,"val","","Internal value.",5,null],[5,"oracle_metadata","","Returns oracle metadata struct tag.",null,[[],["structtag",3]]],[5,"block_metadata","","Returns block metadata struct tag.",null,[[],["structtag",3]]],[5,"time_metadata","","Returns time metadata struct tag.",null,[[],["structtag",3]]],[0,"vm","dvm_runtime","Defines structures for script execution inside VM.",null,null],[0,"dvm","dvm_runtime::vm","Dfinance virtual machine.",null,null],[3,"Dvm","dvm_runtime::vm::dvm","Dfinance virtual machine.",null,null],[11,"new","","Create a new virtual machine with the given data source.",6,[[["memorychecker",3],["option",4]],["dvm",3]]],[11,"publish_module","","Publishes module to the chain.",6,[[["gas",3],["moduletx",3]],["vmresult",6]]],[11,"execute_script","","Executes passed script on the chain.",6,[[["gas",3],["scripttx",3]],["vmresult",6]]],[0,"types","dvm_runtime::vm","Vm types.",null,null],[3,"Gas","dvm_runtime::vm::types","Stores gas metadata for vm execution.",null,null],[3,"ExecutionResult","","Result of transaction execution.",null,null],[12,"write_set","","Changes to the chain.",7,null],[12,"events","","Emitted events.",7,null],[12,"gas_used","","Number of gas units used for execution.",7,null],[12,"status","","Status of execution.",7,null],[3,"ModuleTx","","Module transaction.",null,null],[3,"ScriptTx","","Script bytecode + passed arguments and type parameters.",null,null],[6,"VmResult","","Result enum for ExecutionResult",null,null],[11,"new","","Constructor.",8,[[],[["gas",3],["result",6]]]],[11,"max_gas_amount","","Returns max gas units to be used in transaction execution.",8,[[]]],[11,"gas_unit_price","","Returns price in `DFI` coins per unit of gas.",8,[[]]],[11,"new","","Creates `ExecutionResult` out of resulting chain data…",7,[[["coststrategy",3],["gas",3],["vmresult",6],["transactioneffects",3]],["executionresult",3]]],[11,"new","","Constructor.",9,[[["accountaddress",3],["vec",3]],["moduletx",3]]],[11,"code","","Returns module bytecode.",9,[[]]],[11,"into_inner","","Convert into internal data.",9,[[]]],[11,"new","","Constructor.",10,[[["vec",3],["vec",3],["typetag",4],["vec",3],["vec",3],["accountaddress",3],["value",3]],["result",6]]],[11,"code","","Script bytecode.",10,[[]]],[11,"args","","Parameters passed to main() function.",10,[[]]],[11,"into_inner","","Convert into internal data.",10,[[]]],[11,"from","dvm_runtime::resources","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"test_only_hash","","",0,[[],["hashvalue",3]]],[11,"vzip","","",0,[[]]],[11,"equivalent","","",0,[[]]],[11,"erased_serialize","","",0,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"into_request","","",0,[[],["request",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"vzip","","",1,[[]]],[11,"equivalent","","",1,[[]]],[11,"erased_serialize","","",1,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"into_request","","",1,[[],["request",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"equivalent","","",2,[[]]],[11,"erased_serialize","","",2,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"into_request","","",2,[[],["request",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"equivalent","","",3,[[]]],[11,"into_request","","",3,[[],["request",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"equivalent","","",4,[[]]],[11,"into_request","","",4,[[],["request",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"equivalent","","",5,[[]]],[11,"into_request","","",5,[[],["request",3]]],[11,"from","dvm_runtime::vm::dvm","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"into_request","","",6,[[],["request",3]]],[11,"from","dvm_runtime::vm::types","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"into_request","","",8,[[],["request",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"equivalent","","",7,[[]]],[11,"into_request","","",7,[[],["request",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"into_request","","",9,[[],["request",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"into_request","","",10,[[],["request",3]]],[11,"clone","","",7,[[],["executionresult",3]]],[11,"clone","","",9,[[],["moduletx",3]]],[11,"eq","dvm_runtime::resources","",0,[[["blockmetadata",3]]]],[11,"ne","","",0,[[["blockmetadata",3]]]],[11,"eq","","",1,[[["currenttimestamp",3]]]],[11,"ne","","",1,[[["currenttimestamp",3]]]],[11,"eq","","",2,[[["price",3]]]],[11,"ne","","",2,[[["price",3]]]],[11,"eq","","",3,[[["u64store",3]]]],[11,"ne","","",3,[[["u64store",3]]]],[11,"eq","","",4,[[["addressstore",3]]]],[11,"ne","","",4,[[["addressstore",3]]]],[11,"eq","","",5,[[["vectoru8store",3]]]],[11,"ne","","",5,[[["vectoru8store",3]]]],[11,"eq","dvm_runtime::vm::types","",7,[[["executionresult",3]]]],[11,"ne","","",7,[[["executionresult",3]]]],[11,"fmt","dvm_runtime::resources","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_runtime::vm::dvm","",6,[[["formatter",3]],["result",6]]],[11,"fmt","dvm_runtime::vm::types","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"serialize","dvm_runtime::resources","",0,[[],["result",4]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]],[11,"deserialize","","",0,[[],["result",4]]],[11,"deserialize","","",1,[[],["result",4]]],[11,"deserialize","","",2,[[],["result",4]]],[11,"deserialize","","",3,[[],["result",4]]],[11,"deserialize","","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]]],"p":[[3,"BlockMetadata"],[3,"CurrentTimestamp"],[3,"Price"],[3,"U64Store"],[3,"AddressStore"],[3,"VectorU8Store"],[3,"Dvm"],[3,"ExecutionResult"],[3,"Gas"],[3,"ModuleTx"],[3,"ScriptTx"]]},\
"dvm_services":{"doc":"gRPC services definitions.","i":[[0,"compiler","dvm_services","gRPC service for compiler.",null,null],[3,"CompilerService","dvm_services::compiler","Compilation service.",null,null],[11,"new","","Create a new compiler service with the given compiler.",0,[[["compiler",3]]]],[0,"metadata","dvm_services","gRPC service for script signature parameters.",null,null],[3,"MetadataService","dvm_services::metadata","Metadata service. Provides a function to retrieve metadata…",null,null],[0,"vm","dvm_services","gRPC service for vm script execution.",null,null],[3,"VmService","dvm_services::vm","Virtual machine service.",null,null],[11,"new","","Creates a new virtual machine service with the given…",1,[[["heartratemonitor",3],["option",4],["dvm",3]],["vmservice",3]]],[11,"from","dvm_services::compiler","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_request","","",0,[[],["request",3]]],[11,"vzip","","",0,[[]]],[11,"from","dvm_services::metadata","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_request","","",2,[[],["request",3]]],[11,"vzip","","",2,[[]]],[11,"from","dvm_services::vm","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_request","","",1,[[],["request",3]]],[11,"vzip","","",1,[[]]],[11,"clone","dvm_services::compiler","",0,[[],["compilerservice",3]]],[11,"clone","dvm_services::metadata","",2,[[],["metadataservice",3]]],[11,"clone","dvm_services::vm","",1,[[],["vmservice",3]]],[11,"default","dvm_services::metadata","",2,[[],["metadataservice",3]]],[11,"publish_module","dvm_services::vm","",1,[[["request",3],["vmpublishmodule",3]],[["box",3],["pin",3]]]],[11,"execute_script","","",1,[[["request",3],["vmexecutescript",3]],[["box",3],["pin",3]]]],[11,"compile","dvm_services::compiler","Compile source code.",0,[[["request",3],["sourcefile",3]],[["pin",3],["box",3]]]],[11,"compile","","Compiler source codes.",0,[[["request",3],["sourcefiles",3]],[["pin",3],["box",3]]]],[11,"get_signature","dvm_services::metadata","Gets script signature.",2,[[["request",3],["vmscript",3]],[["box",3],["pin",3]]]]],"p":[[3,"CompilerService"],[3,"VmService"],[3,"MetadataService"]]},\
"dvm_test_kit":{"doc":"test-kit The `test-kit` crate provides functionality for…","i":[[3,"Server","dvm_test_kit","Grps VM service.",null,null],[3,"Signal","","Vm servcie signal handler.",null,null],[3,"TestKit","","DVM test kit;",null,null],[5,"genesis_write_set","","Returns genesis write set.",null,[[],["writeset",3]]],[5,"gas_meta","","Returns gas meta.",null,[[],["gas",3]]],[5,"account","","Create a new account address from hex string.",null,[[],["accountaddress",3]]],[11,"new","","Create a new VM service with the given data source.",0,[[["mockdatasource",3]],["server",3]]],[11,"port","","Returns the service port.",0,[[]]],[11,"new","","Create a new signal handler.",1,[[],["signal",3]]],[11,"ensure_run","","Returns true if the service is running, false otherwise.",1,[[]]],[11,"shutdown","","Send shutdown signal.",1,[[]]],[0,"test_suite","","Move test framework.",null,null],[5,"run_test_suite","dvm_test_kit::test_suite","Runs move test suite.",null,[[["hashmap",3],["string",3]]]],[0,"compiled_protos","dvm_test_kit","gRPC protocol API.",null,null],[0,"ds_grpc","dvm_test_kit::compiled_protos","",null,null],[3,"DsAccessPath","dvm_test_kit::compiled_protos::ds_grpc","",null,null],[12,"address","","AccountAddress",2,null],[12,"path","","",2,null],[3,"DsRawResponse","","",null,null],[12,"blob","","",3,null],[12,"error_code","","",3,null],[12,"error_message","","error message from libra, empty if ErrorCode::None",3,null],[0,"ds_raw_response","","",null,null],[4,"ErrorCode","dvm_test_kit::compiled_protos::ds_grpc::ds_raw_response","",null,null],[13,"None","","no error",4,null],[13,"BadRequest","","crash of compilation, logs will show stacktrace",4,null],[13,"NoData","","no such module",4,null],[3,"DsAccessPaths","dvm_test_kit::compiled_protos::ds_grpc","",null,null],[12,"paths","","",5,null],[3,"DsRawResponses","","",null,null],[12,"blobs","","",6,null],[0,"ds_service_client","","Generated client implementations.",null,null],[3,"DsServiceClient","dvm_test_kit::compiled_protos::ds_grpc::ds_service_client","GRPC service",null,null],[0,"ds_service_server","dvm_test_kit::compiled_protos::ds_grpc","Generated server implementations.",null,null],[8,"DsService","dvm_test_kit::compiled_protos::ds_grpc::ds_service_server","Generated trait containing gRPC methods that should be…",null,null],[10,"get_raw","","",7,[[["request",3],["dsaccesspath",3]],[["pin",3],["box",3]]]],[10,"multi_get_raw","","",7,[[["request",3],["dsaccesspaths",3]],[["pin",3],["box",3]]]],[3,"DsServiceServer","","GRPC service",null,null],[0,"vm_grpc","dvm_test_kit::compiled_protos","",null,null],[3,"AbortLocation","dvm_test_kit::compiled_protos::vm_grpc","An `AbortLocation` specifies where a Move program `abort`…",null,null],[12,"address","","Indicates `abort` occurred in the specified module.",8,null],[12,"module","","Indicates the `abort` occurred in a script.",8,null],[3,"FunctionLoc","","Function location.",null,null],[12,"function","","Function index.",9,null],[12,"code_offset","","Code offset.",9,null],[3,"MoveError","","VmStatus `Error` case.",null,null],[12,"status_code","","Status code.",10,null],[3,"Abort","","VmStatus `MoveAbort` case.",null,null],[12,"abort_location","","Abort location. (optional). Null if abort occurred in the…",11,null],[12,"abort_code","","Abort code.",11,null],[3,"Failure","","VmStatus `ExecutionFailure` case.",null,null],[12,"status_code","","Status code.",12,null],[12,"abort_location","","Abort location. (optional). Null if abort occurred in the…",12,null],[12,"function_loc","","Function location.",12,null],[3,"Message","","",null,null],[12,"text","","Message with error details if needed.",13,null],[3,"VmStatus","","A `VMStatus` is represented as either - `Null` indicating…",null,null],[12,"message","","Message with error details if needed (optional).",14,null],[12,"error","","",14,null],[0,"vm_status","","",null,null],[4,"Error","dvm_test_kit::compiled_protos::vm_grpc::vm_status","",null,null],[13,"MoveError","","Indicates an error from the VM, e.g. OUT_OF_GAS,…",15,null],[13,"Abort","","Indicates an error from the VM, e.g. OUT_OF_GAS,…",15,null],[13,"ExecutionFailure","","Indicates an failure from inside Move code, where the VM…",15,null],[3,"StructIdent","dvm_test_kit::compiled_protos::vm_grpc","",null,null],[12,"address","","address of module owner",16,null],[12,"module","","module name.",16,null],[12,"name","","name of structure.",16,null],[12,"type_params","","Structure type parameters.",16,null],[3,"LcsTag","","",null,null],[12,"type_tag","","type tag.",17,null],[12,"vector_type","","vector type. Has a non-null value if the type_tag is equal…",17,null],[12,"struct_ident","","struct identifier. Has a non-null value if the type_tag is…",17,null],[3,"ModuleIdent","","",null,null],[12,"address","","module address.",18,null],[12,"name","","module name.",18,null],[3,"VmEvent","","VM event returns after contract execution.",null,null],[12,"sender_address","","Event sender address.",19,null],[12,"sender_module","","sender module.",19,null],[12,"event_type","","Type of value inside event.",19,null],[12,"event_data","","Event data in bytes to parse.",19,null],[3,"VmAccessPath","","Storage path",null,null],[12,"address","","account address.",20,null],[12,"path","","storage path.",20,null],[3,"VmValue","","VM value should be passed before execution and return…",null,null],[12,"type","","Type of operation",21,null],[12,"value","","Value returns from vm.",21,null],[12,"path","","Access path.",21,null],[3,"VmArgs","","Contract arguments.",null,null],[12,"type","","Argument type.",22,null],[12,"value","","Argument value.",22,null],[3,"VmPublishModule","","Publish module.",null,null],[12,"sender","","owner of contract.",23,null],[12,"max_gas_amount","","maximal total gas specified by wallet to spend for this…",23,null],[12,"gas_unit_price","","maximal price can be paid per gas.",23,null],[12,"code","","compiled contract code.",23,null],[3,"VmExecuteScript","","VM contract object to process.",null,null],[12,"senders","","owners of contract.",24,null],[12,"max_gas_amount","","maximal total gas specified by wallet to spend for this…",24,null],[12,"gas_unit_price","","maximal price can be paid per gas.",24,null],[12,"code","","compiled contract code.",24,null],[12,"type_params","","type parameters.",24,null],[12,"args","","Contract arguments.",24,null],[3,"VmExecuteResponse","","Response from VM contains write_set, events, gas used and…",null,null],[12,"write_set","","using string instead of bytes for now, as map support only…",25,null],[12,"events","","list of events executed during contract execution",25,null],[12,"gas_used","","Gas used during execution.",25,null],[12,"status","","Main status of execution, might contain an error.",25,null],[3,"SourceFile","","Compiler API",null,null],[12,"text","","utf8 encoded source code with libra/bech32 addresses",26,null],[12,"address","","address of the sender, in bech32 form",26,null],[3,"CompilationUnit","","Compilation unit.",null,null],[12,"text","","utf8 encoded source code with libra/bech32 addresses",27,null],[12,"name","","name of the unit.",27,null],[3,"SourceFiles","","Compiler API",null,null],[12,"units","","Compilation units.",28,null],[12,"address","","address of the sender, in bech32 form",28,null],[3,"CompiledUnit","","Compiled source.",null,null],[12,"name","","name of the module/script.",29,null],[12,"bytecode","","bytecode of the compiled module/script",29,null],[3,"MultipleCompilationResult","","",null,null],[12,"units","","",30,null],[12,"errors","","list of error messages, empty if successful",30,null],[3,"CompilationResult","","",null,null],[12,"bytecode","","bytecode of the compiled module/script",31,null],[12,"errors","","list of error messages, empty if successful",31,null],[3,"VmScript","","Script Arguments API",null,null],[12,"code","","bytecode of script",32,null],[3,"Signature","","",null,null],[12,"arguments","","",33,null],[4,"VmTypeTag","","Type of contract argument.",null,null],[13,"Bool","","Bool 0x0 - false, 0x1 - true.",34,null],[13,"U64","","Uint64. Little-endian unsigned 64 bits integer.",34,null],[13,"Vector","","Vector of bytes.",34,null],[13,"Address","","Address, in bech32 form. 20 bytes.",34,null],[13,"U8","","U8",34,null],[13,"U128","","U128 Little-endian unsigned 128 bits integer.",34,null],[4,"LcsType","","",null,null],[13,"LcsBool","","Bool",35,null],[13,"LcsU64","","Uint64",35,null],[13,"LcsVector","","Vector of bytes.",35,null],[13,"LcsAddress","","Address, in bech32 form",35,null],[13,"LcsU8","","U8",35,null],[13,"LcsU128","","U128",35,null],[13,"LcsSigner","","Signer.",35,null],[13,"LcsStruct","","Struct.",35,null],[4,"VmWriteOp","","Write set operation type.",null,null],[13,"Value","","Insert or update value",36,null],[13,"Deletion","","Delete.",36,null],[0,"vm_module_publisher_client","","Generated client implementations.",null,null],[3,"VmModulePublisherClient","dvm_test_kit::compiled_protos::vm_grpc::vm_module_publisher_client","GRPC service",null,null],[0,"vm_script_executor_client","dvm_test_kit::compiled_protos::vm_grpc","Generated client implementations.",null,null],[3,"VmScriptExecutorClient","dvm_test_kit::compiled_protos::vm_grpc::vm_script_executor_client","",null,null],[0,"vm_compiler_client","dvm_test_kit::compiled_protos::vm_grpc","Generated client implementations.",null,null],[3,"VmCompilerClient","dvm_test_kit::compiled_protos::vm_grpc::vm_compiler_client","",null,null],[0,"vm_multiple_sources_compiler_client","dvm_test_kit::compiled_protos::vm_grpc","Generated client implementations.",null,null],[3,"VmMultipleSourcesCompilerClient","dvm_test_kit::compiled_protos::vm_grpc::vm_multiple_sources_compiler_client","",null,null],[0,"vm_script_metadata_client","dvm_test_kit::compiled_protos::vm_grpc","Generated client implementations.",null,null],[3,"VmScriptMetadataClient","dvm_test_kit::compiled_protos::vm_grpc::vm_script_metadata_client","Returns argument names/types for script.",null,null],[0,"vm_module_publisher_server","dvm_test_kit::compiled_protos::vm_grpc","Generated server implementations.",null,null],[8,"VmModulePublisher","dvm_test_kit::compiled_protos::vm_grpc::vm_module_publisher_server","Generated trait containing gRPC methods that should be…",null,null],[10,"publish_module","","",37,[[["vmpublishmodule",3],["request",3]],[["pin",3],["box",3]]]],[3,"VmModulePublisherServer","","GRPC service",null,null],[0,"vm_script_executor_server","dvm_test_kit::compiled_protos::vm_grpc","Generated server implementations.",null,null],[8,"VmScriptExecutor","dvm_test_kit::compiled_protos::vm_grpc::vm_script_executor_server","Generated trait containing gRPC methods that should be…",null,null],[10,"execute_script","","",38,[[["request",3],["vmexecutescript",3]],[["pin",3],["box",3]]]],[3,"VmScriptExecutorServer","","",null,null],[0,"vm_compiler_server","dvm_test_kit::compiled_protos::vm_grpc","Generated server implementations.",null,null],[8,"VmCompiler","dvm_test_kit::compiled_protos::vm_grpc::vm_compiler_server","Generated trait containing gRPC methods that should be…",null,null],[10,"compile","","",39,[[["request",3],["sourcefile",3]],[["box",3],["pin",3]]]],[3,"VmCompilerServer","","",null,null],[0,"vm_multiple_sources_compiler_server","dvm_test_kit::compiled_protos::vm_grpc","Generated server implementations.",null,null],[8,"VmMultipleSourcesCompiler","dvm_test_kit::compiled_protos::vm_grpc::vm_multiple_sources_compiler_server","Generated trait containing gRPC methods that should be…",null,null],[10,"compile","","",40,[[["request",3],["sourcefiles",3]],[["pin",3],["box",3]]]],[3,"VmMultipleSourcesCompilerServer","","",null,null],[0,"vm_script_metadata_server","dvm_test_kit::compiled_protos::vm_grpc","Generated server implementations.",null,null],[8,"VmScriptMetadata","dvm_test_kit::compiled_protos::vm_grpc::vm_script_metadata_server","Generated trait containing gRPC methods that should be…",null,null],[10,"get_signature","","",41,[[["vmscript",3],["request",3]],[["box",3],["pin",3]]]],[3,"VmScriptMetadataServer","","Returns argument names/types for script.",null,null],[6,"ArcMut","dvm_test_kit","Arc<Mutex<>> type alias.",null,null],[17,"PORT_RANGE","","gRPC server ports pool.",null,null],[11,"new","","Creates a new test kit with stdlib.",42,[[],["testkit",3]]],[11,"empty","","Creates a new test kit without stdlib.",42,[[]]],[11,"with_genesis","","Creates a new test kit with given write set.",42,[[["writeset",3]],["testkit",3]]],[11,"publish_module","","Publish module.",42,[[["gas",3],["accountaddress",3]],["vmexecuteresponse",3]]],[11,"publish_module_raw","","Publish module.",42,[[["vec",3]],["vmexecuteresponse",3]]],[11,"add_std_module","","Add std module to data source.",42,[[]]],[11,"compile","","Compiler source codes.",42,[[["option",4],["accountaddress",3]],[["result",6],["vec",3]]]],[11,"execute_script","","Execute script.",42,[[["structident",3],["vec",3],["vmargs",3],["accountaddress",3],["gas",3],["vec",3],["vec",3]],["vmexecuteresponse",3]]],[11,"assert_success","","Asserts that a response is success.",42,[[["vmexecuteresponse",3]]]],[11,"merge_result","","Merge execution result.",42,[[["vmexecuteresponse",3]]]],[11,"data_source","","Returns mock data source.",42,[[],["mockdatasource",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_request","","",0,[[],["request",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_future","","",1,[[]]],[11,"into_request","","",1,[[],["request",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"into_request","","",42,[[],["request",3]]],[11,"vzip","","",42,[[]]],[11,"from","dvm_test_kit::compiled_protos::ds_grpc","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_request","","",2,[[],["request",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_request","","",3,[[],["request",3]]],[11,"vzip","","",3,[[]]],[11,"from","dvm_test_kit::compiled_protos::ds_grpc::ds_raw_response","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_request","","",4,[[],["request",3]]],[11,"equivalent","","",4,[[]]],[11,"vzip","","",4,[[]]],[11,"from","dvm_test_kit::compiled_protos::ds_grpc","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"into_request","","",5,[[],["request",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_request","","",6,[[],["request",3]]],[11,"vzip","","",6,[[]]],[11,"from","dvm_test_kit::compiled_protos::ds_grpc::ds_service_client","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"into_request","","",43,[[],["request",3]]],[11,"vzip","","",43,[[]]],[11,"from","dvm_test_kit::compiled_protos::ds_grpc::ds_service_server","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"poll_ready","","",44,[[["context",3]],[["poll",4],["result",4]]]],[11,"call","","",44,[[["request",3]]]],[11,"into_request","","",44,[[],["request",3]]],[11,"vzip","","",44,[[]]],[11,"from","dvm_test_kit::compiled_protos::vm_grpc","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_request","","",8,[[],["request",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"into_request","","",9,[[],["request",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"into_request","","",10,[[],["request",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"into_request","","",11,[[],["request",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"into_request","","",12,[[],["request",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"into_request","","",13,[[],["request",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"into_request","","",14,[[],["request",3]]],[11,"vzip","","",14,[[]]],[11,"from","dvm_test_kit::compiled_protos::vm_grpc::vm_status","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"into_request","","",15,[[],["request",3]]],[11,"vzip","","",15,[[]]],[11,"from","dvm_test_kit::compiled_protos::vm_grpc","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"into_request","","",16,[[],["request",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"into_request","","",17,[[],["request",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"into_request","","",18,[[],["request",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"into_request","","",19,[[],["request",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"into_request","","",20,[[],["request",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"into_request","","",21,[[],["request",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"into_request","","",22,[[],["request",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"into_request","","",23,[[],["request",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"into_request","","",24,[[],["request",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"into_request","","",25,[[],["request",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"into_request","","",26,[[],["request",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"into_request","","",27,[[],["request",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"into_request","","",28,[[],["request",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"into_request","","",29,[[],["request",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"into_request","","",30,[[],["request",3]]],[11,"vzip","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"into_request","","",31,[[],["request",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"into_request","","",32,[[],["request",3]]],[11,"vzip","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"into_request","","",33,[[],["request",3]]],[11,"vzip","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"into_request","","",34,[[],["request",3]]],[11,"equivalent","","",34,[[]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"into_request","","",35,[[],["request",3]]],[11,"equivalent","","",35,[[]]],[11,"vzip","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"into_request","","",36,[[],["request",3]]],[11,"equivalent","","",36,[[]]],[11,"vzip","","",36,[[]]],[11,"from","dvm_test_kit::compiled_protos::vm_grpc::vm_module_publisher_client","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"into_request","","",45,[[],["request",3]]],[11,"vzip","","",45,[[]]],[11,"from","dvm_test_kit::compiled_protos::vm_grpc::vm_script_executor_client","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"into_request","","",46,[[],["request",3]]],[11,"vzip","","",46,[[]]],[11,"from","dvm_test_kit::compiled_protos::vm_grpc::vm_compiler_client","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"into_request","","",47,[[],["request",3]]],[11,"vzip","","",47,[[]]],[11,"from","dvm_test_kit::compiled_protos::vm_grpc::vm_multiple_sources_compiler_client","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"into_request","","",48,[[],["request",3]]],[11,"vzip","","",48,[[]]],[11,"from","dvm_test_kit::compiled_protos::vm_grpc::vm_script_metadata_client","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"into_request","","",49,[[],["request",3]]],[11,"vzip","","",49,[[]]],[11,"from","dvm_test_kit::compiled_protos::vm_grpc::vm_module_publisher_server","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"poll_ready","","",50,[[["context",3]],[["poll",4],["result",4]]]],[11,"call","","",50,[[["request",3]]]],[11,"into_request","","",50,[[],["request",3]]],[11,"vzip","","",50,[[]]],[11,"from","dvm_test_kit::compiled_protos::vm_grpc::vm_script_executor_server","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"poll_ready","","",51,[[["context",3]],[["poll",4],["result",4]]]],[11,"call","","",51,[[["request",3]]]],[11,"into_request","","",51,[[],["request",3]]],[11,"vzip","","",51,[[]]],[11,"from","dvm_test_kit::compiled_protos::vm_grpc::vm_compiler_server","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"poll_ready","","",52,[[["context",3]],[["poll",4],["result",4]]]],[11,"call","","",52,[[["request",3]]]],[11,"into_request","","",52,[[],["request",3]]],[11,"vzip","","",52,[[]]],[11,"from","dvm_test_kit::compiled_protos::vm_grpc::vm_multiple_sources_compiler_server","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"poll_ready","","",53,[[["context",3]],[["poll",4],["result",4]]]],[11,"call","","",53,[[["request",3]]]],[11,"into_request","","",53,[[],["request",3]]],[11,"vzip","","",53,[[]]],[11,"from","dvm_test_kit::compiled_protos::vm_grpc::vm_script_metadata_server","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"poll_ready","","",54,[[["context",3]],[["poll",4],["result",4]]]],[11,"call","","",54,[[["request",3]]]],[11,"into_request","","",54,[[],["request",3]]],[11,"vzip","","",54,[[]]],[11,"eq","dvm_test_kit::compiled_protos::ds_grpc::ds_raw_response","",4,[[["errorcode",4]]]],[11,"eq","dvm_test_kit::compiled_protos::vm_grpc","",22,[[["vmargs",3]]]],[11,"ne","","",22,[[["vmargs",3]]]],[11,"eq","","",30,[[["multiplecompilationresult",3]]]],[11,"ne","","",30,[[["multiplecompilationresult",3]]]],[11,"eq","","",21,[[["vmvalue",3]]]],[11,"ne","","",21,[[["vmvalue",3]]]],[11,"eq","","",25,[[["vmexecuteresponse",3]]]],[11,"ne","","",25,[[["vmexecuteresponse",3]]]],[11,"eq","","",32,[[["vmscript",3]]]],[11,"ne","","",32,[[["vmscript",3]]]],[11,"eq","dvm_test_kit::compiled_protos::ds_grpc","",2,[[["dsaccesspath",3]]]],[11,"ne","","",2,[[["dsaccesspath",3]]]],[11,"eq","dvm_test_kit::compiled_protos::vm_grpc","",19,[[["vmevent",3]]]],[11,"ne","","",19,[[["vmevent",3]]]],[11,"eq","","",18,[[["moduleident",3]]]],[11,"ne","","",18,[[["moduleident",3]]]],[11,"eq","dvm_test_kit::compiled_protos::ds_grpc","",3,[[["dsrawresponse",3]]]],[11,"ne","","",3,[[["dsrawresponse",3]]]],[11,"eq","dvm_test_kit::compiled_protos::vm_grpc::vm_status","",15,[[["error",4]]]],[11,"ne","","",15,[[["error",4]]]],[11,"eq","dvm_test_kit::compiled_protos::vm_grpc","",34,[[["vmtypetag",4]]]],[11,"eq","","",13,[[["message",3]]]],[11,"ne","","",13,[[["message",3]]]],[11,"eq","","",20,[[["vmaccesspath",3]]]],[11,"ne","","",20,[[["vmaccesspath",3]]]],[11,"eq","dvm_test_kit::compiled_protos::ds_grpc","",6,[[["dsrawresponses",3]]]],[11,"ne","","",6,[[["dsrawresponses",3]]]],[11,"eq","dvm_test_kit::compiled_protos::vm_grpc","",35,[[["lcstype",4]]]],[11,"eq","","",28,[[["sourcefiles",3]]]],[11,"ne","","",28,[[["sourcefiles",3]]]],[11,"eq","","",17,[[["lcstag",3]]]],[11,"ne","","",17,[[["lcstag",3]]]],[11,"eq","","",23,[[["vmpublishmodule",3]]]],[11,"ne","","",23,[[["vmpublishmodule",3]]]],[11,"eq","","",10,[[["moveerror",3]]]],[11,"ne","","",10,[[["moveerror",3]]]],[11,"eq","","",31,[[["compilationresult",3]]]],[11,"ne","","",31,[[["compilationresult",3]]]],[11,"eq","","",8,[[["abortlocation",3]]]],[11,"ne","","",8,[[["abortlocation",3]]]],[11,"eq","","",29,[[["compiledunit",3]]]],[11,"ne","","",29,[[["compiledunit",3]]]],[11,"eq","","",11,[[["abort",3]]]],[11,"ne","","",11,[[["abort",3]]]],[11,"eq","","",16,[[["structident",3]]]],[11,"ne","","",16,[[["structident",3]]]],[11,"eq","dvm_test_kit::compiled_protos::ds_grpc","",5,[[["dsaccesspaths",3]]]],[11,"ne","","",5,[[["dsaccesspaths",3]]]],[11,"eq","dvm_test_kit::compiled_protos::vm_grpc","",24,[[["vmexecutescript",3]]]],[11,"ne","","",24,[[["vmexecutescript",3]]]],[11,"eq","","",26,[[["sourcefile",3]]]],[11,"ne","","",26,[[["sourcefile",3]]]],[11,"eq","","",36,[[["vmwriteop",4]]]],[11,"eq","","",33,[[["signature",3]]]],[11,"ne","","",33,[[["signature",3]]]],[11,"eq","","",27,[[["compilationunit",3]]]],[11,"ne","","",27,[[["compilationunit",3]]]],[11,"eq","","",14,[[["vmstatus",3]]]],[11,"ne","","",14,[[["vmstatus",3]]]],[11,"eq","","",12,[[["failure",3]]]],[11,"ne","","",12,[[["failure",3]]]],[11,"eq","","",9,[[["functionloc",3]]]],[11,"ne","","",9,[[["functionloc",3]]]],[11,"encode_raw","","",23,[[]]],[11,"merge_field","","",23,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",23,[[]]],[11,"clear","","",23,[[]]],[11,"encode_raw","","",17,[[]]],[11,"merge_field","","",17,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",17,[[]]],[11,"clear","","",17,[[]]],[11,"encode_raw","","",13,[[]]],[11,"merge_field","","",13,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",13,[[]]],[11,"clear","","",13,[[]]],[11,"encode_raw","","",33,[[]]],[11,"merge_field","","",33,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",33,[[]]],[11,"clear","","",33,[[]]],[11,"encode_raw","","",9,[[]]],[11,"merge_field","","",9,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",9,[[]]],[11,"clear","","",9,[[]]],[11,"encode_raw","","",28,[[]]],[11,"merge_field","","",28,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",28,[[]]],[11,"clear","","",28,[[]]],[11,"encode_raw","","",14,[[]]],[11,"merge_field","","",14,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",14,[[]]],[11,"clear","","",14,[[]]],[11,"encode_raw","","",20,[[]]],[11,"merge_field","","",20,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",20,[[]]],[11,"clear","","",20,[[]]],[11,"encode_raw","","",24,[[]]],[11,"merge_field","","",24,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",24,[[]]],[11,"clear","","",24,[[]]],[11,"encode_raw","","",18,[[]]],[11,"merge_field","","",18,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",18,[[]]],[11,"clear","","",18,[[]]],[11,"encode_raw","","",30,[[]]],[11,"merge_field","","",30,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",30,[[]]],[11,"clear","","",30,[[]]],[11,"encode_raw","","",10,[[]]],[11,"merge_field","","",10,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",10,[[]]],[11,"clear","","",10,[[]]],[11,"encode_raw","","",19,[[]]],[11,"merge_field","","",19,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",19,[[]]],[11,"clear","","",19,[[]]],[11,"encode_raw","","",12,[[]]],[11,"merge_field","","",12,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",12,[[]]],[11,"clear","","",12,[[]]],[11,"encode_raw","","",22,[[]]],[11,"merge_field","","",22,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",22,[[]]],[11,"clear","","",22,[[]]],[11,"encode_raw","","",11,[[]]],[11,"merge_field","","",11,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",11,[[]]],[11,"clear","","",11,[[]]],[11,"encode_raw","","",21,[[]]],[11,"merge_field","","",21,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",21,[[]]],[11,"clear","","",21,[[]]],[11,"encode_raw","","",31,[[]]],[11,"merge_field","","",31,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",31,[[]]],[11,"clear","","",31,[[]]],[11,"encode_raw","","",16,[[]]],[11,"merge_field","","",16,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",16,[[]]],[11,"clear","","",16,[[]]],[11,"encode_raw","","",25,[[]]],[11,"merge_field","","",25,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",25,[[]]],[11,"clear","","",25,[[]]],[11,"encode_raw","","",8,[[]]],[11,"merge_field","","",8,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",8,[[]]],[11,"clear","","",8,[[]]],[11,"encode_raw","","",26,[[]]],[11,"merge_field","","",26,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",26,[[]]],[11,"clear","","",26,[[]]],[11,"encode_raw","dvm_test_kit::compiled_protos::ds_grpc","",2,[[]]],[11,"merge_field","","",2,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",2,[[]]],[11,"clear","","",2,[[]]],[11,"encode_raw","","",5,[[]]],[11,"merge_field","","",5,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",5,[[]]],[11,"clear","","",5,[[]]],[11,"encode_raw","dvm_test_kit::compiled_protos::vm_grpc","",29,[[]]],[11,"merge_field","","",29,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",29,[[]]],[11,"clear","","",29,[[]]],[11,"encode_raw","","",27,[[]]],[11,"merge_field","","",27,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",27,[[]]],[11,"clear","","",27,[[]]],[11,"encode_raw","","",32,[[]]],[11,"merge_field","","",32,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",32,[[]]],[11,"clear","","",32,[[]]],[11,"encode_raw","dvm_test_kit::compiled_protos::ds_grpc","",3,[[]]],[11,"merge_field","","",3,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",3,[[]]],[11,"clear","","",3,[[]]],[11,"encode_raw","","",6,[[]]],[11,"merge_field","","",6,[[["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",6,[[]]],[11,"clear","","",6,[[]]],[11,"clone","dvm_test_kit::compiled_protos::ds_grpc::ds_service_server","",44,[[],["dsserviceserver",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc","",19,[[],["vmevent",3]]],[11,"clone","","",28,[[],["sourcefiles",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc::vm_script_executor_server","",51,[[],["vmscriptexecutorserver",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc","",20,[[],["vmaccesspath",3]]],[11,"clone","","",18,[[],["moduleident",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc::vm_script_executor_client","",46,[[],["vmscriptexecutorclient",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc::vm_module_publisher_client","",45,[[],["vmmodulepublisherclient",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc::vm_multiple_sources_compiler_server","",53,[[],["vmmultiplesourcescompilerserver",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc::vm_compiler_client","",47,[[],["vmcompilerclient",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc","",32,[[],["vmscript",3]]],[11,"clone","dvm_test_kit::compiled_protos::ds_grpc::ds_raw_response","",4,[[],["errorcode",4]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc","",24,[[],["vmexecutescript",3]]],[11,"clone","","",27,[[],["compilationunit",3]]],[11,"clone","","",8,[[],["abortlocation",3]]],[11,"clone","","",26,[[],["sourcefile",3]]],[11,"clone","","",21,[[],["vmvalue",3]]],[11,"clone","","",9,[[],["functionloc",3]]],[11,"clone","","",29,[[],["compiledunit",3]]],[11,"clone","dvm_test_kit::compiled_protos::ds_grpc::ds_service_client","",43,[[],["dsserviceclient",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc","",36,[[],["vmwriteop",4]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc::vm_script_metadata_client","",49,[[],["vmscriptmetadataclient",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc","",22,[[],["vmargs",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc::vm_multiple_sources_compiler_client","",48,[[],["vmmultiplesourcescompilerclient",3]]],[11,"clone","dvm_test_kit::compiled_protos::ds_grpc","",5,[[],["dsaccesspaths",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc","",23,[[],["vmpublishmodule",3]]],[11,"clone","","",31,[[],["compilationresult",3]]],[11,"clone","dvm_test_kit::compiled_protos::ds_grpc","",2,[[],["dsaccesspath",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc","",16,[[],["structident",3]]],[11,"clone","","",30,[[],["multiplecompilationresult",3]]],[11,"clone","dvm_test_kit::compiled_protos::ds_grpc","",3,[[],["dsrawresponse",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc","",33,[[],["signature",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc::vm_module_publisher_server","",50,[[],["vmmodulepublisherserver",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc","",13,[[],["message",3]]],[11,"clone","","",10,[[],["moveerror",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc::vm_status","",15,[[],["error",4]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc::vm_compiler_server","",52,[[],["vmcompilerserver",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc::vm_script_metadata_server","",54,[[],["vmscriptmetadataserver",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc","",17,[[],["lcstag",3]]],[11,"clone","","",35,[[],["lcstype",4]]],[11,"clone","dvm_test_kit::compiled_protos::ds_grpc","",6,[[],["dsrawresponses",3]]],[11,"clone","dvm_test_kit::compiled_protos::vm_grpc","",14,[[],["vmstatus",3]]],[11,"clone","","",12,[[],["failure",3]]],[11,"clone","","",34,[[],["vmtypetag",4]]],[11,"clone","","",11,[[],["abort",3]]],[11,"clone","","",25,[[],["vmexecuteresponse",3]]],[11,"fmt","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",32,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::ds_grpc::ds_service_server","",44,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc","",27,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc::vm_module_publisher_server","",50,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc","",25,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::ds_grpc","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc::vm_multiple_sources_compiler_client","",48,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc::vm_script_metadata_server","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc","",28,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc::vm_compiler_client","",47,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc","",36,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::ds_grpc::ds_raw_response","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc","",29,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",23,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::ds_grpc","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc::vm_script_executor_server","",51,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc","",33,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc::vm_status","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",22,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc::vm_multiple_sources_compiler_server","",53,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc::vm_compiler_server","",52,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc","",30,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::ds_grpc::ds_service_client","",43,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::ds_grpc","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc","",12,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",35,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc::vm_script_executor_client","",46,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc","",31,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc::vm_script_metadata_client","",49,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc","",34,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc::vm_module_publisher_client","",45,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::vm_grpc","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dvm_test_kit::compiled_protos::ds_grpc","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"default","dvm_test_kit::compiled_protos::ds_grpc::ds_raw_response","",4,[[],["errorcode",4]]],[11,"default","dvm_test_kit::compiled_protos::vm_grpc","",12,[[],["failure",3]]],[11,"default","","",9,[[],["functionloc",3]]],[11,"default","dvm_test_kit::compiled_protos::ds_grpc","",6,[[],["dsrawresponses",3]]],[11,"default","dvm_test_kit::compiled_protos::vm_grpc","",14,[[],["vmstatus",3]]],[11,"default","","",17,[[],["lcstag",3]]],[11,"default","","",30,[[],["multiplecompilationresult",3]]],[11,"default","","",25,[[],["vmexecuteresponse",3]]],[11,"default","","",13,[[],["message",3]]],[11,"default","dvm_test_kit::compiled_protos::ds_grpc","",5,[[],["dsaccesspaths",3]]],[11,"default","dvm_test_kit::compiled_protos::vm_grpc","",36,[[],["vmwriteop",4]]],[11,"default","dvm_test_kit::compiled_protos::ds_grpc","",2,[[],["dsaccesspath",3]]],[11,"default","dvm_test_kit::compiled_protos::vm_grpc","",35,[[],["lcstype",4]]],[11,"default","","",22,[[],["vmargs",3]]],[11,"default","","",27,[[],["compilationunit",3]]],[11,"default","","",32,[[],["vmscript",3]]],[11,"default","","",29,[[],["compiledunit",3]]],[11,"default","","",24,[[],["vmexecutescript",3]]],[11,"default","","",16,[[],["structident",3]]],[11,"default","","",23,[[],["vmpublishmodule",3]]],[11,"default","","",11,[[],["abort",3]]],[11,"default","","",10,[[],["moveerror",3]]],[11,"default","","",19,[[],["vmevent",3]]],[11,"default","","",20,[[],["vmaccesspath",3]]],[11,"default","","",28,[[],["sourcefiles",3]]],[11,"default","","",8,[[],["abortlocation",3]]],[11,"default","","",21,[[],["vmvalue",3]]],[11,"default","","",31,[[],["compilationresult",3]]],[11,"default","","",26,[[],["sourcefile",3]]],[11,"default","","",34,[[],["vmtypetag",4]]],[11,"default","dvm_test_kit::compiled_protos::ds_grpc","",3,[[],["dsrawresponse",3]]],[11,"default","dvm_test_kit::compiled_protos::vm_grpc","",33,[[],["signature",3]]],[11,"default","","",18,[[],["moduleident",3]]],[11,"hash","","",34,[[]]],[11,"hash","dvm_test_kit::compiled_protos::ds_grpc::ds_raw_response","",4,[[]]],[11,"hash","dvm_test_kit::compiled_protos::vm_grpc","",35,[[]]],[11,"hash","","",36,[[]]],[11,"partial_cmp","","",34,[[["vmtypetag",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",35,[[["lcstype",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","dvm_test_kit::compiled_protos::ds_grpc::ds_raw_response","",4,[[["errorcode",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","dvm_test_kit::compiled_protos::vm_grpc","",36,[[["vmwriteop",4]],[["ordering",4],["option",4]]]],[11,"cmp","","",36,[[["vmwriteop",4]],["ordering",4]]],[11,"cmp","","",34,[[["vmtypetag",4]],["ordering",4]]],[11,"cmp","","",35,[[["lcstype",4]],["ordering",4]]],[11,"cmp","dvm_test_kit::compiled_protos::ds_grpc::ds_raw_response","",4,[[["errorcode",4]],["ordering",4]]],[11,"poll_ready","dvm_test_kit::compiled_protos::vm_grpc::vm_compiler_server","",52,[[["context",3]],[["poll",4],["result",4]]]],[11,"call","","",52,[[["request",3]]]],[11,"poll_ready","dvm_test_kit::compiled_protos::vm_grpc::vm_script_metadata_server","",54,[[["context",3]],[["result",4],["poll",4]]]],[11,"call","","",54,[[["request",3]]]],[11,"poll_ready","dvm_test_kit::compiled_protos::vm_grpc::vm_multiple_sources_compiler_server","",53,[[["context",3]],[["result",4],["poll",4]]]],[11,"call","","",53,[[["request",3]]]],[11,"poll_ready","dvm_test_kit::compiled_protos::ds_grpc::ds_service_server","",44,[[["context",3]],[["result",4],["poll",4]]]],[11,"call","","",44,[[["request",3]]]],[11,"poll_ready","dvm_test_kit::compiled_protos::vm_grpc::vm_script_executor_server","",51,[[["context",3]],[["result",4],["poll",4]]]],[11,"call","","",51,[[["request",3]]]],[11,"poll_ready","dvm_test_kit::compiled_protos::vm_grpc::vm_module_publisher_server","",50,[[["context",3]],[["result",4],["poll",4]]]],[11,"call","","",50,[[["request",3]]]],[11,"drop","dvm_test_kit","",0,[[]]],[11,"clone","","",1,[[],["signal",3]]],[11,"default","","",1,[[]]],[11,"default","","",42,[[]]],[11,"poll","","",1,[[["context",3],["pin",3]],["poll",4]]],[11,"new","dvm_test_kit::compiled_protos::ds_grpc","",2,[[["vec",3]],["dsaccesspath",3]]],[11,"with_blob","","",3,[[],["dsrawresponse",3]]],[11,"with_error","","",3,[[["errorcode",4],["string",3]],["dsrawresponse",3]]],[11,"error_code","","Returns the enum value of `error_code`, or the default if…",3,[[],["errorcode",4]]],[11,"set_error_code","","Sets `error_code` to the provided enum value.",3,[[["errorcode",4]]]],[11,"is_valid","dvm_test_kit::compiled_protos::ds_grpc::ds_raw_response","Returns `true` if `value` is a variant of `ErrorCode`.",4,[[]]],[11,"from_i32","","Converts an `i32` to a `ErrorCode`, or `None` if `value`…",4,[[],[["option",4],["errorcode",4]]]],[11,"connect","dvm_test_kit::compiled_protos::ds_grpc::ds_service_client","Attempt to create a new client by connecting to a given…",43,[[]]],[11,"new","","",43,[[],["dsserviceclient",3]]],[11,"with_interceptor","","",43,[[],["dsserviceclient",3]]],[11,"get_raw","","",43,[[]]],[11,"multi_get_raw","","",43,[[]]],[11,"new","dvm_test_kit::compiled_protos::ds_grpc::ds_service_server","",44,[[],["dsserviceserver",3]]],[11,"with_interceptor","","",44,[[],["dsserviceserver",3]]],[11,"encode","dvm_test_kit::compiled_protos::vm_grpc::vm_status","",15,[[]]],[11,"merge","","",15,[[["option",4],["wiretype",4],["decodecontext",3]],[["result",4],["decodeerror",3]]]],[11,"encoded_len","","",15,[[]]],[11,"type_tag","dvm_test_kit::compiled_protos::vm_grpc","Returns the enum value of `type_tag`, or the default if…",17,[[],["lcstype",4]]],[11,"set_type_tag","","Sets `type_tag` to the provided enum value.",17,[[["lcstype",4]]]],[11,"type","","Returns the enum value of `type`, or the default if the…",21,[[],["vmwriteop",4]]],[11,"set_type","","Sets `type` to the provided enum value.",21,[[["vmwriteop",4]]]],[11,"type","","Returns the enum value of `type`, or the default if the…",22,[[],["vmtypetag",4]]],[11,"set_type","","Sets `type` to the provided enum value.",22,[[["vmtypetag",4]]]],[11,"with_bytecode","","",31,[[["vec",3]],["compilationresult",3]]],[11,"with_errors","","",31,[[["vec",3],["string",3]],["compilationresult",3]]],[11,"new","","",32,[[["vec",3]],["vmscript",3]]],[11,"new","","",33,[[],["signature",3]]],[11,"arguments","","Returns an iterator which yields the valid enum values…",33,[[],[["filtermap",3],["cloned",3]]]],[11,"push_arguments","","Appends the provided enum value to `arguments`.",33,[[["vmtypetag",4]]]],[11,"is_valid","","Returns `true` if `value` is a variant of `VmTypeTag`.",34,[[]]],[11,"from_i32","","Converts an `i32` to a `VmTypeTag`, or `None` if `value`…",34,[[],[["option",4],["vmtypetag",4]]]],[11,"is_valid","","Returns `true` if `value` is a variant of `LcsType`.",35,[[]]],[11,"from_i32","","Converts an `i32` to a `LcsType`, or `None` if `value` is…",35,[[],[["option",4],["lcstype",4]]]],[11,"is_valid","","Returns `true` if `value` is a variant of `VmWriteOp`.",36,[[]]],[11,"from_i32","","Converts an `i32` to a `VmWriteOp`, or `None` if `value`…",36,[[],[["option",4],["vmwriteop",4]]]],[11,"connect","dvm_test_kit::compiled_protos::vm_grpc::vm_module_publisher_client","Attempt to create a new client by connecting to a given…",45,[[]]],[11,"new","","",45,[[],["vmmodulepublisherclient",3]]],[11,"with_interceptor","","",45,[[],["vmmodulepublisherclient",3]]],[11,"publish_module","","",45,[[]]],[11,"connect","dvm_test_kit::compiled_protos::vm_grpc::vm_script_executor_client","Attempt to create a new client by connecting to a given…",46,[[]]],[11,"new","","",46,[[],["vmscriptexecutorclient",3]]],[11,"with_interceptor","","",46,[[],["vmscriptexecutorclient",3]]],[11,"execute_script","","",46,[[]]],[11,"connect","dvm_test_kit::compiled_protos::vm_grpc::vm_compiler_client","Attempt to create a new client by connecting to a given…",47,[[]]],[11,"new","","",47,[[],["vmcompilerclient",3]]],[11,"with_interceptor","","",47,[[],["vmcompilerclient",3]]],[11,"compile","","",47,[[]]],[11,"connect","dvm_test_kit::compiled_protos::vm_grpc::vm_multiple_sources_compiler_client","Attempt to create a new client by connecting to a given…",48,[[]]],[11,"new","","",48,[[],["vmmultiplesourcescompilerclient",3]]],[11,"with_interceptor","","",48,[[],["vmmultiplesourcescompilerclient",3]]],[11,"compile","","",48,[[]]],[11,"connect","dvm_test_kit::compiled_protos::vm_grpc::vm_script_metadata_client","Attempt to create a new client by connecting to a given…",49,[[]]],[11,"new","","",49,[[],["vmscriptmetadataclient",3]]],[11,"with_interceptor","","",49,[[],["vmscriptmetadataclient",3]]],[11,"get_signature","","",49,[[]]],[11,"new","dvm_test_kit::compiled_protos::vm_grpc::vm_module_publisher_server","",50,[[],["vmmodulepublisherserver",3]]],[11,"with_interceptor","","",50,[[],["vmmodulepublisherserver",3]]],[11,"new","dvm_test_kit::compiled_protos::vm_grpc::vm_script_executor_server","",51,[[],["vmscriptexecutorserver",3]]],[11,"with_interceptor","","",51,[[],["vmscriptexecutorserver",3]]],[11,"new","dvm_test_kit::compiled_protos::vm_grpc::vm_compiler_server","",52,[[],["vmcompilerserver",3]]],[11,"with_interceptor","","",52,[[],["vmcompilerserver",3]]],[11,"new","dvm_test_kit::compiled_protos::vm_grpc::vm_multiple_sources_compiler_server","",53,[[],["vmmultiplesourcescompilerserver",3]]],[11,"with_interceptor","","",53,[[],["vmmultiplesourcescompilerserver",3]]],[11,"new","dvm_test_kit::compiled_protos::vm_grpc::vm_script_metadata_server","",54,[[],["vmscriptmetadataserver",3]]],[11,"with_interceptor","","",54,[[],["vmscriptmetadataserver",3]]]],"p":[[3,"Server"],[3,"Signal"],[3,"DsAccessPath"],[3,"DsRawResponse"],[4,"ErrorCode"],[3,"DsAccessPaths"],[3,"DsRawResponses"],[8,"DsService"],[3,"AbortLocation"],[3,"FunctionLoc"],[3,"MoveError"],[3,"Abort"],[3,"Failure"],[3,"Message"],[3,"VmStatus"],[4,"Error"],[3,"StructIdent"],[3,"LcsTag"],[3,"ModuleIdent"],[3,"VmEvent"],[3,"VmAccessPath"],[3,"VmValue"],[3,"VmArgs"],[3,"VmPublishModule"],[3,"VmExecuteScript"],[3,"VmExecuteResponse"],[3,"SourceFile"],[3,"CompilationUnit"],[3,"SourceFiles"],[3,"CompiledUnit"],[3,"MultipleCompilationResult"],[3,"CompilationResult"],[3,"VmScript"],[3,"Signature"],[4,"VmTypeTag"],[4,"LcsType"],[4,"VmWriteOp"],[8,"VmModulePublisher"],[8,"VmScriptExecutor"],[8,"VmCompiler"],[8,"VmMultipleSourcesCompiler"],[8,"VmScriptMetadata"],[3,"TestKit"],[3,"DsServiceClient"],[3,"DsServiceServer"],[3,"VmModulePublisherClient"],[3,"VmScriptExecutorClient"],[3,"VmCompilerClient"],[3,"VmMultipleSourcesCompilerClient"],[3,"VmScriptMetadataClient"],[3,"VmModulePublisherServer"],[3,"VmScriptExecutorServer"],[3,"VmCompilerServer"],[3,"VmMultipleSourcesCompilerServer"],[3,"VmScriptMetadataServer"]]},\
"move_decompiler":{"doc":"","i":[[3,"Opt","move_decompiler","",null,null],[12,"input","","Path to compiled Move binary",0,null],[12,"output","","Optional path to output file. Prints results to stdout by…",0,null],[5,"main","","",null,[[]]],[5,"run","","",null,[[],[["result",4],["error",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"into_app","","",0,[[],["app",3]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"from_arg_matches","","",0,[[["argmatches",3]]]]],"p":[[3,"Opt"]]},\
"movec":{"doc":"","i":[[4,"Opt","movec","",null,null],[13,"Init","","",0,null],[12,"project_name","movec::Opt","Project name.",1,null],[12,"repository","","Basic uri to blockchain api.",1,null],[12,"address","","Account address.",1,null],[13,"New","movec","",0,null],[12,"project_name","movec::Opt","Project name.",2,null],[12,"repository","","Basic uri to blockchain api.",2,null],[12,"address","","Account address.",2,null],[13,"Update","movec","",0,null],[13,"Build","","",0,null],[13,"Check","","",0,null],[5,"main","","",null,[[]]],[5,"handle_error","","",null,[[["result",4],["error",3]]]],[5,"load_manifest","","",null,[[["path",3]],["movetoml",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"into_app","","",0,[[],["app",3]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"from_arg_matches","","",0,[[["argmatches",3]]]],[11,"augment_subcommands","","",0,[[["app",3]],["app",3]]],[11,"from_subcommand","","",0,[[["option",4]],["option",4]]]],"p":[[4,"Opt"],[13,"Init"],[13,"New"]]},\
"status_table":{"doc":"","i":[[3,"Opts","status_table","Status table generator.",null,null],[12,"output","","Optional path to the output file. If not passed, result…",0,null],[5,"main","","",null,[[]]],[5,"status_table_json","","",null,[[],[["result",6],["string",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"into_request","","",0,[[],["request",3]]],[11,"into_app","","",0,[[],["app",3]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"from_arg_matches","","",0,[[["argmatches",3]]]]],"p":[[3,"Opts"]]},\
"stdlib":{"doc":"","i":[[3,"Stdlib","stdlib","",null,null],[12,"modules","","",0,null],[3,"Value","","",null,null],[3,"WS","","",null,null],[5,"build_external_std","","",null,[[["stdlib",3]],[["writeset",3],["error",3],["result",4]]]],[5,"build_std","","",null,[[],["writeset",3]]],[5,"zero_std","","",null,[[],["writeset",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"into_request","","",0,[[],["request",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"test_only_hash","","",1,[[],["hashvalue",3]]],[11,"vzip","","",1,[[]]],[11,"equivalent","","",1,[[]]],[11,"erased_serialize","","",1,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"into_request","","",1,[[],["request",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"test_only_hash","","",2,[[],["hashvalue",3]]],[11,"vzip","","",2,[[]]],[11,"erased_serialize","","",2,[[["serializer",8]],[["error",3],["result",4],["ok",3]]]],[11,"into_request","","",2,[[],["request",3]]],[11,"from","","",2,[[["writeset",3]]]],[11,"clone","","",0,[[],["stdlib",3]]],[11,"default","","",0,[[]]],[11,"cmp","","",1,[[["value",3]],["ordering",4]]],[11,"eq","","",1,[[["value",3]]]],[11,"ne","","",1,[[["value",3]]]],[11,"partial_cmp","","",1,[[["value",3]],[["option",4],["ordering",4]]]],[11,"lt","","",1,[[["value",3]]]],[11,"le","","",1,[[["value",3]]]],[11,"gt","","",1,[[["value",3]]]],[11,"ge","","",1,[[["value",3]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"hash","","",1,[[]]],[11,"serialize","","",1,[[],["result",4]]],[11,"serialize","","",2,[[],["result",4]]]],"p":[[3,"Stdlib"],[3,"Value"],[3,"WS"]]},\
"stdlib_builder":{"doc":"","i":[[3,"Opts","stdlib_builder","",null,null],[12,"source_dir","","Path to the directory with the standard library.",0,null],[12,"output","","Optional path to the output file. If not passed, result…",0,null],[12,"debug_print","","Verbose mode flag. Enables debug printing of internals…",0,null],[12,"pretty_print","","Enables pretty printing of all output including…",0,null],[5,"main","","",null,[[]]],[5,"load_module","","",null,[[["path",3]],[["error",3],["result",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"into_request","","",0,[[],["request",3]]],[11,"into_app","","",0,[[],["app",3]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"from_arg_matches","","",0,[[["argmatches",3]]]]],"p":[[3,"Opts"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);